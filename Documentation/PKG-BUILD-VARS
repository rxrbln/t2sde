
Variables used in the package build scripts
===========================================

config ........ Name of the active configuration ($base/config/$config/..)
extraver ...... version text after the fist whitespace, or $sdever
sdever ........ T2 SDE Version (including rel. date for snapshots)

pkg ........... base name part of the package we are building 
xpkg .......... derived name part of the package we are building
                if a package is not pkgfork'd, pkg == xpkg
ver ........... package Version (from *.desc - until first whitespace)
desc_[A-Z] .... Data from the *.desc file

id ............ unique ID for this Build-Pkg invocation
arch .......... architecture (subdir name in architecture)
target ........ target distribution (subdir name in targets)
stagelevel .... stagelevel (0-1 = crossbuild, 2-8 = native, 9 = rebuild)

arch_sizeof_long_long .... arch setting from architecture/*/archtest.out
arch_sizeof_int .......... arch setting from architecture/*/archtest.out
arch_machine ............. arch setting from architecture/*/archtest.out
arch_sizeof_char_p ....... arch setting from architecture/*/archtest.out
arch_sizeof_long ......... arch setting from architecture/*/archtest.out
arch_bigendian ........... arch setting from architecture/*/archtest.out
arch_sizeof_short ........ arch setting from architecture/*/archtest.out
arch_target .............. arch setting from architecture/*/archtest.out
arch_build ............... like 'arch_target' - but for the build host

archdir ....... directory containing the package tar files (download/..)
confdir ....... directory containing the package build config (package/..)
targetdir ..... directory containing the target config (target/...)
builddir ...... directory in which the package is build (src.$id)
base .......... ROCK Linux sources base directory

root .......... root directory (usually '/')
xroot ......... real root (/R.work/build/... when in chroot mode)
prefix ........ install prefix (usually '/usr' or '/opt/...')
prefix_auto ... '1' = you may auto-detect a better value for $prefix in *.conf

build_logs .... Big build log file ...... (Build-Target only)
build_pkgs .... Packagfiles go here ..... (Build-Target only)
build_root .... Chroot dir name ......... (Build-Target only)
build_toolchain T2 build system data .... (Build-Target only)

bindir ........ where the binaries (programs) should be installed
sbindir ....... where the system binaries should be installed
libdir ........ where the library files should be installed
sysconfdir .... where the configuration should be installed (i.e. etc)
localstatedir . where the variable data should be installed (i.e. var)
datadir ....... where the arch-indep. data should be installed (i.e. share)
docdir ........ where the documentation should be installed
mandir ........ where the info man pages should be installed
infodir ....... where the info files should be installed
includedir .... where the header files should be installed

autoextract ... '0' = skip automatic untar
autopatch ..... '0' = skip automatic patching
chownsrcdir ... '0' = don't make a chown to root after extracting the $srctar
nocvsinsrcdir . '0' = don't remove CVS and .svn directories in $srcdir
srctar ........ filename of source tar file ('auto' = autodetect)
srcdir ........ directory in source tar file ('auto' = autodetect)
xsrctar ....... filename of source tar file after 'auto' has been processed
xsrcdir ....... directory in source tar file after 'auto' has been processed
taropt ........ tar options for extracting

createprefix .. '0' = skip creation for directory skeleton for $prefix
createdocs .... '0' = skip automatic copying of documentation files
custmain ...... command to execute instead of 'configure, make, make install'
mainfunction .. alternate main function instead of build_this_package()

patchfiles .... list of patchfiles found in $confdir
patchopt ...... options passed to the patch program

runconf ....... set to '0' if you want to skip running configure
autogen ....... set to '1' if you want to run the autogen script
confopt ....... options for GNU autoconf './configure'
extraconfopt .. options which should be appended to $confopt by set_confopt()
configprefix .. variable declarations only for GNU autoconf './configure'
configscript .. script file name of the GNU autoconf configure script
pyscript ...... script to run 'setup.py', python by default.
pyconfopt ..... options for 'setup.py' - Python setup scripts
plconfopt ..... options for 'Makefile.pl' - Perl setup scripts

runxmkmf ...... set to '0' if you want to skip running 'xmkmf'
runmkpl ....... set to '0' if you want to skip running 'perl Makefile.PL'
runpysetup .... set to '0' if you want to skip running 'python setup.py'

makeopt ....... options for 'make' (default = ' ')
makeinstopt ... options for 'make install' (default = 'install')

crossnative ... has the value 'cross' or 'native'
archprefix .... prefix for binutils and compiler binaries (for cross-building)

flistdel ...... regex describing files which shouldn't go to package db
flistrfilter .. regex describing which lines to ignore in flist rlog
flistroot ..... list of top-level directories which should be used for flist
flistvalid .... list of directories where the build is allowed to write

check_shared ...... Check for files which are shared with other packages
check_usrlocal .... Check for files which are installed in usr/local
check_badfiles .... Check for files which are registered 'bad files'

BUILDCC ....... C compiler for helper apps (usually that's just 'cc')
BUILD_CC ...... C compiler for helper apps (must be the same as $BUILDCC)
HOSTCC ........ C compiler for helper apps (must be the same as $BUILDCC)
HOST_CC ....... C compiler for helper apps (must be the same as $BUILDCC)

MAKE .......... make executable name (including -j option according to Config)
CC ............ C compiler executable name for target architecture
CXX ........... C++ compiler executable name for target architecture
STRIP ......... strip executable name for target architecture
LD ............ ld executable name for target architecture
AR ............ ar executable name for target architecture
RANLIB ........ ranlib executable name for target architecture
AS ............ as executable name for target architecture
GASP .......... gasp executable name for target architecture
NM ............ nm executable name for target architecture

CC_WRAPPER_* ...... configuration for C compiler wrapper
CXX_WRAPPER_* ..... configuration for C++ compiler wrapper
KCC_WRAPPER_* ..... configuration for Kernel C compiler wrapper
F77_WRAPPER_* ..... configuration for Fortran 77 compiler wrapper
STRIP_WRAPPER_* ... configuration for strip wrapper

SDECFG_* ...... configuration from 'Config' file


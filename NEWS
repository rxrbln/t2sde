
At October the 3rd, "German Unification Day", 1:56:48 MEST the "T2" project
tagged the internal milestone 2.1.0-alpha ("Way to heaven"). This was just
a few hours after the estimated date that was October the 2nd - Valentin's
brithday ;-)

"T2" is a community driven fork from the ROCK Linux project which aims at
simplicity and clean implementaton instead of adding every random feature
that comes to someone's mind. "T2" aims to be open for active maintainers
and currently seven (!) people have write access to the "T2" Subversion
repository (which to our knowledge are six people more than a ROCK Linux
tree currently has). This organization provides for delivery of quick
bug and security fixes (not reling on a single person in the process),
offers a nice development climate and does not loose version control
on renames (as the sumbaster thing currently does).

The tag was done after a huge ammount of cleanup work after the fork from
ROCK Linux which happend at revision r3594 - July the 21th - 21:55:13 MEST.

The install and desktop target build reasonable well - on x86, sparc,
sparc64 (with a bit more work until -stable) as well as powerpc.

"T2" is an intern project name for "try two - (second try)" or "technology
two". A more public relation aware name will be choosen later as soon as
we find an interesting one.

Major changes from ROCK Linux 2.0-stable:

 * gcc-3.4.x used exclusively
 * a "sanizized" linux-header package which currently uses 2.6.8.1 headers

Major changes from ROCK Linux 2.1-devel when we forked:

 * no people named repositories - most packages should now be sorted
   into category repositories - which so far scale quite well

 * no package fork / package split stuff, no pseudo cross native
   compiler hacks

 * no default kernel stuff - a "saniztied" linux-header package is always used
   (always as up-to-date as possible - currently 2.6.8.1)

 * no linux*-src packages - third party modules will be build as part of any
   kernel package (will be implemented next week ;-)

Major plans for "T2" 3.0:

 * build system rewrite (maybe in C++)

 * no seperate cluster code-path, no build as root: everything is always cross-
   built using a singly code-patch as ordinary user, and optionally distributed
   via distcc

 * no build priority - instant and sophisticated dependency analysis is always
   used

The next milestones are schedules for:

 * 2.1.0-beta, October the 23th
 * 2.1.0, October the 30th (intentinally Rene's birthday ;-) 


[COPY] --- T2-COPYRIGHT-BEGIN ---
[COPY] t2/package/*/qt6base/qt6base.desc
[COPY] Copyright (C) 2006 - 2025 The T2 SDE Project
[COPY] SPDX-License-Identifier: GPL-2.0
[COPY] --- T2-COPYRIGHT-END ---

[I] A portable widget library

[T] Qt is a C++ cross-platform fully object-oriented application framework that
[T] enables rapid building of state-of-the-art GUI applications for Linux/Unix,
[T] Mac OS X, embedded Linux platforms and Microsoft Windows. It is needed by
[T] the KDE Desktop and some other GUI applications.

[U] https://qt.io

[A] Trolltech AS <www.trolltech.com>
[M] Rene Rebe <rene@t2-project.org>

[C] extra/development
[F] CROSS NO-LTO.gcc LATOMIC.riscv LATOMIC.riscv64 LATOMIC.sparc

[E] opt cups
[E] opt double-conversion

[L] LGPL
[S] Stable
[V] 6.9.3
[P] X -----5---9 127.000

[CV-GROUP] qt6
[D] 5df68d00703c18f711bcfb8ee48a61be3be44396aa9d2689f41223c5 qtbase-everywhere-src-6.9.3.tar.xz https://download.qt.io/official_releases/qt/6.9/6.9.3/submodules/

runconf=0 runmake=0 runcmake=0 createdocs=0
prefix="${SDECFG_PKG_QT6_PREFIX:-opt/qt6}"
set_confopt

var_remove_regex GCC_WRAPPER_REMOVE ' ' '-march.*'

qt_preconf() {
	QTDIR=$PWD/qtbase
	var_insert LD_LIBRARY_PATH ':' $QTDIR/lib
	var_insert PATH ':' $QTDIR/bin
	export QTDIR LD_LIBRARY_PATH PATH
	unset LD
	./configure $confopt
}
hook_add preconf 5 qt_preconf

# Qt only supports some selected options ...
confopt="-prefix /$prefix -bindir $bindir -libdir $libdir
	 -no-pch -system-zlib -system-libpng -system-libjpeg -nomake tests
	 -nomake examples -no-avx -xcb -release -opensource -confirm-license"

if atstage cross; then
	 var_append confopt ' ' "-device linux-generic-g++ -device-option CROSS_COMPILE=$arch_target- -sysroot $sysroot"
	 var_remove_regex makeopt ' ' 'CC=.*'
	 var_remove_regex makeopt ' ' 'CXX=.*'
	 var_remove_regex makeopt ' ' 'AR=.*'
	 var_remove_regex makeopt ' ' 'AS=.*'
	 var_remove_regex makeopt ' ' 'LD=.*'
	 var_remove_regex makeopt ' ' 'RANLIB=.*'
fi

# Guide to locate fontconfig header files
var_append CXX_WRAPPER_APPEND ' ' "-I$root$(pkgprefix includedir fontconfig)"
var_append CXX_WRAPPER_APPEND ' ' "-L$root$(pkgprefix libdir libxcb)"

[[ $libdir = *lib64* ]] && var_append confopt ' ' '-platform linux-g++-64'

[ "$SDECFG_PKG_QT6_EXCEPTION" = "0" ] &&
	var_append confopt ' ' -no-g++-exceptions
[ "$SDECFG_PKG_QT6_STL" = "0" ] &&
	var_append confopt ' ' -no-stl
[ "$SDECFG_PKG_QT6_QVFB" = "1" ] &&
	var_append confopt ' ' -qvfb

if pkginstalled mysql; then
	pkgprefix -t mysql
	var_append confopt ' ' -sql-mysql
	for x in CXX GCC; do
		var_append ${x}_WRAPPER_APPEND ' ' "-L$root$(pkgprefix libdir mysql)/mysql"
	done

	for x in CXX GCC CPP; do
		var_append ${x}_WRAPPER_APPEND ' ' "-I$(pkgprefix includedir mysql)/mysql"
		var_append ${x}_WRAPPER_APPEND ' ' "-I$(pkgprefix includedir mysql)"
	done
fi

if pkginstalled postgresql; then
	pkgprefix -t postgresql
	var_append confopt ' ' -sql-psql

	for x in CXX GCC; do
		var_append ${x}_WRAPPER_APPEND ' ' "-L$root$(pkgprefix libdir postgresql)"
	done

	for x in CXX GCC CPP; do
		var_append ${x}_WRAPPER_APPEND ' ' "-I$root$(pkgprefix includedir postgresql)/server"
		var_append ${x}_WRAPPER_APPEND ' ' "-I$root$(pkgprefix includedir postgresql)"
	done
fi

qt_qvfb() {
	pushd tools/qvfb
	eval make $makeopt
	ls -al qvfb*
	[ -f ../../bin/qvfb ] && cp -av ../../bin/qvfb* $root$bindir
	ls -al ../../bin/qvfb*
	[ -f qvfb ] && cp -av qvfb* $root$bindir
	popd
}
[ "$SDECFG_PKG_QT6_QVFB" = "1" ] && hook_add inmake 5 qt_qvfb

qt_postmake() {
	# create compatibility links ... but his seems that it should only be done if STL is enabled
	(cd ${root}$libdir/; for x in libqt-mt.so*; do
		ln -svf $x ${x/-mt}
	done)
	
	find $docdir -name '*.o' | xargs rm -vf
	
	cat > $root/etc/profile.d/qt6 <<-EOT
QT6DIR=/$prefix
#QTDIR=/$prefix
export QT6DIR # QTDIR
EOT
}
hook_add postmake 5 qt_postmake

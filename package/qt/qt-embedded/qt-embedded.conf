# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../qt-embedded/qt-embedded.conf
# Copyright (C) 2008 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- T2-COPYRIGHT-NOTE-END ---


prefix="opt/qtembedded"
set_confopt

# needed by demos/shared/*
export AR="$AR cqs"

# confuses the qmake build system
var_remove_regex makeopt ' ' 'CC=.*'
var_remove_regex makeopt ' ' 'CXX=.*'
var_remove_regex makeopt ' ' 'CPP=.*'
unset CC
unset CXX


# Qt config
confopt="-prefix /$prefix -qt-gif -system-zlib -system-libpng -system-libjpeg"

# Build mode
if [ $SDECFG_DEBUG -ne 0 ]; then
	var_append confopt ' ' '-debug'
else
	var_append confopt ' ' '-release'
fi

# Qt Embedded
case "$SDECFG_ARCH" in
	arm|sh|mips|powerpc|x86|x86_64)
		var_append confopt ' ' "-embedded $SDECFG_ARCH" ;;
	*)
		var_append confopt ' ' "-embedded generic" ;;
esac

# Graphic driver support
var_append confopt ' ' '-qt-gfx-linuxfb'
if [ $SDECFG_CROSSBUILD -eq 0 ]; then
	var_append confopt ' ' '-plugin-gfx-qvfb -plugin-gfx-vnc -qt-mouse-qvfb -qt-mouse-pc'
else
	var_append confopt ' ' '-qt-kbd-tty -qt-kbd-usb'
	var_append confopt ' ' '-qt-mouse-pc -qt-mouse-linuxtp -qt-mouse-bus'
fi
pkginstalled directfb && var_append confopt ' ' '-plugin-gfx-directfb'

# Bits per Pixel
var_append confopt ' ' "-depths 8,16,24,32"

# Qt decoration
var_append confopt ' ' "-qt-decoration-styled -qt-decoration-default -plugin-decoration-windows"

# Freetype2 font support
if pkginstalled freetype; then
	var_append confopt ' ' '-system-freetype'
	var_append GCC_WRAPPER_APPEND ' ' "-I$(pkgprefix includedir freetype)/freetype2"
	var_append CXX_WRAPPER_APPEND ' ' "-I$(pkgprefix includedir freetype)/freetype2"
else
	var_append confopt ' ' "-qt-freetype"
fi

# Database support
pkginstalled sqlite && var_append confopt ' ' "-system-sqlite" || var_append confopt " " "-plugin-sql-sqlite"

# DBUS support
pkginstalled dbus && var_append confopt ' ' '-qdbus' || var_append confopt ' ' '-no-qdbus'

# Exceptions support
if [ $SDECFG_PKG_QTE_EH -eq 1 ]; then
	var_append confopt ' ' '-exceptions'
fi

# Standard Template Library
if [ $SDECFG_PKG_QTE_STL -eq 1 ]; then
	var_append confopt " " "-stl"
fi

# Qt3 compatibility support
if [ $SDECFG_PKG_QTE_QT3 -eq 0 ]; then
	var_append confopt " " "-no-qt3support"
fi

# CUPS & NIS
if [ $SDECFG_PKG_QTE_CUPS -eq 0 ]; then
	var_append confopt ' ' '-no-cups'
fi
if [ $SDECFG_PKG_QTE_NIS -eq 0 ]; then
	var_append confopt ' ' '-no-nis'
fi

# Skip the examples
if [ $SDECFG_PKG_QTE_EXAMPLES -eq 0 ]; then
	var_append confopt ' ' '-nomake examples'
fi

# Force pkg-config usage, works for cross builds either
if [ $SDECFG_CROSSBUILD -ne 0 ]; then
	var_append confopt ' ' '-force-pkg-config'
fi

var_append confopt ' ' '-v -continue'

qtopia_preconf() {
	if [ "$arch_bigendian" = "yes" ]; then
		var_append confopt " " "-big-endian"
	else
		var_append confopt " " "-little-endian"
	fi
	
	if [ $arch = arm ]; then
		sed -i -e "s,arm-linux-gcc,$arch_target-gcc,g" -e "s,arm-linux-g++,$arch_target-g++,g" mkspecs/qws/linux-arm-g++/qmake.conf
	fi
	
	if [ $arch = mips ]; then
		sed -i -e "s,mipsel-linux-gcc,$arch_target-gcc,g" -e "s,mipsel-linux-g++,$arch_target-g++,g" mkspecs/qws/linux-mips-g++/qmake.conf
		sed -i -e "s,-mips32,,g" mkspecs/qws/linux-mips-g++/qmake.conf
	fi

	if [ $arch = sh ]; then
		sed -i -e "s,sh-linux-gcc,$arch_target-gcc,g" -e "s,sh-linux-g++,$arch_target-g++,g" mkspecs/qws/linux-sh-g++/qmake.conf
	fi

	echo "Running Qt-Embedded configure with: $confopt"
	echo "yes" | ( ./configure $confopt )
}

qtopia_setup ()
{
	cat > $root/etc/profile.d/qt-embedded <<-EOT
QPEDIR=/$prefix
QPEHOME=/$prefix
export QPEDIR QPEHOME
EOT
}

qtopia_cross_conf ()
{
	for TOOL in moc rcc uic uic3; do
		echo "Pre-configure $TOOL"

		[ -f src/Makefile ] && sed -i -e "/tools\/${TOOL}/ { s,qws/linux-${SDECFG_ARCH}-g++,qws/linux-generix-g++,g }" src/Makefile
		sed -i -e 's,$(CXX),$(HOSTCXX),g' -e 's,$(CC),$(HOSTCC),g' src/tools/${TOOL}/Makefile

		#(cd src/tools/$TOOL; ../../../bin/qmake -spec ../../../mkspecs/qws/linux-generic-g++ -unix -o Makefile -nocache $TOOL.pro)
	done
}
[ $SDECFG_CROSSBUILD -eq 1 ] && hook_add premake 5 "qtopia_cross_conf"

qtopia_makeqpf ()
{
	(cd tools/makeqpf; ../../bin/qmake makeqpf.pro)
	make -C tools/makeqpf $makeopt
	make -C tools/makeqpf $makeinstopt
}
[ "$SDECFG_PKG_QTE_MAKEQPF" -eq 1 ] && hook_add postmake 3 "qtopia_makeqpf"

qtopia_cross_moc ()
{
	mks="$root/$prefix/mkspecs/defauls/qmake.conf"
	if [ -f $mks ]; then
		echo "Tweaking moc/uic qmake path settings for cross-compile environment"
		sed -i -e '/^QMAKE_MOC$/d' -e '/^QMAKE_UIC/d' $mks
		cat >> $mks <<-EOT

QMAKE_MOC = $(QPEDIR)/bin/moc
QMAKE_UIC = $(QPEDIR)/bin/uic

EOT
	fi
}
[ $SDECFG_CROSSBUILD -eq 1 ] && hook_add postmake 5 "qtopia_cross_moc"

# Do not build tutorials and examples. Tools and Plugins are build during install.
#var_append makeopt " " "symlinks src-qmake src-moc sub-src"

var_append makeinstopt ' ' "INSTALL_ROOT=$root"

hook_add preconf 5 "qtopia_preconf"
hook_add postmake 5 "qtopia_setup"

createdocs=0
runconf=0

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../orsa/gcc43.patch
# Copyright (C) 2009 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

diff -Naur orsa-0.7.0/src/liborsa/orsa_coord.cc orsa-0.7.0.new/src/liborsa/orsa_coord.cc
--- orsa-0.7.0/src/liborsa/orsa_coord.cc	2004-09-21 15:44:20.000000000 -0400
+++ orsa-0.7.0.new/src/liborsa/orsa_coord.cc	2008-06-11 06:40:39.000000000 -0400
@@ -26,6 +26,7 @@
 
 #include <cmath>
 #include <iostream>
+#include <cstdlib>
 
 using namespace std;
 
diff -Naur orsa-0.7.0/src/liborsa/orsa_file.cc orsa-0.7.0.new/src/liborsa/orsa_file.cc
--- orsa-0.7.0/src/liborsa/orsa_file.cc	2005-01-10 20:01:11.000000000 -0500
+++ orsa-0.7.0.new/src/liborsa/orsa_file.cc	2008-06-11 06:44:22.000000000 -0400
@@ -27,6 +27,8 @@
 #include <iostream>
 
 #include <ctype.h>
+#include <cstring>
+#include <algorithm>
 
 #include "orsa_common.h"
 #include "orsa_units.h"
@@ -1126,7 +1128,7 @@
   
   Vector LocationFile::ObsPos(const string obscode, const Date &date) {
     
-    std::list<std::string>::iterator it_find = find(codes.begin(),codes.end(),obscode);
+    std::list<std::string>::iterator it_find = std::find(codes.begin(),codes.end(),obscode);
     if (it_find == codes.end()) {
       ORSA_ERROR("obscode %s not found in file %s",obscode.c_str(),GetFileName().c_str());      
       return Vector();
diff -Naur orsa-0.7.0/src/liborsa/orsa_file_jpl.cc orsa-0.7.0.new/src/liborsa/orsa_file_jpl.cc
--- orsa-0.7.0/src/liborsa/orsa_file_jpl.cc	2005-01-04 21:25:06.000000000 -0500
+++ orsa-0.7.0.new/src/liborsa/orsa_file_jpl.cc	2008-06-11 06:44:35.000000000 -0400
@@ -27,6 +27,7 @@
 #include "orsa_secure_math.h"
 
 #include <cstdio>
+#include <cstring>
 
 #include "sdncal.h"
 #include "jpleph.h"
diff -Naur orsa-0.7.0/src/liborsa/orsa_interaction.cc orsa-0.7.0.new/src/liborsa/orsa_interaction.cc
--- orsa-0.7.0/src/liborsa/orsa_interaction.cc	2005-01-04 17:31:25.000000000 -0500
+++ orsa-0.7.0.new/src/liborsa/orsa_interaction.cc	2008-06-11 06:41:24.000000000 -0400
@@ -28,6 +28,7 @@
 #include "orsa_error.h"
 
 #include <cmath>
+#include <cstring>
 #include <iostream>
 
 using namespace std;
diff -Naur orsa-0.7.0/src/liborsa/orsa_interaction_tree.cc orsa-0.7.0.new/src/liborsa/orsa_interaction_tree.cc
--- orsa-0.7.0/src/liborsa/orsa_interaction_tree.cc	2004-10-01 20:04:30.000000000 -0400
+++ orsa-0.7.0.new/src/liborsa/orsa_interaction_tree.cc	2008-06-11 06:41:42.000000000 -0400
@@ -27,6 +27,7 @@
 #include "orsa_universe.h"
 
 #include <iostream>
+#include <cstring>
 #include <list>
 #include <stack>
 #include <map>
diff -Naur orsa-0.7.0/src/liborsa/orsa_units.h orsa-0.7.0.new/src/liborsa/orsa_units.h
--- orsa-0.7.0/src/liborsa/orsa_units.h	2005-01-04 22:54:27.000000000 -0500
+++ orsa-0.7.0.new/src/liborsa/orsa_units.h	2008-06-11 06:37:55.000000000 -0400
@@ -28,6 +28,7 @@
 #include <cmath>
 #include <string>
 #include <cstdio>
+#include <cstdlib>
 
 #include "orsa_secure_math.h"
 #include "orsa_coord.h"
@@ -181,7 +182,7 @@
     inline static double __int_pow__(const double x, const int p) {
       if (p == 0) return 1.0;
       double _pow = x;
-      const unsigned int max_k = static_cast<unsigned int>(std::abs(p));
+      const unsigned int max_k = static_cast<unsigned int>(abs(p));
       for (unsigned int k=1; k < max_k; ++k) {
 	_pow *= x;
       }
diff -Naur orsa-0.7.0/src/libxorsa/xorsa_plot_area.h orsa-0.7.0.new/src/libxorsa/xorsa_plot_area.h
--- orsa-0.7.0/src/libxorsa/xorsa_plot_area.h	2005-01-04 21:25:06.000000000 -0500
+++ orsa-0.7.0.new/src/libxorsa/xorsa_plot_area.h	2008-06-11 06:47:20.000000000 -0400
@@ -57,7 +57,13 @@
   }
 }
 
+#ifdef __cplusplus
+extern "C" {
+#endif
 extern char *MonthNameShort[13]; // sdncal.h
+#ifdef __cplusplus
+}
+#endif
 
 void FineDate(QString & label, const orsa::UniverseTypeAwareTime & t, bool=true);
 void FineDate_HMS(QString & label, const orsa::UniverseTypeAwareTime & t);


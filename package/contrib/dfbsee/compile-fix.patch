# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../dfbsee/compile-fix.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---
diff -Nur DFBSee-0.7.4.orig/src/main.c DFBSee-0.7.4/src/main.c
--- DFBSee-0.7.4.orig/src/main.c	2002-11-02 01:08:18.000000000 +0200
+++ DFBSee-0.7.4/src/main.c	2005-11-01 17:57:22.000000000 +0200
@@ -53,7 +53,7 @@
 main (int    argc, 
       char **argv)
 {
-  DFBCardCapabilities    caps;
+  DFBGraphicsDeviceDescription    desc;
   DFBSurfaceDescription  dsc;
   IDirectFBEventBuffer  *buffer;
   IDirectFBSurface      *image_area;
@@ -78,8 +78,8 @@
   /* create the super interface */
   DFBCHECK (DirectFBCreate (&dfb));
 
-  dfb->GetCardCapabilities (dfb, &caps);
-  hw_stretchblit = caps.acceleration_mask & DFXL_STRETCHBLIT;
+  dfb->GetDeviceDescription (dfb, &desc);
+  hw_stretchblit = desc.acceleration_mask & DFXL_STRETCHBLIT;
   
   dfb->SetCooperativeLevel (dfb, DFSCL_FULLSCREEN);
 
diff -Nur DFBSee-0.7.4.orig/src/rotate.c DFBSee-0.7.4/src/rotate.c
--- DFBSee-0.7.4.orig/src/rotate.c	2002-08-26 21:14:14.000000000 +0200
+++ DFBSee-0.7.4/src/rotate.c	2005-11-01 18:02:17.000000000 +0200
@@ -43,9 +43,9 @@
         {\
           *d = *s;\
           s++;\
-          (__u8*)d += dest_pitch;\
+          d = ((void*) d) + dest_pitch;\
         }\
-      (__u8*)src += src_pitch;\
+      src = ((void*) src) + src_pitch;\
     }\
 }\
 
@@ -53,7 +53,7 @@
 {\
   type d;\
   type s;\
-  (__u8 *) dest += (height - 1) * dest_pitch;\
+  dest = ((void*) dest) + (height - 1) * dest_pitch;\
   for (w = 0; w < width; w++)\
     {\
       h = height;\
@@ -63,9 +63,9 @@
         {\
           *d = *s;\
           s++;\
-          (__u8*)d -= dest_pitch;\
+          d = ((void*) d) - dest_pitch;\
         }\
-      (__u8*)src += src_pitch;\
+      src = ((void*) src) + src_pitch;\
     }\
 }\
 
@@ -73,7 +73,7 @@
 {\
   type d;\
   type s;\
-  (__u8 *) dest += (height - 1) * dest_pitch;\
+  dest = ((void*) dest) + (height - 1) * dest_pitch;\
   while (--height)\
     {\
       d = (type) dest + width - 1;\
@@ -85,8 +85,8 @@
           s++;\
           d--;\
         }\
-      (__u8*)src += src_pitch;\
-      (__u8*)dest -= dest_pitch;\
+      src  = ((void*) src)  - src_pitch;\
+      dest = ((void*) dest) + dest_pitch;\
     }\
 }\
 
@@ -172,7 +172,7 @@
   source->Lock (source, DSLF_READ, &src, &src_pitch);
   destination->Lock (destination, DSLF_READ, &dest, &dest_pitch);
 
-  (__u8 *) dest += dest_pitch * y + DFB_BYTES_PER_PIXEL (pixelformat) * x;
+  dest += dest_pitch * y + DFB_BYTES_PER_PIXEL (pixelformat) * x;
 
   rotate (dest, dest_pitch,
           src, src_pitch, width, height, DFB_BYTES_PER_PIXEL (pixelformat),

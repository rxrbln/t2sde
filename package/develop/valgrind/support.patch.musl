# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../valgrind/support.patch.musl
# Copyright (C) 2016 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- valgrind-3.12.0/include/pub_tool_redir.h.vanilla	2016-12-24 20:17:43.521422224 +0000
+++ valgrind-3.12.0/include/pub_tool_redir.h	2016-12-24 20:19:39.861421702 +0000
@@ -243,7 +243,11 @@
 /* --- Soname of the standard C library. --- */
 
 #if defined(VGO_linux) || defined(VGO_solaris)
+# if defined(MUSL_LIBC)
+#  define  VG_Z_LIBC_SONAME  libcZdZa              // libc.*
+#else
 #  define  VG_Z_LIBC_SONAME  libcZdsoZa              // libc.so*
+#endif
 
 #elif defined(VGO_darwin) && (DARWIN_VERS <= DARWIN_10_6)
 #  define  VG_Z_LIBC_SONAME  libSystemZdZaZddylib    // libSystem.*.dylib
@@ -275,7 +279,11 @@
 /* --- Soname of the pthreads library. --- */
 
 #if defined(VGO_linux)
+# if defined(MUSL_LIBC)
+#  define  VG_Z_LIBPTHREAD_SONAME  libcZdZa              // libc.*
+#else
 #  define  VG_Z_LIBPTHREAD_SONAME  libpthreadZdsoZd0     // libpthread.so.0
+#endif
 #elif defined(VGO_darwin)
 #  define  VG_Z_LIBPTHREAD_SONAME  libSystemZdZaZddylib  // libSystem.*.dylib
 #elif defined(VGO_solaris)
--- valgrind-3.12.0/coregrind/vg_preloaded.c.vanilla	2016-12-24 20:16:54.385422444 +0000
+++ valgrind-3.12.0/coregrind/vg_preloaded.c	2016-12-24 20:17:29.237422288 +0000
@@ -57,7 +57,7 @@
 void VG_NOTIFY_ON_LOAD(freeres)(Vg_FreeresToRun to_run);
 void VG_NOTIFY_ON_LOAD(freeres)(Vg_FreeresToRun to_run)
 {
-#  if !defined(__UCLIBC__) \
+#  if !defined(__UCLIBC__) || !defined(__MUSL_LIBC__) \
       && !defined(VGPV_arm_linux_android) \
       && !defined(VGPV_x86_linux_android) \
       && !defined(VGPV_mips32_linux_android) \
--- valgrind-3.12.0/configure.vanilla	2016-12-24 20:13:27.737423371 +0000
+++ valgrind-3.12.0/configure	2016-12-24 20:16:41.853422500 +0000
@@ -6966,6 +6966,13 @@
 fi
 rm -f conftest*
 
+# GLIBC_VERSION is empty if a musl libc is used, so use the toolchain tuple
+# in this case.
+if test x$GLIBC_VERSION = x; then
+    if $CC -dumpmachine | grep -q musl; then
+        GLIBC_VERSION=musl
+    fi
+fi
 
 # there is only one version of libc on Solaris
 if test x$VGCONF_PLATFORM_PRI_CAPS = xX86_SOLARIS \
@@ -7044,6 +7051,12 @@
 	# DEFAULT_SUPP set in host_os switch-case above.
 	# No other suppression file is used.
 	;;
+     musl)
+	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: Musl" >&5
+ $as_echo "Musl" >&6; }
+	# DEFAULT_SUPP set in host_os switch-case above.
+	# No other suppression file is used.
+	;;
      2.0|2.1|*)
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported version ${GLIBC_VERSION}" >&5
 $as_echo "unsupported version ${GLIBC_VERSION}" >&6; }


[COPY] --- ROCK-COPYRIGHT-NOTE-BEGIN ---
[COPY] 
[COPY] This copyright note is auto-generated by ./scripts/Create-CopyPatch.
[COPY] Please add additional copyright information _after_ the line containing
[COPY] the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
[COPY] the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
[COPY] 
[COPY] ROCK Linux: rock-src/package/*/commonc++/commonc++.desc
[COPY] Copyright (C) 1998 - 2003 ROCK Linux Project
[COPY] 
[COPY] This program is free software; you can redistribute it and/or modify
[COPY] it under the terms of the GNU General Public License as published by
[COPY] the Free Software Foundation; either version 2 of the License, or
[COPY] (at your option) any later version. A copy of the GNU General Public
[COPY] License can be found at Documentation/COPYING.
[COPY] 
[COPY] Many people helped and are helping developing ROCK Linux. Please
[COPY] have a look at http://www.rocklinux.org/ and the Documentation/TEAM
[COPY] file for details.
[COPY] 
[COPY] --- ROCK-COPYRIGHT-NOTE-END ---

[I] Portable set of basis classes for C++

[T] Common C++ offers a set of "portable" classes that can be used to build
[T] highly portable applications in C++. In particular, Common C++ offers
[T] classes that abstract threading, sockets, synchronization, serial I/O,
[T] "config" file parsing, class object persistence, shared object module
[T] loading, daemon management, and optimized "block" and memory mapped file
[T] I/O under a set of consistent classes that your application can then
[T] be built from. The goal is to write your application to use the portable
[T] abstract services and classes of the Common C++ libraries rather than
[T] having to access low level system services directly.

[U] http://www.gnu.org/software/commonc++/

[A] David Sugar and Daniel Silverstone
[M] Rene Rebe <rene@exactcode.de>

[C] extra/development

[L] GPL
[S] Stable
[V] 1.3.2
[P] X -----5---9 140.400

[D] 3031131399 commoncpp2-1.3.2.tar.gz ftp://ftp.gnu.org/pub/gnu/commonc++/


# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../clang/clang.conf
# Copyright (C) 2019 - 2020 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- T2-COPYRIGHT-NOTE-END ---

hook_add preconf 5 "mkdir -p objdir; cd objdir"
cmakelists="../CMakeLists.txt"

#atstage cross && export DESTDIR="$root"
var_append cmakeopt " " "-DCMAKE_BUILD_TYPE:STRING=Release"
var_append cmakeopt " " "-DCLANG_DEFAULT_TARGET_TRIPLE=$arch_target"

false && var_append cmakeopt " " \
	"-DCLANG_DEFAULT_CXX_STDLIB=libc++ \
	-DCLANG_DEFAULT_RTLIB=compiler-rt \
	-DCLANG_DEFAULT_UNWINDLIB=libunwind"

if atstage toolchain; then
	var_append cmakeopt " " "-DDEFAULT_SYSROOT=$sysroot"
	#-DLLVM_TARGET_ARCH=ARM
	#-DLLVM_TARGETS_TO_BUILD=ARM
	hook_add postmake 5 "install bin/clang-tblgen $root$bindir/"
elif atstage cross; then
	var_append cmakeopt " " "-DCLANG_TABLEGEN=$root/TOOLCHAIN/$toolsdir/bin/clang-tblgen"
	#var_append cmakeopt " " "-DLLVM_MAIN_INCLUDE_DIR=$includedir"
	#var_append cmakeopt " " "-DLLVM_LIBRARY_DIR=/$libdir"
	var_append GCC_WRAPPER_FILTER '|' "sed 's,$root/TOOLCHAIN.*libLLVM\(.*\)\.[as].*,-lLLVM\1,g'"
fi

[ "${libdir##*/lib}" ] && var_append cmakeopt " " "-DLLVM_LIBDIR_SUFFIX=${libdir##*/lib}"
#var_append cmakeopt " " "-DBUILD_SHARED_LIBS=ON"
var_append cmakeopt " " ".."

#hook_add prepatch 5 "patch -p0 < `match_source_file -p diff`"

# inject actual g++ version dependent system header include path
inject_cxx_search_path() {
	touch config.{c,cc}
	local p="`gcc -v config.c -fsyntax-only 2>&1 | grep -A 4 "<...> search starts" | grep gcc | sed -n '$s/ *//p'`"
	local p2="`gcc -v config.cc -fsyntax-only 2>&1 | grep -A 1 "<...> search starts" | sed -n '$s/ *//p'`"
	local gcc_arch_target="`echo $p | cut -d / -f 5`"
	local dir32="" dir64=""
	[[ "$libdir" == *lib64 ]] && dir32=32
	
	sed -i -e "s,@T2SDE_SYSTEM_INCLUDE_PATH@,$p," \
	       -e "s,@T2SDE_CXX_SYSTEM_INCLUDE_PATH@,$p2," \
	       -e "s,@T2SDE_ARCH_TARGET@,$gcc_arch_target," \
	       -e "s,@T2SDE_DIR32@,$dir32," -e "s,@T2SDE_DIR64@,$dir64," \
	    lib/Frontend/InitHeaderSearch.cpp
}
hook_add preconf 3 "inject_cxx_search_path"

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by scripts/Create-CopyPatch.
# 
# T2 SDE: package/*/strace/riscv32.patch
# Copyright (C) 2021 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Signed-off-by: Alistair Francis <alistair.francis at wdc.com>
---
 Makefile.am                                 | 20 ++++++++--------
 configure.ac                                |  6 ++++-
 dist/INSTALL                                |  2 +-
 src/linux/riscv/arch_defs_.h                    | 16 +++++++++++++
 src/linux/{riscv64 => riscv}/arch_regs.c        |  0
 src/linux/riscv/asm_stat.h                      | 26 +++++++++++++++++++++
 src/linux/{riscv64 => riscv}/get_error.c        |  0
 src/linux/{riscv64 => riscv}/get_scno.c         |  0
 src/linux/{riscv64 => riscv}/get_syscall_args.c |  0
 src/linux/{riscv64 => riscv}/ioctls_arch0.h     |  0
 src/linux/riscv/ioctls_inc0.h                   |  7 ++++++
 src/linux/{riscv64 => riscv}/raw_syscall.h      |  0
 src/linux/{riscv64 => riscv}/set_error.c        |  0
 src/linux/{riscv64 => riscv}/set_scno.c         |  0
 src/linux/{riscv64 => riscv}/syscallent.h       |  8 ++++++-
 src/linux/riscv64/ioctls_inc0.h                 |  1 -
 src/riscv.c                                     |  4 ++--
 17 files changed, 74 insertions(+), 16 deletions(-)
 create mode 100644 src/linux/riscv/arch_defs_.h
 rename src/linux/{riscv64 => src/riscv}/arch_regs.c (100%)
 create mode 100644 src/linux/riscv/asm_stat.h
 rename src/linux/{riscv64 => src/riscv}/get_error.c (100%)
 rename src/linux/{riscv64 => src/riscv}/get_scno.c (100%)
 rename src/linux/{riscv64 => src/riscv}/get_syscall_args.c (100%)
 rename src/linux/{riscv64 => src/riscv}/ioctls_arch0.h (100%)
 create mode 100644 src/linux/riscv/ioctls_inc0.h
 rename src/linux/{riscv64 => src/riscv}/raw_syscall.h (100%)
 rename src/linux/{riscv64 => src/riscv}/set_error.c (100%)
 rename src/linux/{riscv64 => src/riscv}/set_scno.c (100%)
 rename src/linux/{riscv64 => src/riscv}/syscallent.h (64%)
 delete mode 100644 src/linux/riscv64/ioctls_inc0.h

diff --git a/Makefile.am b/Makefile.am
index 9c62218f..4955654b 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -739,16 +739,19 @@ EXTRA_DIST =				\
 	linux/powerpc64le/set_scno.c	\
 	linux/powerpc64le/syscallent.h	\
 	linux/powerpc64le/userent.h	\
-	linux/riscv64/arch_regs.c		\
-	linux/riscv64/get_error.c		\
-	linux/riscv64/get_scno.c		\
-	linux/riscv64/get_syscall_args.c	\
-	linux/riscv64/ioctls_arch0.h	\
-	linux/riscv64/ioctls_inc0.h	\
-	linux/riscv64/raw_syscall.h	\
-	linux/riscv64/set_error.c		\
-	linux/riscv64/set_scno.c		\
-	linux/riscv64/syscallent.h	\
+	linux/riscv/arch_regs.c		\
+	linux/riscv/get_error.c		\
+	linux/riscv/get_scno.c		\
+	linux/riscv/get_syscall_args.c	\
+	linux/riscv/ioctls_arch0.h	\
+	linux/riscv/ioctls_inc0.h	\
+	linux/riscv/raw_syscall.h	\
+	linux/riscv/set_error.c		\
+	linux/riscv/set_scno.c		\
+	linux/riscv/syscallent.h	\
+ 	linux/rt_sigframe.h		\
+ 	linux/s390/arch_defs_.h		\
+ 	linux/s390/arch_regs.c		\
 	linux/s390/arch_defs_.h		\
 	linux/s390/arch_regs.c		\
 	linux/s390/arch_sigreturn.c	\
diff --git a/configure.ac b/configure.ac
index dd4f13f4..4a53681c 100644
--- a/configure.ac
+++ b/configure.ac
@@ -157,9 +157,12 @@
 		esac
 	fi
 	;;
+riscv32*)
+	arch=riscv
+	AC_DEFINE([RISCV32], 1, [Define for the RISC-V 32-bit architecture])
+	;;
 riscv64*)
-	arch=riscv64
-	karch=riscv
+	arch=riscv
 	AC_DEFINE([RISCV64], 1, [Define for the RISC-V 64-bit architecture])
 	;;
 s390)
diff --git a/dist/INSTALL b/dist/INSTALL
index 0d22512b..19e059cf 100644
--- a/INSTALL
+++ b/INSTALL
@@ -63,7 +63,7 @@ Taking the aforementioned into account, there are the following requirements:
 
  - gawk (at least version 3)
  - Ability to compile for m32 personality (on architectures where it is supported)
-  - On x86_64, x32, powerpc64, sparc64, riscv64, tile64: gcc -m32
+  - On x86_64, x32, powerpc64, sparc64, riscv32, riscv64, tile64: gcc -m32
   - s390x: gcc -m31
   - AArch64: a separate compiler for armv7 EABI
    - See information about configuration in "1.3.2. AArch64: AArch32 support"
diff --git a/src/linux/riscv/arch_defs_.h b/src/linux/riscv/arch_defs_.h
new file mode 100644
index 00000000..5b8263d0
--- /dev/null
+++ b/src/linux/riscv/arch_defs_.h
@@ -0,0 +1,16 @@
+/*
+ * Fallback file for arch-specific definitions.
+ *
+ * Copyright (c) 2020 The strace developers.
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: LGPL-2.1-or-later
+ */
+
+#define ARCH_TIMESIZE 64
+
+#if defined(RISCV32)
+# define HAVE_ARCH_TIME32_SYSCALLS 0
+#endif
+
+#define HAVE_ARCH_OLD_TIME64_SYSCALLS 0
diff --git a/src/linux/riscv64/arch_regs.c b/src/linux/riscv/arch_regs.c
similarity index 100%
rename from src/linux/riscv64/arch_regs.c
rename to src/linux/riscv/arch_regs.c
diff --git a/src/linux/riscv/asm_stat.h b/src/linux/riscv/asm_stat.h
new file mode 100644
index 00000000..73341454
--- /dev/null
+++ b/src/linux/riscv/asm_stat.h
@@ -0,0 +1,26 @@
+/*
+ * Copyright (c) 2020 The strace developers.
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: LGPL-2.1-or-later
+ */
+
+#ifndef STRACE_RISCV_ASM_STAT_H
+# define STRACE_RISCV_ASM_STAT_H
+
+# include "linux/generic/asm_stat.h"
+
+# if defined(RISCV32)
+#  undef dev_t
+#  undef ino_t
+#  undef off64_t
+#  undef off_t
+#  undef time_t
+
+#  define dev_t		__kernel_loff_t
+#  define ino_t		__kernel_loff_t
+#  define off64_t	__kernel_off64_t
+#  define off_t		__kernel_off64_t
+#  define time_t	__kernel_time64_t
+# endif /* defined(RISCV32) */
+#endif /* !STRACE_RISCV_ASM_STAT_H */
diff --git a/src/linux/riscv64/get_error.c b/src/linux/riscv/get_error.c
similarity index 100%
rename from src/linux/riscv64/get_error.c
rename to src/linux/riscv/get_error.c
diff --git a/src/linux/riscv64/get_scno.c b/src/linux/riscv/get_scno.c
similarity index 100%
rename from src/linux/riscv64/get_scno.c
rename to src/linux/riscv/get_scno.c
diff --git a/src/linux/riscv64/get_syscall_args.c b/src/linux/riscv/get_syscall_args.c
similarity index 100%
rename from src/linux/riscv64/get_syscall_args.c
rename to src/linux/riscv/get_syscall_args.c
diff --git a/src/linux/riscv64/ioctls_arch0.h b/src/linux/riscv/ioctls_arch0.h
similarity index 100%
rename from src/linux/riscv64/ioctls_arch0.h
rename to src/linux/riscv/ioctls_arch0.h
diff --git a/src/linux/riscv/ioctls_inc0.h b/src/linux/riscv/ioctls_inc0.h
new file mode 100644
index 00000000..cc39332f
--- /dev/null
+++ b/src/linux/riscv/ioctls_inc0.h
@@ -0,0 +1,7 @@
+#if defined(RISCV64)
+# include "../64/ioctls_inc.h"
+#elif defined(RISCV32)
+# include "../32/ioctls_inc.h"
+#else
+# error "Unsupported RISC-V xlen"
+#endif
diff --git a/src/linux/riscv64/raw_syscall.h b/src/linux/riscv/raw_syscall.h
similarity index 100%
rename from src/linux/riscv64/raw_syscall.h
rename to src/linux/riscv/raw_syscall.h
diff --git a/src/linux/riscv64/set_error.c b/src/linux/riscv/set_error.c
similarity index 100%
rename from src/linux/riscv64/set_error.c
rename to src/linux/riscv/set_error.c
diff --git a/src/linux/riscv64/set_scno.c b/src/linux/riscv/set_scno.c
similarity index 100%
rename from src/linux/riscv64/set_scno.c
rename to src/linux/riscv/set_scno.c
diff --git a/src/linux/riscv64/syscallent.h b/src/linux/riscv/syscallent.h
similarity index 64%
rename from src/linux/riscv64/syscallent.h
rename to src/linux/riscv/syscallent.h
index 60c6ce58..c8fb3b8f 100644
--- a/src/linux/riscv64/syscallent.h
+++ b/src/linux/riscv/syscallent.h
@@ -5,7 +5,13 @@
  * SPDX-License-Identifier: LGPL-2.1-or-later
  */
 
-#include "../64/syscallent.h"
+#if defined(RISCV64)
+# include "../64/syscallent.h"
+#elif defined(RISCV32)
+# include "../32/syscallent.h"
+#else
+# error "Unsupported RISC-V xlen"
+#endif
 
 /* #define __NR_riscv_flush_icache (__NR_arch_specific_syscall + 15) */
 [259] = { 3,	TM,		SEN(riscv_flush_icache),	"riscv_flush_icache"	},
diff --git a/src/linux/riscv64/ioctls_inc0.h b/src/linux/riscv64/ioctls_inc0.h
deleted file mode 100644
index f9939faa..00000000
--- a/src/linux/riscv64/ioctls_inc0.h
+++ /dev/null
@@ -1 +0,0 @@
-#include "../64/ioctls_inc.h"
diff --git a/riscv.c b/riscv.c
index 825eb293..20094ba5 100644
--- a/src/riscv.c
+++ b/src/riscv.c
@@ -9,7 +9,7 @@
 
 #include "defs.h"
 
-#ifdef RISCV64
+#if defined(RISCV64) || defined(RISCV32)
 
 # include "xlat/riscv_flush_icache_flags.h"
 
@@ -30,4 +30,4 @@ SYS_FUNC(riscv_flush_icache)
 	return RVAL_DECODED;
 }
 
-#endif /* RISCV64 */
+#endif /* defined(RISCV64) || defined(RISCV32) */
-- 
2.25.0

--- strace-5.10/src/config.h.in.vanilla	2021-02-13 16:11:28.950662094 +0100
+++ strace-5.10/src/config.h.in	2021-02-13 16:12:01.681663752 +0100
@@ -2185,9 +2185,6 @@
 /* Define to 1 if you have the <gcov.h> header file. */
 #undef HAVE_GCOV_H
 
-/* Define to 1 if you have the <gnu_stubs> header file. */
-#undef HAVE_GNU_STUBS
-
 /* Define to 1 if you have the <gnu/stubs-32.h> header file. */
 #undef HAVE_GNU_STUBS_32_H
 
@@ -2398,8 +2395,8 @@
 /* Define to 1 if 'st_mtime_nsec' is a member of m32 'struct stat'. */
 #undef HAVE_M32_STRUCT_STAT_ST_MTIME_NSEC
 
-/* Define to 1 if you have the <memory.h> header file. */
-#undef HAVE_MEMORY_H
+/* Define to 1 if you have the <minix/config.h> header file. */
+#undef HAVE_MINIX_CONFIG_H
 
 /* Define to 1 if you have the <mqueue.h> header file. */
 #undef HAVE_MQUEUE_H
@@ -2482,6 +2479,9 @@
 /* Define to 1 if you have the <stdint.h> header file. */
 #undef HAVE_STDINT_H
 
+/* Define to 1 if you have the <stdio.h> header file. */
+#undef HAVE_STDIO_H
+
 /* Define to 1 if you have the <stdlib.h> header file. */
 #undef HAVE_STDLIB_H
 
@@ -3677,6 +3677,9 @@
 /* Define to 1 if you have the <ustat.h> header file. */
 #undef HAVE_USTAT_H
 
+/* Define to 1 if you have the <wchar.h> header file. */
+#undef HAVE_WCHAR_H
+
 /* Define to 1 if the system provides _Static_assert */
 #undef HAVE__STATIC_ASSERT
 
@@ -3776,6 +3779,9 @@
 /* Define for the little endian PowerPC64 architecture. */
 #undef POWERPC64LE
 
+/* Define for the RISC-V 32-bit architecture */
+#undef RISCV32
+
 /* Define for the RISC-V 64-bit architecture */
 #undef RISCV64
 
@@ -3815,7 +3821,9 @@
 /* Define for the SPARC64 architecture. */
 #undef SPARC64
 
-/* Define to 1 if you have the ANSI C header files. */
+/* Define to 1 if all of the C90 standard headers exist (not just the ones
+   required in a freestanding environment). This macro is provided for
+   backward compatibility; new code need not use it. */
 #undef STDC_HEADERS
 
 /* Define for the Tile architecture */
@@ -3834,21 +3842,87 @@
 #ifndef _ALL_SOURCE
 # undef _ALL_SOURCE
 #endif
+/* Enable general extensions on macOS.  */
+#ifndef _DARWIN_C_SOURCE
+# undef _DARWIN_C_SOURCE
+#endif
+/* Enable general extensions on Solaris.  */
+#ifndef __EXTENSIONS__
+# undef __EXTENSIONS__
+#endif
 /* Enable GNU extensions on systems that have them.  */
 #ifndef _GNU_SOURCE
 # undef _GNU_SOURCE
 #endif
-/* Enable threading extensions on Solaris.  */
+/* Enable X/Open compliant socket functions that do not require linking
+   with -lxnet on HP-UX 11.11.  */
+#ifndef _HPUX_ALT_XOPEN_SOCKET_API
+# undef _HPUX_ALT_XOPEN_SOCKET_API
+#endif
+/* Identify the host operating system as Minix.
+   This macro does not affect the system headers' behavior.
+   A future release of Autoconf may stop defining this macro.  */
+#ifndef _MINIX
+# undef _MINIX
+#endif
+/* Enable general extensions on NetBSD.
+   Enable NetBSD compatibility extensions on Minix.  */
+#ifndef _NETBSD_SOURCE
+# undef _NETBSD_SOURCE
+#endif
+/* Enable OpenBSD compatibility extensions on NetBSD.
+   Oddly enough, this does nothing on OpenBSD.  */
+#ifndef _OPENBSD_SOURCE
+# undef _OPENBSD_SOURCE
+#endif
+/* Define to 1 if needed for POSIX-compatible behavior.  */
+#ifndef _POSIX_SOURCE
+# undef _POSIX_SOURCE
+#endif
+/* Define to 2 if needed for POSIX-compatible behavior.  */
+#ifndef _POSIX_1_SOURCE
+# undef _POSIX_1_SOURCE
+#endif
+/* Enable POSIX-compatible threading on Solaris.  */
 #ifndef _POSIX_PTHREAD_SEMANTICS
 # undef _POSIX_PTHREAD_SEMANTICS
 #endif
+/* Enable extensions specified by ISO/IEC TS 18661-5:2014.  */
+#ifndef __STDC_WANT_IEC_60559_ATTRIBS_EXT__
+# undef __STDC_WANT_IEC_60559_ATTRIBS_EXT__
+#endif
+/* Enable extensions specified by ISO/IEC TS 18661-1:2014.  */
+#ifndef __STDC_WANT_IEC_60559_BFP_EXT__
+# undef __STDC_WANT_IEC_60559_BFP_EXT__
+#endif
+/* Enable extensions specified by ISO/IEC TS 18661-2:2015.  */
+#ifndef __STDC_WANT_IEC_60559_DFP_EXT__
+# undef __STDC_WANT_IEC_60559_DFP_EXT__
+#endif
+/* Enable extensions specified by ISO/IEC TS 18661-4:2015.  */
+#ifndef __STDC_WANT_IEC_60559_FUNCS_EXT__
+# undef __STDC_WANT_IEC_60559_FUNCS_EXT__
+#endif
+/* Enable extensions specified by ISO/IEC TS 18661-3:2015.  */
+#ifndef __STDC_WANT_IEC_60559_TYPES_EXT__
+# undef __STDC_WANT_IEC_60559_TYPES_EXT__
+#endif
+/* Enable extensions specified by ISO/IEC TR 24731-2:2010.  */
+#ifndef __STDC_WANT_LIB_EXT2__
+# undef __STDC_WANT_LIB_EXT2__
+#endif
+/* Enable extensions specified by ISO/IEC 24747:2009.  */
+#ifndef __STDC_WANT_MATH_SPEC_FUNCS__
+# undef __STDC_WANT_MATH_SPEC_FUNCS__
+#endif
 /* Enable extensions on HP NonStop.  */
 #ifndef _TANDEM_SOURCE
 # undef _TANDEM_SOURCE
 #endif
-/* Enable general extensions on Solaris.  */
-#ifndef __EXTENSIONS__
-# undef __EXTENSIONS__
+/* Enable X/Open extensions.  Define to 500 only if necessary
+   to make mbstate_t available.  */
+#ifndef _XOPEN_SOURCE
+# undef _XOPEN_SOURCE
 #endif
 
 
@@ -3879,16 +3953,6 @@
 /* Define for the Xtensa architecture */
 #undef XTENSA
 
-/* Define to 1 if on MINIX. */
-#undef _MINIX
-
-/* Define to 2 if the system does not provide POSIX.1 features except with
-   this defined. */
-#undef _POSIX_1_SOURCE
-
-/* Define to 1 if you need to in order for `stat' and other things to work. */
-#undef _POSIX_SOURCE
-
 /* Define to `int' if <sys/types.h> doesn't define. */
 #undef gid_t
 

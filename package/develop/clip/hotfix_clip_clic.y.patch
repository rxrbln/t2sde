# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../clip/hotfix_clip_clic.y.patch
# Copyright (C) 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- clip-prg-1.1.15-1.orig/clip/clic.y	2004-07-19 09:41:31.000000000 -0400
+++ clip-prg-1.1.15-1/clip/clic.y	2005-12-29 07:34:14.000000000 -0300
@@ -7,6 +7,9 @@
 %{
 /*
  * $Log: clic.y,v $
+ * Revision 1.82  2005/12/19 10:59:04  clip
+ * uri: some fix about output compiler messages to stderr
+ *
  * Revision 1.81  2004/07/19 13:41:31  clip
  * rust: DO proc WITH ... didn't respect () (pass by value)
  *
@@ -1604,20 +1607,38 @@
 
   curFile=new_File(strdup(filename));
   {
-	char path[256];
-	const char *s=strrchr(filename, '/');
+	char path[256], ch;
+	const char *s;
 	char *e;
+
+#if 0
+	*s=strrchr(filename, '/'); */
 	if (s)
 		s++;
 	else
 		s=filename;
+#else
+		s=filename;
+#endif
 	/*snprintf(path, sizeof(path), "_main_%s", s);*/
 	snprintf(path, sizeof(path), "%s", s);
 	e=strrchr(path, '.');
 	if (e)
 		*e=0;
 	for (e = path; *e; ++e)
+	{
+		ch = *e;
+		switch(ch)
+		{
+			case '.':
+			case '/':
+			case '\\':
+			case '-':
+			case '+':
+				*e = '_';
+		}
 		*e = toupper(*e);
+	}
 	curFile->mname = strdup(path);
 	if (nomain_flag)
 		strncat(path,"_m",sizeof(path));
@@ -1681,34 +1702,37 @@
 {
 	int index=-1, line, ret;
 	char *filename;
+	char *workingdirectory ;
+	workingdirectory = getenv("PWD");
+
 	do {
 		ret = get_include (&index, &line, &filename);
 		if (index>=0)
-			fprintf(stdout, _clic_gettext("in file '%s',\n\tincluded at line %d "), filename, line);
+			fprintf(stderr, _clic_gettext("in file '%s',\n\tincluded at line %d "), filename, line);/*angelo*/
 		else
-			fprintf(stdout, _clic_gettext("in file '%s'\n"), filename);
+			fprintf(stderr, _clic_gettext("in file '%s'\n"), filename);
 	} while (ret!=0);
+	fprintf(stderr, _clic_gettext("  working directory : '%s'\n"), workingdirectory);   /*angelo*/
 }
 
 int
 yyerror(const char *s, ... )
 {
 	if (!clic_warncount && !clic_errorcount)
-		fprintf(stdout, "\n");
+		fprintf(stderr, "\n");
 	clic_errorcount++;
 	if (s)
 	{
 		va_list ap;
 		va_start(ap, s);
-		fprintf(stdout, _clic_gettext("error %d: "), clic_errorcount);
-		vfprintf(stdout, _clic_gettext(s), ap);
+		fprintf(stderr, _clic_gettext("error %d: "), clic_errorcount);/*angelo*/
+		vfprintf(stderr, _clic_gettext(s), ap);
 		va_end(ap);
 
-		fprintf(stdout,_clic_gettext("\n\tline %ld pos %ld (yychar=%d, '%c') "), cl_line+corr_line, cl_pos, yychar, (yychar>32&&yychar<256)?yychar:' ');
-		/*fprintf(stdout,"\n\tline %d pos %d ", cl_line+corr_line, cl_pos);*/
+		fprintf(stderr,_clic_gettext("\n\tline %ld pos %ld (yychar=%d, '%c') "), cl_line+corr_line, cl_pos, yychar, (yychar>32&&yychar<256)?yychar:' ');/*angelo*/
 	}
 	else
-		fprintf(stdout, _clic_gettext("error %d, (yychar=%d) "), clic_errorcount, yychar);
+		fprintf(stderr, _clic_gettext("error %d, (yychar=%d) "), clic_errorcount, yychar);/*angelo*/
 
 	print_file();
 	fflush(stdout);
@@ -1719,20 +1743,20 @@
 yywarning(const char *s, ... )
 {
 	if (!clic_warncount && !clic_errorcount)
-		fprintf(stdout, "\n");
+		fprintf(stderr, "\n");
 	clic_warncount++;
 	if (s)
 	{
 		va_list ap;
 		va_start(ap, s);
-		fprintf(stdout, _clic_gettext("warning %d: "), clic_warncount);
-		vfprintf(stdout, _clic_gettext(s), ap);
+		fprintf(stderr, _clic_gettext("warning %d: "), clic_warncount);/*angelo*/
+		vfprintf(stderr, _clic_gettext(s), ap);
 		va_end(ap);
 
-		fprintf(stdout, _clic_gettext("\n\tline %ld, pos %ld, "), cl_line+corr_line, cl_pos);
+		fprintf(stderr, _clic_gettext("\n\tline %ld, pos %ld, "), cl_line+corr_line, cl_pos);/*angelo*/
 	}
 	else
-		fprintf(stdout, _clic_gettext("warning %d, "), clic_warncount);
+		fprintf(stderr, _clic_gettext("warning %d, "), clic_warncount);/*angelo*/
 	print_file();
 	fflush(stdout);
 	return 0;

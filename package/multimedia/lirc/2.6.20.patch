# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../lirc/2.6.20.patch
# Copyright (C) 2007 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Imported from Gentoo.

  - Rene Rebe <rene@exactcode.de>

--- lirc-0.8.1/drivers/lirc_mceusb2/lirc_mceusb2.c	16 Jan 2007 06:05:27 -0000	1.22
+++ lirc-0.8.1/drivers/lirc_mceusb2/lirc_mceusb2.c	16 Jan 2007 08:45:04 -0000	1.23
@@ -264,7 +264,7 @@
 	async_urb->transfer_buffer_length = size;
 	async_urb->dev = ir->usbdev;
 
-	if ((res=usb_submit_urb(async_urb, SLAB_ATOMIC))) {
+	if ((res=usb_submit_urb(async_urb, GFP_ATOMIC))) {
 	    dprintk(DRIVER_NAME "[%d]: receive request FAILED! (res=%d)\n", ir->devnum, res);
 	    return;
 	}
@@ -467,7 +467,7 @@
 	}
 
 	/* resubmit urb */
-	usb_submit_urb(urb, SLAB_ATOMIC);
+	usb_submit_urb(urb, GFP_ATOMIC);
 }
 
 
@@ -703,7 +703,7 @@
 			mem_failure = 3;
 		} else if (lirc_buffer_init(rbuf, sizeof(lirc_t), LIRCBUF_SIZE)) {
 			mem_failure = 4;
-		} else if (!(ir->buf_in = usb_buffer_alloc(dev, maxp, SLAB_ATOMIC, &ir->dma_in))) {
+		} else if (!(ir->buf_in = usb_buffer_alloc(dev, maxp, GFP_ATOMIC, &ir->dma_in))) {
 			mem_failure = 5;
 		} else if (!(ir->urb_in = usb_alloc_urb(0, GFP_KERNEL))) {
 			mem_failure = 7;
--- lirc-0.8.1/drivers/lirc_atiusb/lirc_atiusb.c	20 Oct 2006 05:03:38 -0000	1.55
+++ lirc-0.8.1/drivers/lirc_atiusb/lirc_atiusb.c	16 Jan 2007 08:45:04 -0000	1.56
@@ -251,7 +251,7 @@
 	add_wait_queue(&oep->wait, &wait);
 
 #ifdef KERNEL_2_5
-	if (usb_submit_urb(oep->urb, SLAB_ATOMIC)) {
+	if (usb_submit_urb(oep->urb, GFP_ATOMIC)) {
 #else
 	if (usb_submit_urb(oep->urb)) {
 #endif
@@ -323,7 +323,7 @@
 			iep->urb->dev = ir->usbdev;
 			dprintk(DRIVER_NAME "[%d]: linking iep 0x%02x (%p)\n", ir->devnum, iep->ep->bEndpointAddress, iep);
 #ifdef KERNEL_2_5
-			if ((rtn = usb_submit_urb(iep->urb, SLAB_ATOMIC)) < 0) {
+			if ((rtn = usb_submit_urb(iep->urb, GFP_ATOMIC)) < 0) {
 #else
 			if ((rtn = usb_submit_urb(iep->urb)) < 0) {
 #endif
@@ -659,7 +659,7 @@
 
 	/* resubmit urb */
 #ifdef KERNEL_2_5
-	usb_submit_urb(urb, SLAB_ATOMIC);
+	usb_submit_urb(urb, GFP_ATOMIC);
 #endif
 }
 
@@ -775,7 +775,7 @@
 		iep->len = len;
 
 #ifdef KERNEL_2_5
-		if ( !(iep->buf = usb_buffer_alloc(dev, len, SLAB_ATOMIC, &iep->dma)) ) {
+		if ( !(iep->buf = usb_buffer_alloc(dev, len, GFP_ATOMIC, &iep->dma)) ) {
 			mem_failure = 2;
 		} else if ( !(iep->urb = usb_alloc_urb(0, GFP_KERNEL)) ) {
 			mem_failure = 3;
@@ -856,7 +856,7 @@
 		init_waitqueue_head(&oep->wait);
 
 #ifdef KERNEL_2_5
-		if ( !(oep->buf = usb_buffer_alloc(dev, USB_OUTLEN, SLAB_ATOMIC, &oep->dma)) ) {
+		if ( !(oep->buf = usb_buffer_alloc(dev, USB_OUTLEN, GFP_ATOMIC, &oep->dma)) ) {
 			mem_failure = 2;
 		} else if ( !(oep->urb = usb_alloc_urb(0, GFP_KERNEL)) ) {
 			mem_failure = 3;
--- lirc-0.8.1/drivers/lirc_mceusb/lirc_mceusb.c	20 Oct 2006 05:03:38 -0000	1.13
+++ lirc-0.8.1/drivers/lirc_mceusb/lirc_mceusb.c	16 Jan 2007 08:45:04 -0000	1.14
@@ -768,7 +768,7 @@
 			dev->bulk_in_endpointAddr = endpoint->bEndpointAddress;
 #ifdef KERNEL_2_5
 			dev->bulk_in_buffer = usb_buffer_alloc
-				(udev, buffer_size, SLAB_ATOMIC, &dev->dma_in);
+				(udev, buffer_size, GFP_ATOMIC, &dev->dma_in);
 #else
 			dev->bulk_in_buffer = kmalloc(buffer_size, GFP_KERNEL);
 #endif
@@ -795,7 +795,7 @@
 			dev->bulk_out_size = buffer_size;
 			dev->bulk_out_endpointAddr = endpoint->bEndpointAddress;
 #ifdef KERNEL_2_5
-			dev->bulk_out_buffer = usb_buffer_alloc(udev, buffer_size, SLAB_ATOMIC, &dev->dma_out);
+			dev->bulk_out_buffer = usb_buffer_alloc(udev, buffer_size, GFP_ATOMIC, &dev->dma_out);
 #else
 			dev->bulk_out_buffer = kmalloc (buffer_size, GFP_KERNEL);
 #endif
--- lirc-0.8.1/drivers/lirc_streamzap/lirc_streamzap.c	1 Dec 2006 04:11:52 -0000	1.18
+++ lirc-0.8.1/drivers/lirc_streamzap/lirc_streamzap.c	16 Jan 2007 08:45:04 -0000	1.19
@@ -458,7 +458,7 @@
 
 #ifdef KERNEL_2_5
 	/* resubmit only for 2.6 */
-	usb_submit_urb( urb, SLAB_ATOMIC );
+	usb_submit_urb( urb, GFP_ATOMIC );
 #endif
 
 	return;
@@ -556,7 +556,7 @@
 	sz->buf_in_len = sz->endpoint->wMaxPacketSize;
 #ifdef KERNEL_2_5
         if((sz->buf_in = usb_buffer_alloc(sz->udev, sz->buf_in_len,
-					  SLAB_ATOMIC, &sz->dma_in)) == NULL )
+					  GFP_ATOMIC, &sz->dma_in)) == NULL )
 	{
                 goto error;
 	}
@@ -715,7 +715,7 @@
 
 	sz->urb_in->dev = sz->udev;
 #ifdef KERNEL_2_5
-	if (usb_submit_urb(sz->urb_in, SLAB_ATOMIC))
+	if (usb_submit_urb(sz->urb_in, GFP_ATOMIC))
 #else
 	if (usb_submit_urb(sz->urb_in))
 #endif
@@ -866,7 +866,7 @@
 
 		sz->urb_in->dev = sz->udev;
 #ifdef KERNEL_2_5
-		if (usb_submit_urb(sz->urb_in, SLAB_ATOMIC))
+		if (usb_submit_urb(sz->urb_in, GFP_ATOMIC))
 #else
 		if (usb_submit_urb(sz->urb_in))
 #endif
--- lirc-0.8.1/drivers/lirc_igorplugusb/lirc_igorplugusb.c	20 Oct 2006 05:03:38 -0000	1.9
+++ lirc-0.8.1/drivers/lirc_igorplugusb/lirc_igorplugusb.c	16 Jan 2007 08:45:04 -0000	1.10
@@ -484,7 +484,7 @@
 #if defined(KERNEL_2_5)
 		} else if (!(ir->buf_in = usb_buffer_alloc(dev, 
 				DEVICE_BUFLEN+DEVICE_HEADERLEN, 
-                                SLAB_ATOMIC, &ir->dma_in))) {
+                                GFP_ATOMIC, &ir->dma_in))) {
 			mem_failure = 5;
 #else
 		} else if (!(ir->buf_in = kmalloc(

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../dvbd/64bit.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

On 32bit platforms it accidently compiles, however on 32bit platforms we
either must cast to int, or would need a long overload ...

  - Rene Rebe <rene@exactcode.de>

--- dvbd-0.7.7/src/controlledconnection.cpp.vanilla	2005-12-16 16:13:34.000000000 +0100
+++ dvbd-0.7.7/src/controlledconnection.cpp	2005-12-16 16:14:20.000000000 +0100
@@ -151,7 +151,7 @@
     else if (words[0] == "TUNE") {
       if (words.size() != 5) 
 	writeControl("ERROR TUNE WRONG NUMBER OF ARGS (Expected 4, got " +
-		     ::toString(words.size() - 1) + ")\n");
+		     ::toString((int)words.size() - 1) + ")\n");
       else {
 	const std::string &type = words[1];
 	std::string channel = unescapeWS(words[2]);
@@ -179,7 +179,7 @@
     else if (words[0] == "SCHEDULE") {
       if (words.size() != 10) 
 	writeControl("ERROR SCHEDULE WRONG NUMBER OF ARGS (Expected 9, got " +
-		     ::toString(words.size() - 1) + ")\n");
+		     ::toString((int)words.size() - 1) + ")\n");
       else {
 	std::string dateTime = words[1] + " " + words[2];
 
@@ -239,7 +239,7 @@
     else if (words[0] == "REMOVEJOB") {
       if (words.size() != 2) 
 	writeControl("ERROR REMOVEJOB WRONG NUMBER OF ARGS (Expected 1, got " +
-		     ::toString(words.size() - 1) + ")\n");
+		     ::toString((int)words.size() - 1) + ")\n");
       else {
 	int job = toInt(words[1]);
 	if (!scheduler->remove(job) && !cm->removeJob(job))

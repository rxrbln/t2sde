# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../libdv/amd64-no-mmx-gcc41.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- libdv-0.104/libdv/YUY2.c.vanilla	2006-03-04 20:13:38.699452750 +0100
+++ libdv-0.104/libdv/YUY2.c	2006-03-04 20:14:28.886589250 +0100
@@ -311,7 +311,7 @@
   }
 }
 
-#if ARCH_X86 || ARCH_X86_64
+#if ARCH_X86 
 
 /* TODO (by Buck):
  *
--- libdv-0.104/libdv/YUY2.h.vanilla	2006-03-04 20:16:12.225047500 +0100
+++ libdv-0.104/libdv/YUY2.h	2006-03-04 20:16:20.565568750 +0100
@@ -54,7 +54,7 @@
 extern void dv_mb411_right_YUY2(dv_macroblock_t *mb, uint8_t **pixels, int *pitches, int add_ntsc_setup);
 extern void dv_mb420_YUY2(dv_macroblock_t *mb, uint8_t **pixels, int *pitches);
 
-#if ARCH_X86 || ARCH_X86_64
+#if ARCH_X86
 /* pentium architecture mmx versions */
 extern void dv_mb411_YUY2_mmx(dv_macroblock_t *mb, uint8_t **pixels, int *pitches,
                   int add_ntsc_setup, int clamp_luma, int clamp_chroma);
--- libdv-0.104/libdv/dv.c.vanilla	2006-03-04 20:16:30.554193000 +0100
+++ libdv-0.104/libdv/dv.c	2006-03-04 20:17:09.268612500 +0100
@@ -55,7 +55,7 @@
 #include "rgb.h"
 #include "YUY2.h"
 #include "YV12.h"
-#if ARCH_X86 || ARCH_X86_64
+#if ARCH_X86
 #include "mmx.h"
 #endif
 
@@ -220,9 +220,6 @@
 #if ARCH_X86
       _dv_quant_88_inverse_x86(mb->b[i].coeffs,mb->qno,mb->b[i].class_no);
       _dv_idct_88(mb->b[i].coeffs);
-#elif ARCH_X86_64
-      _dv_quant_88_inverse_x86_64(mb->b[i].coeffs,mb->qno,mb->b[i].class_no);
-      _dv_idct_88(mb->b[i].coeffs);
 #else /* ARCH_X86 */
       _dv_quant_88_inverse(mb->b[i].coeffs,mb->qno,mb->b[i].class_no);
       _dv_weight_88_inverse(mb->b[i].coeffs);
@@ -253,10 +250,6 @@
 	_dv_quant_88_inverse_x86(bl->coeffs,mb->qno,bl->class_no);
 	_dv_weight_88_inverse(bl->coeffs);
 	_dv_idct_88(bl->coeffs);
-#elif ARCH_X86_64
-	_dv_quant_88_inverse_x86_64(bl->coeffs,mb->qno,bl->class_no);
-	_dv_weight_88_inverse(bl->coeffs);
-	_dv_idct_88(bl->coeffs);
 #else /* ARCH_X86 */
 	_dv_quant_88_inverse(bl->coeffs,mb->qno,bl->class_no);
 	_dv_weight_88_inverse(bl->coeffs);
@@ -331,7 +324,7 @@
   } /* for    */
 } /* dv_render_video_segment_bgr0 */
 
-#if ARCH_X86 || ARCH_X86_64
+#if ARCH_X86
 
 static inline void
 dv_render_macroblock_yuv(dv_decoder_t *dv, dv_macroblock_t *mb, uint8_t **pixels, int *pitches) {

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../vdr/graphlcd-vdr-1.3.38.diff
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Index: state.c
===================================================================
--- graphlcd-0.1.1/state.c	(Revision 435)
+++ graphlcd-0.1.1/state.c	(Arbeitskopie)
@@ -81,7 +81,7 @@
 	}
 }
 
-void cGraphLCDState::Recording(const cDevice * Device, const char * Name)
+void cGraphLCDState::Recording(const cDevice * Device, const char * Name, const char *FileName, bool On)
 {
 //	printf("graphlcd plugin: cGraphLCDState::Recording %d %s\n", Device->CardIndex(), Name);
 	if (GraphLCDSetup.PluginActive)
@@ -104,7 +104,7 @@
 	}
 }
 
-void cGraphLCDState::Replaying(const cControl * Control, const char * Name)
+void cGraphLCDState::Replaying(const cControl * Control, const char * Name, const char *FileName, bool On)
 {
 //	printf("graphlcd plugin: cGraphLCDState::Replaying %s\n", Name);
 	if (GraphLCDSetup.PluginActive)
Index: state.h
===================================================================
--- graphlcd-0.1.1/state.h	(Revision 435)
+++ graphlcd-0.1.1/state.h	(Arbeitskopie)
@@ -96,8 +96,8 @@
 	void GetProgramme();
 protected:
 	virtual void ChannelSwitch(const cDevice *Device, int ChannelNumber);
-	virtual void Recording(const cDevice *Device, const char *Name);
-	virtual void Replaying(const cControl *Control, const char *Name);
+	virtual void Recording(const cDevice *Device, const char *Name, const char *FileName, bool On);
+	virtual void Replaying(const cControl *Control, const char *Name, const char *FileName, bool On);
 	virtual void SetVolume(int Volume, bool Absolute);
 	virtual void Tick();
 	virtual void OsdClear();

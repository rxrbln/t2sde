# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../vdr/image-0.2.4-for-vdr-1.3.38.diff
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Index: image.c
===================================================================
--- image-0.2.4/image.c	(Revision 22)
+++ image-0.2.4/image.c	(Arbeitskopie)
@@ -36,7 +36,7 @@
 #include "commands.h"
 #include "liboutput/encode.h"
 
-static const char *VERSION        = "0.2.4";
+static const char *VERSION        = "0.2.5";
 static const char *DESCRIPTION    = "A Image Viewer plugin";
 static const char *MAINMENUENTRY  = "Image";
 
Index: control-image.c
===================================================================
--- image-0.2.4/control-image.c	(Revision 22)
+++ image-0.2.4/control-image.c	(Arbeitskopie)
@@ -59,7 +59,7 @@
  , m_pDisplayReplay(NULL)
 {
   // Notity all cStatusMonitor
-  cStatus::MsgReplaying(this, "[image]");
+  cStatus::MsgReplaying(this, "image", NULL, true );
   
   m_tStarted = time(NULL);
   
@@ -87,7 +87,7 @@
     delete m_pImageMenu;
   m_pImageMenu = NULL;
   // Notity cleanup all cStatusMonitor
-  cStatus::MsgReplaying(this, NULL);
+  cStatus::MsgReplaying(this, "image", NULL, false);
   // Hide OSD
   HideOSD();
   if(m_pDisplayReplay) {
@@ -152,15 +152,15 @@
   char* sz = 0;
   if(IsConvertRunning())  // Display that convert is running
   {
-    asprintf(&sz,"[image] %s",tr("Convert..."));
+    asprintf(&sz,"%s",tr("Convert..."));
   }
   else 
   {
     switch(m_ePlayMode)
     {
-      case ePlayModeNormal: asprintf(&sz,"[image] %s",FileName());break;
-      case ePlayModeJump:   asprintf(&sz,"[image] %s",tr("Select picture via key 1..9!"));break;
-      case ePlayModeZoom:   asprintf(&sz,"[image] %s %dx",tr("Zoom"),m_nZoomFactor);break;
+      case ePlayModeNormal: asprintf(&sz,"%s",FileName());break;
+      case ePlayModeJump:   asprintf(&sz,"%s",tr("Select picture via key 1..9!"));break;
+      case ePlayModeZoom:   asprintf(&sz,"%s %dx",tr("Zoom"),m_nZoomFactor);break;
     }
   }
   if(sz)
@@ -171,7 +171,7 @@
       if(m_szLastShowStatusMsg)
         free(m_szLastShowStatusMsg);
       m_szLastShowStatusMsg = sz;
-      cStatus::MsgReplaying(this, m_szLastShowStatusMsg);
+      cStatus::MsgReplaying(this, "image" , m_szLastShowStatusMsg, true );
     }
     else 
       free(sz);

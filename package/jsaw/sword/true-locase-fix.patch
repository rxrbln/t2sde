# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/*/sword/true-locase-fix.patch
# Copyright (C) 1998 - 2004 ROCK Linux Project
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

TRUE is not defined generally. And there's no need to use it - its C++!
	-- jsaw

--- sword-1.5.7/src/mgr/installmgr.cpp.orig	2004-04-21 16:31:46.008706088 +0200
+++ sword-1.5.7/src/mgr/installmgr.cpp	2004-04-21 16:31:46.014705176 +0200
@@ -150,7 +150,7 @@
 		curl_easy_setopt(curl, CURLOPT_FILE, &ftpfile);
 
 		/* Switch on full protocol/debug output */
-		curl_easy_setopt(curl, CURLOPT_VERBOSE, TRUE);
+		curl_easy_setopt(curl, CURLOPT_VERBOSE, true);
 
 		res = curl_easy_perform(curl);
 
--- sword-1.5.7/tests/tlitmgrtest.cpp.orig	2004-04-21 16:31:46.015705024 +0200
+++ sword-1.5.7/tests/tlitmgrtest.cpp	2004-04-21 16:31:46.023703808 +0200
@@ -72,7 +72,7 @@
                         break;
                     case 0x61: // 'a'
                         // 'alias'; row[2]=createInstance argument
-                        registry->put(id, resString, TRUE);
+                        registry->put(id, resString, true);
                         break;
                     }
                 }
@@ -85,7 +85,7 @@
     ures_close(transIDs);
     ures_close(bundle);
 
-    specialInverses = new Hashtable(TRUE);
+    specialInverses = new Hashtable(true);
     specialInverses->setValueDeleter(uhash_deleteUnicodeString);
     _registerSpecialInverse(NullTransliterator::SHORT_ID,
                             NullTransliterator::SHORT_ID, FALSE);
@@ -94,14 +94,14 @@
     // cache.  This is how new non-rule-based transliterators are
     // added to the system.
 
-    registry->put(new NullTransliterator(), TRUE);
-    registry->put(new LowercaseTransliterator(), TRUE);
-    registry->put(new UppercaseTransliterator(), TRUE);
-    registry->put(new TitlecaseTransliterator(), TRUE);
-    _registerSpecialInverse("Upper", "Lower", TRUE);
+    registry->put(new NullTransliterator(), true);
+    registry->put(new LowercaseTransliterator(), true);
+    registry->put(new UppercaseTransliterator(), true);
+    registry->put(new TitlecaseTransliterator(), true);
+    _registerSpecialInverse("Upper", "Lower", true);
     _registerSpecialInverse("Title", "Lower", FALSE);
-    registry->put(new UnicodeNameTransliterator(), TRUE);
-    registry->put(new NameUnicodeTransliterator(), TRUE);
+    registry->put(new UnicodeNameTransliterator(), true);
+    registry->put(new NameUnicodeTransliterator(), true);
     RemoveTransliterator::registerIDs();
     EscapeTransliterator::registerIDs();
     UnescapeTransliterator::registerIDs();
@@ -500,7 +500,7 @@
                         break;
                     case 0x61: // 'a'
                         // 'alias'; row[2]=createInstance argument
-                        //registry->put(id, resString, TRUE);
+                        //registry->put(id, resString, true);
                         break;
                     }
                 }
@@ -569,7 +569,7 @@
                         break;
                     case 0x61: // 'a'
                         // 'alias'; row[2]=createInstance argument
-                        //registry->put(id, resString, TRUE);
+                        //registry->put(id, resString, true);
                         break;
                     }
                 }
@@ -638,7 +638,7 @@
                         break;
                     case 0x61: // 'a'
                         // 'alias'; row[2]=createInstance argument
-                        //registry->put(id, resString, TRUE);
+                        //registry->put(id, resString, true);
                         break;
                     }
                 }

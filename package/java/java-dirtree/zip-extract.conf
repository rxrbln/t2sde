# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../java-dirtree/zip-extract.conf
# Copyright (C) 2004 - 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- T2-COPYRIGHT-NOTE-END ---


# See trac issue #21
# In the future this code should merge with the current auto extraction.

tar_gz_extract() {
	echo "Extracting $xsrctar ($taropt) ... "
	tar -v $taropt $archdir/$xsrctar | tee untar.txt |
		sed 's,^\./,,' | cut -f1 -d/ |
		sort -u > xsrcdir.txt
}

tar_bz_extract() {
	echo "Extracting $xsrctar ($taropt) ... "
	tar -v $taropt $archdir/$xsrctar | tee untar.txt |
		sed 's,^\./,,' | cut -f1 -d/ |
		sort -u > xsrcdir.txt
}

zip_extract() {
	echo "Extracting $xsrctar ($zipopt) ... "
	unzip $zipopt $archdir/$xsrctar | sed 's,^.*/$,,' | 
		cut -f4 -d" " | tee untar.txt |
		sed 's,^\./,,' | cut -f1 -d/ |
		sort -u | sed '1d' > xsrcdir.txt
}

do_extract() {
	# Determine if there is a archive extraction hook. If so
	# this automatically implies auto extraction being turned
	# off.
	# Todo
	#if [ $autoextract != 1 ]; then
	if false ; then
		hook_eval extract
	else
		# No extract hook, so let's try auto extraction
		cd $builddir
		# Determine what extract function to call
		# Todo:
		zip_extract
		#
		if [ "$srcdir" = auto ]; then
			xsrcdir=${xsrctar%.tar.bz2}
			xsrcdir=${xsrcdir%.tbz2}
			if [ ! -d $xsrcdir ] ; then
				for x in $pkg-$ver ${pkg}_$ver $pkg \
					 $xpkg-$ver ${xpkg}_$ver $xpkg \
					 "$( cat xsrcdir.txt )"
				do
					[ -d "$x" ] && xsrcdir="$x"
				done
			fi
		else
			xsrcdir="$srcdir"
		fi
		#
		if [ "$chownsrcdir" = 1 ]; then
			echo "Fixing ownership and permissions ..."
			chown -R 0:0 $builddir/$xsrcdir
		fi
		#
		if [ "$nocvsinsrcdir" = 1 ]; then
			echo "Removing CVS, .svn, {arch} and .arch-ids directories ..."
			egrep '(^|/)(CVS|\.svn|\{arch\}|\.arch-ids)(/|$)' untar.txt |
			while read x; do
				echo "Removing $x ..."
				rm -rf "$x"
			done
		fi

		echo "Changeing into $builddir/$xsrcdir ..."
		cd $builddir/$xsrcdir

		# Apply patches
		#
		if [ $autopatch = 1 ]; then
			hook_eval prepatch
			apply_patchfiles
			hook_eval postpatch
		fi
	fi
}

autoextract=0
hook_add preconf 5 do_extract

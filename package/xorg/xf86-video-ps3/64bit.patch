# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../xf86-video-ps3/64bit.patch
# Copyright (C) 2007 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Rudimentary, and hacky powerpc64 first pass patch. Starts, but
shows rendering / blitting glitches.

  - Rene Rebe <rene@exactcode.de>

--- a/src/ps3.h
+++ b/src/ps3.h
@@ -17,17 +17,17 @@ typedef struct _PS3Rec {
 	Bool                            NoAccel;
 
 	int fd;
-	CARD32 vram_base;
+	long vram_base;
 	CARD32 vram_size;
-	CARD32 fifo_base;
+	long fifo_base;
 	CARD32 fifo_size;
 	CARD32 fifo_start;
-	CARD32 ctrl_base;
+	long ctrl_base;
 	CARD32 ctrl_size;
-	CARD32 iof_base;
+	long iof_base;
 	CARD32 iof_size;
 	CARD32 iof_offset;
-	CARD32 xv_base;
+	long xv_base;
 	CARD32 xv_size;
 	XF86VideoAdaptorPtr             blitAdaptor;
 	void				(*DMAKickoffCallback)(PS3Ptr pPS3);
--- a/src/ps3_gpu.c
+++ b/src/ps3_gpu.c
@@ -134,7 +137,7 @@ static int enter_direct_mode(PS3Ptr pPS3)
 		goto out;
 	}
 
-	pPS3->iof_base = (CARD32) pPS3->fbmem;
+	pPS3->iof_base = (long) pPS3->fbmem;
 	pPS3->iof_size = fix.smem_len;
 	pPS3->iof_offset = 0x0d000000; /* GPUIOF */
 	
@@ -180,20 +180,20 @@ static void clear_vram(PS3Ptr pPS3)
 	/* fill in GPU context */
 	gpu_get_info(pPS3);
 
-	if ((pPS3->vram_base = (CARD32)
+	if ((pPS3->vram_base = (long)
 	     map_resource(DEV_GPU_VRAM, pPS3->vram_size)) == 0) {
 		ErrorF("failed to map vram\n");
 		goto err_free;
 	}
 
-	if ((pPS3->fifo_base = (CARD32)
+	if ((pPS3->fifo_base = (long)
 	     map_resource(DEV_GPU_FIFO, pPS3->fifo_size)) == 0) {
 		ErrorF("failed to map fifo\n");
 		goto err_unmap_vram;
 	}
 
-	if ((pPS3->ctrl_base = (CARD32)
+	if ((pPS3->ctrl_base = (long)
 	     map_resource(DEV_GPU_CTRL, pPS3->ctrl_size)) == 0) {
 		ErrorF("failed to map ctrl\n");
 		goto err_unmap_fifo;

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../xf86-video-gma500/hotfix.patch
# Copyright (C) 2019 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- xf86-video-gma500/src/uxa/uxa-damage.c.vanilla	2019-09-10 13:15:28.389298420 +0000
+++ xf86-video-gma500/src/uxa/uxa-damage.c	2019-09-10 13:19:06.985298420 +0000
@@ -35,6 +35,9 @@
 #include    "picturestr.h"
 #include    "uxa-damage.h"
 
+extern void QueryGlyphExtents ( FontPtr pFont, CharInfoPtr *charinfo,
+	unsigned long count, ExtentInfoRec *info );
+
 typedef struct _damageGCPriv {
     GCOps   *ops;
     GCFuncs *funcs;
--- xf86-video-gma500/src/libgma.c.vanilla	2019-09-10 13:33:09.769298420 +0000
+++ xf86-video-gma500/src/libgma.c	2019-09-10 13:33:38.161298420 +0000
@@ -8,7 +8,6 @@
 #include <sys/mman.h>
 #include <xf86drm.h>
 #include <xf86.h>
-#include <uapi/drm/gma_drm.h>
 #include "libgma.h"
 
 struct gma_bo *gma_bo_create(int fd, uint32_t size, uint32_t type, uint32_t flags)
--- xf86-video-gma500/src/libgma.h.vanilla	2019-09-10 13:33:22.469298420 +0000
+++ xf86-video-gma500/src/libgma.h	2019-09-10 13:33:28.613298420 +0000
@@ -1,7 +1,7 @@
 #ifndef _LIBGMA_H
 #define _LIBGMA_H
 
-#include <uapi/drm/gma_drm.h>
+#include <drm/gma_drm.h>
 
 #define ALIGN(x, y) (((x)+(y)-1) & ~((y)-1))
 
--- xf86-video-gma500/src/compat-api.h.vanilla	2019-09-10 13:55:14.777298420 +0000
+++ xf86-video-gma500/src/compat-api.h	2019-09-10 14:38:38.097298420 +0000
@@ -33,6 +33,8 @@
 #define SetGlyphPicture(g, s, p) GlyphPicture((g))[(s)->myNum] = p
 #endif
 
+#undef XF86_HAS_SCRN_CONV
+
 #ifndef XF86_HAS_SCRN_CONV
 #define xf86ScreenToScrn(s) xf86Screens[(s)->myNum]
 #define xf86ScrnToScreen(s) screenInfo.screens[(s)->scrnIndex]
@@ -55,15 +57,17 @@
 #define CLOSE_SCREEN_ARGS scrnIndex, pScreen
 
 #define ADJUST_FRAME_ARGS_DECL int arg, int x, int y, int flags
+#define ADJUST_FRAME_ARGS(arg, x, y) (arg)->scrnIndex, x, y, 0
 
 #define SWITCH_MODE_ARGS_DECL int arg, DisplayModePtr mode, int flags
+#define SWITCH_MODE_ARGS(arg, m) (arg)->scrnIndex, m, 0
 
 #define FREE_SCREEN_ARGS_DECL int arg, int flags
 
 #define VT_FUNC_ARGS_DECL int arg, int flags
 #define VT_FUNC_ARGS pScrn->scrnIndex, 0
 
-#define XF86_ENABLEDISABLEFB_ARG(x) ((x)->scrnIndex)
+#define XF86_SCRN_ARG(x) ((x)->scrnIndex)
 #else
 #define SCRN_ARG_TYPE ScrnInfoPtr
 #define SCRN_INFO_PTR(arg1) ScrnInfoPtr pScrn = (arg1)
@@ -73,21 +77,32 @@
 
 #define SCREEN_INIT_ARGS_DECL ScreenPtr pScreen, int argc, char **argv
 
-#define BLOCKHANDLER_ARGS_DECL ScreenPtr arg, pointer pTimeout, pointer pReadmask
-#define BLOCKHANDLER_ARGS arg, pTimeout, pReadmask
+#if 0 //XORG_VERSION_CURRENT < XORG_VERSION_NUMERIC(1,17,0,0,0)
+    #define BLOCKHANDLER_ARGS_DECL ScreenPtr arg, pointer pTimeout, pointer pReadmask
+    #define BLOCKHANDLER_ARGS arg, pTimeout, pReadmask
+#elif 0 // XORG_VERSION_CURRENT < XORG_VERSION_NUMERIC(1,19,0,0,0)
+    #define BLOCKHANDLER_ARGS_DECL ScreenPtr arg, void* pTimeout, void* pReadmask
+    #define BLOCKHANDLER_ARGS arg, pTimeout, pReadmask
+#else
+    #define BLOCKHANDLER_ARGS_DECL ScreenPtr arg, void* pTimeout
+    #define BLOCKHANDLER_ARGS arg, pTimeout
+#endif
 
 #define CLOSE_SCREEN_ARGS_DECL ScreenPtr pScreen
 #define CLOSE_SCREEN_ARGS pScreen
 
 #define ADJUST_FRAME_ARGS_DECL ScrnInfoPtr arg, int x, int y
+#define ADJUST_FRAME_ARGS(arg, x, y) arg, x, y
+
 #define SWITCH_MODE_ARGS_DECL ScrnInfoPtr arg, DisplayModePtr mode
+#define SWITCH_MODE_ARGS(arg, m) arg, m
 
 #define FREE_SCREEN_ARGS_DECL ScrnInfoPtr arg
 
 #define VT_FUNC_ARGS_DECL ScrnInfoPtr arg
 #define VT_FUNC_ARGS pScrn
 
-#define XF86_ENABLEDISABLEFB_ARG(x) (x)
+#define XF86_SCRN_ARG(x) (x)
 
 #endif
 
--- xf86-video-gma500/src/gma_driver.c.vanilla	2019-09-10 14:05:41.197298420 +0000
+++ xf86-video-gma500/src/gma_driver.c	2019-09-10 14:20:29.409298420 +0000
@@ -800,7 +800,7 @@
     gma_set_surface(rootPixmap, gma->drmmode.front_bo);
 
     if (gma->drmmode.shadow_enable) {
-	if (!shadowAdd(pScreen, rootPixmap, shadowUpdatePackedWeak(),
+	if (!shadowAdd(pScreen, rootPixmap, shadowUpdatePacked,
 		       gmaShadowWindow, 0, 0))
 	    return FALSE;
     }

# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/tar/tar-bzip2.patch
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---


Patch by Hiroshi Takekawa to integrate bzip2 compression filter (option -I)

 - Clifford

--- ./src/tar.c.orig	Wed Jul  7 07:49:50 1999
+++ ./src/tar.c	Sun Jul 11 17:25:49 1999
@@ -16,6 +16,11 @@
    with this program; if not, write to the Free Software Foundation, Inc.,
    59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
 
+/* 13 Oct 97: patched by Hiroshi Takekawa to integrate bzip2 as
+              compression filter (option -j, -y and -I) */
+/* 2002-07-16: patched by Anders Karlsson to integrate bzip2 as
+              compression filter (with the aditional options -j and -y) */
+
 #include "system.h"
 
 #include <getopt.h>
@@ -164,6 +167,12 @@
   {"block-number", no_argument, NULL, 'R'},
   {"block-size", required_argument, NULL, OBSOLETE_BLOCKING_FACTOR},
   {"blocking-factor", required_argument, NULL, 'b'},
+  {"bzip2", no_argument, NULL, 'j'},
+  {"bunzip2", no_argument, NULL, 'j'},
+  {"bzip2", no_argument, NULL, 'y'},
+  {"bunzip2", no_argument, NULL, 'y'},
+  {"bzip2", no_argument, NULL, 'I'},
+  {"bunzip2", no_argument, NULL, 'I'},
   {"catenate", no_argument, NULL, 'A'},
   {"checkpoint", no_argument, &checkpoint_option, 1},
   {"compare", no_argument, NULL, 'd'},
@@ -340,6 +345,7 @@
               PATTERN                at list/extract time, a globbing PATTERN\n\
   -o, --old-archive, --portability   write a V7 format archive\n\
       --posix                        write a POSIX conformant archive\n\
+  -j, -y, -I, --bzip2, --bunzip2     filter the archive through bzip2\n\
   -z, --gzip, --ungzip               filter the archive through gzip\n\
   -Z, --compress, --uncompress       filter the archive through compress\n\
       --use-compress-program=PROG    filter through PROG (must accept -d)\n"),
@@ -416,7 +422,7 @@
    Y  per-block gzip compression */
 
 #define OPTION_STRING \
-  "-01234567ABC:F:GK:L:MN:OPRST:UV:WX:Zb:cdf:g:hiklmoprstuvwxz"
+  "-01234567ABC:F:GIK:L:MN:OPRST:UV:WX:Zb:cdf:g:hijklmoprstuvwxyz"
 
 static void
 set_subcommand_option (enum subcommand subcommand)
@@ -787,6 +793,18 @@
 	if (add_exclude_file (excluded, optarg, '\n') != 0)
 	  FATAL_ERROR ((0, errno, "%s", optarg));
 	break;
+
+      case 'j':
+	set_use_compress_program_option ("bzip2");
+  	break;
+
+      case 'y':
+	set_use_compress_program_option ("bzip2");
+  	break;
+
+      case 'I':
+	set_use_compress_program_option ("bzip2");
+  	break;
 
       case 'z':
 	set_use_compress_program_option ("gzip");

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../linux-header/gma_drm.patch.disabled
# Copyright (C) 2019 - 2020 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- linux-4.1/include/uapi/drm/Kbuild.vanilla	2019-09-10 15:01:46.505298420 +0000
+++ linux-4.1/include/uapi/drm/Kbuild	2019-09-10 15:02:11.733298420 +0000
@@ -4,6 +4,7 @@
 header-y += drm_mode.h
 header-y += drm_sarea.h
 header-y += exynos_drm.h
+header-y += gma_drm.h
 header-y += i810_drm.h
 header-y += i915_drm.h
 header-y += mga_drm.h
--- linux-4.1/include/uapi/drm/gma_drm.h.vanilla	2019-09-10 14:49:37.493298420 +0000
+++ linux-4.1/include/uapi/drm/gma_drm.h	2019-09-10 14:49:31.709298420 +0000
@@ -0,0 +1,88 @@
+
+/*
+ * Copyright 2013 Patrik Jakobsson 
+ * All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice (including the next
+ * paragraph) shall be included in all copies or substantial portions of the
+ * Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * VA LINUX SYSTEMS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+#ifndef __UAPI_GMA_DRM_H__
+#define __UAPI_GMA_DRM_H__
+
+#include <drm/drm.h>
+
+#define DRM_GMA_PARAM_CHIP_ID		0x00
+
+struct drm_gma_param {
+	__u64 param;
+	__u64 value;
+};
+
+/* Buffer object types */
+#define GMA_BO_STOLEN	0x01
+#define GMA_BO_DISPLAY	0x02
+#define GMA_BO_CURSOR	0x03
+#define GMA_BO_OVERLAY	0x04
+#define GMA_BO_BLIT	0x05
+
+struct drm_gma_gem_create {
+	__u32 size;	/* In/out */
+	__u32 type;
+	__u32 flags;
+	__u32 handle;	/* Out */
+};
+
+struct drm_gma_gem_mmap {
+	__u64 offset;
+	__u32 handle;
+	__u32 __pad;
+};
+
+/* Execute command stream in GEM buffer on the desired engine */
+struct drm_gma_gem_blt_submit {
+	__u32 size;
+	__u32 handle;	/* GEM handle for cmd buffer */
+	__u32 flags;
+	__u32 __pad;
+};
+
+struct drm_gma_gem_wrap {
+	__u32 handle;
+	__u32 offset;
+	__u64 addr;
+	__u32 size;
+	__u32 __pad;
+};
+
+#define DRM_GMA_GET_PARAM	0x00 /* Get parameter */
+#define DRM_GMA_SET_PARAM	0x01 /* Set parameter */
+#define DRM_GMA_GEM_CREATE	0x02 /* Create gem obj */
+#define DRM_GMA_GEM_MMAP	0x03 /* Memory map gem obj */
+#define DRM_GMA_GEM_WRAP	0x04 /* Wrap gem obj around userspace pages */
+#define DRM_GMA_GEM_BLT_SUBMIT	0x05 /* Submit command to blitter */
+
+#define DRM_IOCTL_GMA_GET_PARAM		DRM_IOWR(DRM_COMMAND_BASE + DRM_GMA_GET_PARAM, struct drm_gma_param)
+#define DRM_IOCTL_GMA_SET_PARAM		DRM_IOW (DRM_COMMAND_BASE + DRM_GMA_SET_PARAM, struct drm_gma_param)
+#define DRM_IOCTL_GMA_GEM_CREATE	DRM_IOWR(DRM_COMMAND_BASE + DRM_GMA_GEM_CREATE, struct drm_gma_gem_create)
+#define DRM_IOCTL_GMA_GEM_MMAP		DRM_IOWR(DRM_COMMAND_BASE + DRM_GMA_GEM_MMAP, struct drm_gma_gem_mmap)
+#define DRM_IOCTL_GMA_GEM_WRAP		DRM_IOWR(DRM_COMMAND_BASE + DRM_GMA_GEM_WRAP, struct drm_gma_gem_wrap)
+#define DRM_IOCTL_GMA_GEM_BLT_SUBMIT	DRM_IOWR(DRM_COMMAND_BASE + DRM_GMA_GEM_BLT_SUBMIT, struct drm_gma_gem_blt_submit)
+
+#endif

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../uclibc/fix_locale_build.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- uClibc/extra/locale/Makefile.in.orig	2006-08-30 09:10:09.000000000 +0200
+++ uClibc/extra/locale/Makefile.in	2006-08-31 12:47:52.000000000 +0200
@@ -12,12 +12,14 @@
 
 BUILD_CFLAGS-locale-common := \
 	-D__UCLIBC_GEN_LOCALE \
-	-DUCLIBC_CTYPE_HEADER='"$(top_builddir)/include/bits/uClibc_ctype.h"'
+	-DUCLIBC_CTYPE_HEADER='"../../include/bits/uClibc_ctype.h"'
 
 BUILD_CFLAGS-gen_wc8bit := $(BUILD_CFLAGS-locale-common) -DCTYPE_PACKED=1
 
 BUILD_CFLAGS-gen_wctype := $(BUILD_CFLAGS-locale-common)
 
+BUILD_CFLAGS-gen_locale := $(BUILD_CFLAGS-locale-common) -D_GNU_SOURCE
+
 BUILD_CFLAGS-gen_ldc :=
 ifeq ($(UCLIBC_HAS_WCHAR),y)
 BUILD_CFLAGS-gen_wc8bit += -DDO_WIDE_CHAR=1
@@ -38,6 +40,8 @@
 locale_SRC := $(locale_OUT)/locale_data.c
 locale_OBJ := $(locale_OUT)/locale_data.o
 
+BUILD_CFLAGS-gen_collate := -DPATH_TO_LOCALE='"$(locale_OUT)/"'
+
 CFLAGS-locale_data.c := -D__WCHAR_ENABLED -I$(locale_OUT) -I$(locale_DIR)
 
 # produces a loop
@@ -121,13 +125,16 @@
 # grep fopen *.c
 $(locale_OUT)/c8tables.h: $(locale_OUT)/gen_wc8bit $(locale_OUT)/codesets.txt
 	$< `cat $(word 2,$^)`
+	mv $(@F) $(locale_OUT)
 
 # Warning! Beware tr_TR toupper/tolower exceptions!
 $(locale_OUT)/wctables.h: $(locale_OUT)/gen_wctype
 	$< en_US
+	mv $(@F) $(locale_OUT)
 
 $(locale_OUT)/locale_tables.h: $(locale_OUT)/gen_locale $(locale_OUT)/locales.txt
 	$< $(word 2,$^)
+	mv $(@F) $(locale_OUT)
 
 $(locale_OUT)/lt_defines.h: $(locale_OUT)/locale_tables.h $(locale_OUT)/locale_collate.h
 	grep "^#define" $< > $@
@@ -136,6 +143,7 @@
 $(locale_OUT)/locale_collate.h: $(locale_OUT)/gen_collate $(locale_OUT)/locale_tables.h
 	grep COL_IDX_ $(word 2,$^) | sed -e "s/^.*COL_IDX_\([^, ]*\).*$$/\1/" | \
 		sort | uniq | xargs $<
+	mv $(@F) $(locale_OUT)
 
 $(locale_OUT)/$(LOCALE_DATA_FILENAME):
 ifeq ($(UCLIBC_DOWNLOAD_PREGENERATED_LOCALE_DATA),y)
@@ -158,10 +166,11 @@
 
 $(locale_SRC): $(locale_OUT)/gen_ldc
 	$<
+	mv $(@F) $(locale_OUT)
 
 $(locale_OUT)/uClibc_locale_data.h: $(locale_OUT)/lt_defines.h $(locale_OUT)/c8tables.h $(locale_OUT)/wctables.h $(locale_DIR)/locale_mmap.h | $(locale_SRC)
 	grep -v "define __LC" $< > $@
-	cat $(wordlist 2,3,4,$^) >> $@
+	cat $(wordlist 2,4,$^) >> $@
 
 endif
 
--- uClibc/extra/locale/gen_collate.c.orig	2006-08-31 12:57:19.000000000 +0200
+++ uClibc/extra/locale/gen_collate.c	2006-08-31 12:56:54.000000000 +0200
@@ -1284,7 +1284,7 @@
 {
 	static char fbuf[PATH_MAX];
 
-	snprintf(fbuf, PATH_MAX, "collation/%s", filename);
+	snprintf(fbuf, PATH_MAX, PATH_TO_LOCALE "collation/%s", filename);
 
 	if (fno >= MAX_FNO) {
 		error_msg("file stack size exceeded");

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../uclibc/fix_shares_00dirtree.patch
# Copyright (C) 2004 - 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---
using tar in that way to copy files changes usr/include producing a share
with 00-dirtree
Alejandro Mery

In addition, copying the files to /usr/include, then removing them again
for deselected features is broken to begin with. Patch changes this to
remove first locally, then do the tar.
Roland Schulz

--- ./Makefile.in.orig	2006-07-02 13:08:33.000000000 +0000
+++ ./Makefile.in	2006-07-02 13:16:15.000000000 +0000
@@ -113,92 +113,91 @@
 
 # Installs header files.
 install_headers:
-	$(INSTALL) -d $(PREFIX)$(DEVEL_PREFIX)include
-	printf ".svn\n.cvsignore\nCVS\n" > tar_exclude ; \
-	if [ "$(KERNEL_SOURCE)" = "$(PREFIX)$(DEVEL_PREFIX)" ] ; then \
-		ls -1d include/linux include/asm* >> tar_exclude ; \
-	fi ; \
-	$(TAR) -chf - -X tar_exclude include \
-		| $(TAR) -xf - -C $(PREFIX)$(DEVEL_PREFIX)
-	rm -f tar_exclude
 	printf '#ifndef _LIBC_INTERNAL_H\n#define _LIBC_INTERNAL_H 1\n#endif\n' > \
-		$(PREFIX)$(DEVEL_PREFIX)include/libc-internal.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/dl-osinfo.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/_lfs_64.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/bits/uClibc_uintmaxtostr.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/bits/kernel_sigaction.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/bits/kernel_stat.h
+		include/libc-internal.h
+	$(RM) include/dl-osinfo.h
+	$(RM) include/_lfs_64.h
+	$(RM) include/bits/uClibc_uintmaxtostr.h
+	$(RM) include/bits/kernel_sigaction.h
+	$(RM) include/bits/kernel_stat.h
 ifneq ($(UCLIBC_HAS_FLOATS),y)
 	# Remove floating point related headers since float support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/complex.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/fpu_control.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/ieee754.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/math.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/tgmath.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/bits/uClibc_fpmax.h
+	$(RM) include/complex.h
+	$(RM) include/fpu_control.h
+	$(RM) include/ieee754.h
+	$(RM) include/math.h
+	$(RM) include/tgmath.h
+	$(RM) include/bits/uClibc_fpmax.h
 endif
 ifneq ($(UCLIBC_HAS_WCHAR),y)
 	# Remove wide char headers since wide char support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/wctype.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/wchar.h
+	$(RM) include/wctype.h
+	$(RM) include/wchar.h
 endif
 ifneq ($(UCLIBC_HAS_LOCALE),y)
 	# Remove iconv header since locale support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/iconv.h
+	$(RM) include/iconv.h
 endif
 ifneq ($(UCLIBC_HAS_GLIBC_CUSTOM_PRINTF),y)
 	# Remove printf header since custom print specifier support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/printf.h
+	$(RM) include/printf.h
 endif
 ifneq ($(UCLIBC_HAS_XLOCALE),y)
 	# Remove xlocale header since extended locale support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/xlocale.h
+	$(RM) include/xlocale.h
 endif
 ifneq ($(UCLIBC_HAS_GETTEXT_AWARENESS),y)
 	# Remove libintl header since gettext support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/libintl.h
+	$(RM) include/libintl.h
 endif
 ifneq ($(UCLIBC_HAS_REGEX),y)
 	# Remove regex headers since regex support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/regex.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/regexp.h
+	$(RM) include/regex.h
+	$(RM) include/regexp.h
 endif
 ifneq ($(UCLIBC_HAS_WORDEXP),y)
 	# Remove wordexp header since wordexp support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/wordexp.h
+	$(RM) include/wordexp.h
 endif
 ifneq ($(UCLIBC_HAS_FTW),y)
 	# Remove ftw header since ftw support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/ftw.h
+	$(RM) include/ftw.h
 endif
 ifneq ($(UCLIBC_HAS_GLOB),y)
 	# Remove glob header since glob support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/glob.h
+	$(RM) include/glob.h
 endif
 ifneq ($(UCLIBC_HAS_GNU_GETOPT),y)
 ifneq ($(UCLIBC_HAS_GETOPT_LONG),y)
 	# Remove getopt header since gnu getopt support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/getopt.h
+	$(RM) include/getopt.h
 endif
 endif
 ifneq ($(HAS_SHADOW),y)
 	# Remove shadow header since shadow password support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/shadow.h
+	$(RM) include/shadow.h
 endif
 ifneq ($(PTHREADS_DEBUG_SUPPORT),y)
 	# Remove thread_db header since thread debug support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/thread_db.h
+	$(RM) include/thread_db.h
 endif
 ifneq ($(UCLIBC_HAS_THREADS),y)
 	# Remove pthread headers since thread support is disabled.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/*thread*.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/semaphore.h
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/bits/*thread*.h
+	$(RM) include/*thread*.h
+	$(RM) include/semaphore.h
+	$(RM) include/bits/*thread*.h
 endif
 ifeq ($(UCLIBC_HAS_THREADS_NATIVE),y)
 	# Remove this as it is only used internally.
-	$(RM) $(PREFIX)$(DEVEL_PREFIX)include/tls.h
+	$(RM) include/tls.h
 endif
+	printf ".svn\n.cvsignore\nCVS\n" > tar_exclude ; \
+	if [ "$(KERNEL_SOURCE)" = "$(PREFIX)$(DEVEL_PREFIX)" ] ; then \
+		ls -1d include/linux include/asm* >> tar_exclude ; \
+	fi ; \
+	$(TAR) -chf - -X tar_exclude include/* \
+		| $(TAR) -xf - -C $(PREFIX)$(DEVEL_PREFIX)
+	rm -f tar_exclude
 	-@for i in `find $(PREFIX)$(DEVEL_PREFIX)include -type d` ; do \
 	    chmod 755 $$i; chmod 644 $$i/*.h > /dev/null 2>&1; \
 	done

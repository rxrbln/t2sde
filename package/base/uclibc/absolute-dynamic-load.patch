# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../uclibc/absolute-dynamic-load.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Fix for  0000430 (dlopen incorrectly merges absolute library names)

--- uClibc-0.9.28.orig/ldso/ldso/dl-elf.c	2005-09-14 15:30:11.000000000 +0200
+++ uClibc-0.9.28/ldso/ldso/dl-elf.c	2005-09-14 16:35:27.466836112 +0200
@@ -186,7 +186,7 @@
 {
 	const char *pnt, *pnt1;
 	struct elf_resolve *tpnt1;
-	const char *libname, *libname2;
+	const char *libname;
 	static const char libc[] = "libc.so.";
 	static const char aborted_wrong_lib[] = "%s: aborted attempt to load %s!\n";
 
@@ -226,16 +226,7 @@
 	 * function aliasing, which wastes memory, and causes
 	 * really bad things to happen with weaks and globals. */
 	for (tpnt1 = _dl_loaded_modules; tpnt1; tpnt1 = tpnt1->next) {
-
-		/* Skip over any initial initial './' and '/' stuff to
-		 * get the short form libname with no path garbage */
-		libname2 = tpnt1->libname;
-		pnt1 = _dl_strrchr(libname2, '/');
-		if (pnt1) {
-			libname2 = pnt1 + 1;
-		}
-
-		if (_dl_strcmp(libname2, libname) == 0) {
+		if (_dl_strcmp(tpnt1->libname, full_libname) == 0) {
 			/* Well, that was certainly easy */
 			return tpnt1;
 		}
@@ -270,11 +261,11 @@
 	if (pnt) {
 		libname = pnt + 1;
 	}
-
+	_dl_if_debug_dprint("\t*** load full=%s short=%s\n", full_libname, libname);
 	/* Critical step!  Weed out duplicates early to avoid
 	 * function aliasing, which wastes memory, and causes
 	 * really bad things to happen with weaks and globals. */
-	if ((tpnt1=_dl_check_if_named_library_is_loaded(libname, trace_loaded_objects))!=NULL) {
+	if ((tpnt1=_dl_check_if_named_library_is_loaded(full_libname, trace_loaded_objects))!=NULL) {
 		tpnt1->usage_count++;
 		return tpnt1;
 	}

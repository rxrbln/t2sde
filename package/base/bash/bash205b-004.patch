# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/bash/bash205b-004.patch
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

Official patches from ftp://ftp.gnu.org/pub/gnu/bash/bash-2.05b-patches/.


			     BASH PATCH REPORT
			     =================

Bash-Release: 2.05b
Patch-ID: bash205b-001

Bug-Reported-by:    taviso@sdf.lonestar.org
Bug-Reference-ID:   <200208021107.g72B723d021352@darkstar.example.net>
Bug-Reference-URL:  http://mail.gnu.org/pipermail/bug-bash/2002-August/004980.html

Bug-Description:

Bash goes into an infinite loop and eventually crashes with a SIGSEGV
when some keys on the numeric keypad are pressed, possibly in combination
with the shift key.

Patch:

*** ./lib/readline/bind.c	Thu Jan 24 11:15:52 2002
--- ./lib/readline/bind.c	Wed Jul 31 09:11:18 2002
***************
*** 312,316 ****
  	     and the function bound  to `a' to be executed when the user
  	     types `abx', leaving `bx' in the input queue. */
! 	  if (k.function /* && k.type == ISFUNC */)
  	    {
  	      map[ANYOTHERKEY] = k;
--- 312,316 ----
  	     and the function bound  to `a' to be executed when the user
  	     types `abx', leaving `bx' in the input queue. */
! 	  if (k.function && ((k.type == ISFUNC && k.function != rl_do_lowercase_version) || k.type == ISMACR))
  	    {
  	      map[ANYOTHERKEY] = k;


			     BASH PATCH REPORT
			     =================

Bash-Release: 2.05b
Patch-ID: bash205b-002

Bug-Reported-by:  rwhron@earthlink.net
Bug-Reference-ID: <20020724000454.GA15210@rushmore> (bug-bash)
Bug-Reference-URL: http://mail.gnu.org/pipermail/bug-bash/2002-July/004856.html

Bug-Description:

Repeating an edit in vi-mode with `.' does not work.

Patch:

*** ./lib/readline/readline.c	Wed Mar 13 17:10:46 2002
--- ./lib/readline/readline.c	Tue Jul 30 17:46:44 2002
***************
*** 685,688 ****
--- 685,689 ----
  #if defined (VI_MODE)
    if (rl_editing_mode == vi_mode && _rl_keymap == vi_movement_keymap &&
+       key != ANYOTHERKEY &&
        _rl_vi_textmod_command (key))
      _rl_vi_set_last (key, rl_numeric_arg, rl_arg_sign);



			     BASH PATCH REPORT
			     =================

Bash-Release: 2.05b
Patch-ID: bash205b-003

Bug-Reported-by:   jan.q.bruun-andersen@posten.se
Bug-Reference-ID:  <BE156C6450189B4ABAF7381F0AD4724A0165674F@002exmbs002.ad.posten.se>
Bug-Reference-URL: http://mail.gnu.org/pipermail/bug-bash/2002-July/004789.html

Bug-Description:

In certain cases, Bash appends a space instead of a slash to a directory
name relative to the current directory when performing command name
completion.  This affects partial completion of intermediate directory
names.

Patch:

*** ./bashline.c	Tue May  7 15:52:42 2002
--- ./bashline.c	Sat Aug  3 11:40:16 2002
***************
*** 1045,1049 ****
--- 1045,1052 ----
        else
  	{
+ #define CMD_IS_DIR(x)	(absolute_pathname(x) == 0 && *(x) != '~' && test_for_directory (x))
+ 
  	  matches = rl_completion_matches (text, command_word_completion_function);
+ 
  	  /* If we are attempting command completion and nothing matches, we
  	     do not want readline to perform filename completion for us.  We
***************
*** 1053,1057 ****
  	  if (matches == (char **)NULL)
  	    rl_ignore_some_completions_function = bash_ignore_filenames;
! 	  else if (matches[1] == 0 && *matches[0] != '/')
  	    /* Turn off rl_filename_completion_desired so readline doesn't
  	       append a slash if there is a directory with the same name
--- 1056,1060 ----
  	  if (matches == (char **)NULL)
  	    rl_ignore_some_completions_function = bash_ignore_filenames;
! 	  else if (matches[1] == 0 && CMD_IS_DIR(matches[0]))
  	    /* Turn off rl_filename_completion_desired so readline doesn't
  	       append a slash if there is a directory with the same name
***************
*** 1062,1066 ****
  	       conflict. */
  	    rl_filename_completion_desired = 0;
! 	  else if (matches[0] && matches[1] && STREQ (matches[0], matches[1]) && *matches[0] != '/')
  	    /* There are multiple instances of the same match (duplicate
  	       completions haven't yet been removed).  In this case, all of
--- 1065,1069 ----
  	       conflict. */
  	    rl_filename_completion_desired = 0;
! 	  else if (matches[0] && matches[1] && STREQ (matches[0], matches[1]) && CMD_IS_DIR (matches[0]))
  	    /* There are multiple instances of the same match (duplicate
  	       completions haven't yet been removed).  In this case, all of


			     BASH PATCH REPORT
			     =================

Bash-Release: 2.05b
Patch-ID: bash205b-004

Bug-Reported-by:   c.f.a.johnson@rogers.com
Bug-Reference-ID:  <aji8sb$1aa9bi$2@ID-136730.news.dfncis.de>
Bug-Reference-URL: http://mail.gnu.org/pipermail/bug-bash/2002-August/005074.html

Bug-Description:

A bug in the bash variable expansion code causes leading blanks in a
variable's value to be ignored when computing its length.

Patch:

*** ./subst.c	Mon Jun 24 07:59:45 2002
--- ./subst.c	Sat Aug 17 17:28:46 2002
***************
*** 1639,1647 ****
  /* This performs word splitting and quoted null character removal on
     STRING. */
! #if 0
! #define issep(c)	((separators)[1] ? (member ((c), separators)) : (c) == (separators)[0])
! #else
! #define issep(c)	((separators)[1] ? isifs(c) : (c) == (separators)[0])
! #endif
  
  WORD_LIST *
--- 1639,1646 ----
  /* This performs word splitting and quoted null character removal on
     STRING. */
! #define issep(c) \
! 	(((separators)[0]) ? ((separators)[1] ? isifs(c) \
! 					      : (c) == (separators)[0]) \
! 			   : 0)
  
  WORD_LIST *



# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../dietlibc/dietlibc.conf
# Copyright (C) 2004 - 2005 The T2 SDE Project
# Copyright (C) 1998 - 2004 ROCK Linux Project
# 
# More information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- T2-COPYRIGHT-NOTE-END ---

dietlibc_initial_fixup() {
	sed -i /WANT_SYSENTER/d dietfeatures.h 
	sed -i "s,(CROSS)strip,(STRIP),g" Makefile
	sed -i "s,(CROSS)ar,(AR),g" Makefile
	sed -i "s,(CROSS)ld,(LD),g" Makefile

	case "$arch_machine" in
		powerpc)	ln -vs bin-ppc bin-powerpc	;;
		powerpc64)	ln -vs bin-ppc64 bin-powerpc64	;;
	esac
	
	if [ "$crossnative" != native ] ; then
		mkdir -p bin-$cpu bin-$hostcpu
		ln -s bin-$cpu "bin-${CC%%-*}"
	fi
}

dietlibc_make_wrappers() {
	rm -rf $toolsbin; mkdir -p $toolsbin
	for x in gcc as ld ar ranlib nm ; do # wrapper
		cat <<-EOT > $toolsbin/${arch_target}-$x
		#!/bin/sh
		#PATH=\${PATH/\$(dirname \$( type -p \$0 ))/}; PATH=\${PATH/::/:}
		exec ${pkg_dietlibc_orig_target}-$x "\$@"
		EOT
		chmod +x $toolsbin/${arch_target}-$x
	done
}

dietlibc_install_toolscross() {
	local diet=bin-$1/diet
	cp -v $diet-i $toolsbin/diet
	[ ! -f $diet-dyn-i ] ||
		cp -v $diet-dyn-i $toolsbin/diet-dyn
}

dietlibc_build_nativewrapper() {
	patch -p1 < $confdir/hostlibc.diff
	$HOSTCC -Os -DDIETHOME=\"$PWD\" -DVERSION=\"$ver\" \
	        diet.c -o bin-$hostcpu/diet
	$HOSTCC -Os -DDIETHOME=\"$root/$prefix\" -DVERSION=\"$ver\" \
		-DINSTALLVERSION \
		diet.c -o bin-$hostcpu/diet-i

	$HOSTCC -Os -DDIETHOME=\"$PWD\" -DVERSION=\"$ver\" \
		-D__DYN_LIB \
		diet.c -o bin-$hostcpu/diet-dyn
	$HOSTCC -Os -DDIETHOME=\"$root/$prefix\" -DVERSION=\"$ver\" \
		-DINSTALLVERSION \
		-D__DYN_LIB \
		diet.c -o bin-$hostcpu/diet-dyn-i

	patch -Rp1 < $confdir/hostlibc.diff
}

dietlibc_final_fixup() {
	for x in ppc ppc64; do
		if [ -d $root/$prefix/dietlibc/lib-$x ] ; then
			rm -f $root/$prefix/dietlibc/lib-${x/ppc/powerpc}
			ln -sfnv lib-$x $root/$prefix/dietlibc/lib-${x/ppc/powerpc}
		fi
	done
}

if [ "$SDECFG_LIBC" = "dietlibc" ] ; then
	true
else
	includedir=/$prefix/dietlibc/include
fi

if [ "$prefix" = "usr" -o "$prefix" = "usr/local" ] ; then
	makeinstopt="$makeinstopt prefix=/$prefix/dietlibc"
	makeinstopt="$makeinstopt BINDIR=/$prefix/bin"
	makeinstopt="$makeinstopt MAN1DIR=/$prefix/man/man1"
	makeopt="$makeopt prefix=/$prefix/dietlibc all"
else
	makeinstopt="$makeinstopt prefix=/$prefix"
	makeopt="$makeopt prefix=/$prefix all"
fi

cpu="`echo $arch | arch2uname | sed -e s/sh.$/sh/`"
hostcpu="`uname -m | uname2arch | arch2uname`"

toolsbin=$base/build/$SDECFG_ID/TOOLCHAIN/$toolsdir/diet-bin

if [ "$SDECFG_STATIC" != 1 ]; then
	case $cpu in
		arm|i386|x86_64)
			var_append makeopt " " "dyn"
			;;
	esac
fi

# dietlibc contains non Thumb aware assembly ...
var_remove GCC_WRAPPER_INSERT " " "-mthumb"

# special features
[ "$SDECFG_DIETWANT_SYSENTER" = "1" ] &&
	var_append GCC_WRAPPER_APPEND ' ' '-DWANT_SYSENTER'

var_append GCC_WRAPPER_APPEND ' ' '-DWANT_DYNAMIC'
var_append GCC_WRAPPER_APPEND ' ' '-DWANT_MALLOC_ZERO'

if [ "$stagelevel" -eq 0 ]; then
	makeopt=
	makeinstopt=
	hook_add postmake 4 'mkdir -p $base/build/${SDECFG_ID}${includedir}/'
	hook_add postmake 5 'cp -rv include/* $base/build/${SDECFG_ID}${includedir}/'
else
	hook_add postpatch 5 'dietlibc_initial_fixup'
	[ $toolsdir != tools.cross ] ||
		hook_add premake 5 'dietlibc_make_wrappers'
	if [ "$crossnative" = native ] ; then
		# dietlibc uses uname - so we always need to set MYARCH
		makeopt="MYARCH=$cpu $makeopt"
		makeinstopt="MYARCH=$cpu $makeinstopt"

		[ $toolsdir != tools.cross ] ||
			hook_add inmake 5 "dietlibc_install_toolscross $cpu"
	else
		# first build a native diet wrapper (don't ask)
		hook_add premake 7 "dietlibc_build_nativewrapper"
		hook_add premake 8 "dietlibc_install_toolscross $hostcpu"

		makeopt="ARCH=$cpu CROSS=$archprefix $makeopt CC=cc"
		makeinstopt="ARCH=$cpu $makeinstopt"
	fi
	hook_add postmake  9 'dietlibc_final_fixup'
fi


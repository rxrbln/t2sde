# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../dietlibc/dietlibc.conf
# Copyright (C) 2004 - 2005 The T2 SDE Project
# Copyright (C) 1998 - 2004 ROCK Linux Project
# 
# More information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- T2-COPYRIGHT-NOTE-END ---

if [ "$SDECFG_LIBC" = "dietlibc" ] ; then
	dietdir=""
else
	dietdir="dietlibc"
fi

dietlibc_stage0() {
	mkdir -p $base/build/$SDECFG_ID/$prefix/$dietdir
	cp -rv include $base/build/$SDECFG_ID/$prefix/$dietdir/
}

dietlibc_main() {
	if [ $toolsdir = tools.cross ] ; then
		rm -rf $toolsbin; mkdir -p $toolsbin
		for x in gcc as ld ar ranlib nm ; do
			cat > $toolsbin/${arch_target}-$x << EOT
#!/bin/sh
PATH=\${PATH/\$(dirname \$( type -p \$0 ))/}; PATH=\${PATH/::/:}
exec ${pkg_dietlibc_orig_target}-$x
EOT
			chmod +x $toolsbin/${arch_target}-$x
		done
	fi

	# special features
	if ! [ "$SDECFG_DIETWANT_SYSENTER" = "1" ]; then
		sed -i "s,^#define WANT_SYSENTER$,/*\0*/," dietfeatures.h
	fi

	# well, ...
	ln -vs bin-ppc bin-powerpc

	# build package
	if [ "$crossnative" = native ] ; then
		# dietlibc uses uname - so we always need to set MYARCH
		eval "$MAKE MYARCH=$cpu $makeopt"
		if [ $toolsdir = tools.cross ] ; then
			cp -v bin-$cpu/diet-i $toolsbin/diet
			[ -f bin-$cpu/diet-dyn-i ] &&
			  cp -v bin-$cpu/diet-dyn-i $toolsbin/diet-dyn
		fi

		eval "$MAKE MYARCH=$cpu $makeinstopt"
	else
		mkdir bin-$cpu ; ln -s bin-$cpu "bin-${CC%%-*}"

		# first build a native diet wrapper (don't ask)

		mkdir -p bin-$hostcpu
		patch -p1 < $confdir/hostlibc.diff
		$HOSTCC -Os -DDIETHOME=\"$PWD\" -DVERSION=\"$ver\" \
		        diet.c -o bin-$hostcpu/diet
		$HOSTCC -Os -DDIETHOME=\"$root/$prefix\" -DVERSION=\"$ver\" \
			-DINSTALLVERSION \
			diet.c -o bin-$hostcpu/diet-i

		$HOSTCC -Os -DDIETHOME=\"$PWD\" -DVERSION=\"$ver\" \
			-D__DYN_LIB \
			diet.c -o bin-$hostcpu/diet-dyn
		$HOSTCC -Os -DDIETHOME=\"$root/$prefix\" -DVERSION=\"$ver\" \
			-DINSTALLVERSION \
			-D__DYN_LIB \
			diet.c -o bin-$hostcpu/diet-dyn-i

		if [ $toolsdir = tools.cross ] ; then
			cp -v bin-$hostcpu/diet-i $toolsbin/diet
			[ -f bin-$hostcpu/diet-dyn-i ] &&
			  cp -v bin-$hostcpu/diet-dyn-i $toolsbin/diet-dyn
		fi
		patch -Rp1 < $confdir/hostlibc.diff

		eval "$MAKE ARCH=$cpu CROSS=$archprefix $makeopt CC=cc"
		eval "$MAKE ARCH=$cpu $makeinstopt"
	fi

	if [ -d $root/$prefix/dietlibc/lib-ppc ] ; then
		rm -vf $root/$prefix/dietlibc/lib-powerpc
		ln -vs lib-ppc $root/$prefix/dietlibc/lib-powerpc
	fi
}

if [ "$prefix" = "usr" -o "$prefix" = "usr/local" ] ; then
	makeinstopt="$makeinstopt prefix=/$prefix/dietlibc"
	makeinstopt="$makeinstopt BINDIR=/$prefix/bin"
	makeinstopt="$makeinstopt MAN1DIR=/$prefix/man/man1"
	makeopt="$makeopt prefix=/$prefix/dietlibc all"
else
	makeinstopt="$makeinstopt prefix=/$prefix"
	makeopt="$makeopt prefix=/$prefix all"
fi

cpu="`echo "$arch_machine" | sed -e s/i.86/i386/ -e s/powerpc/ppc/ \
      -e s/sh.$/sh/`"
hostcpu="`uname -m | sed -e s/i.86/i386/ -e s/powerpc/ppc/ \
          -e s/sh.$/sh/`"

toolsbin=$base/build/$SDECFG_ID/TOOLCHAIN/$toolsdir/diet-bin

if [ "$SDECFG_STATIC" != 1 ]; then
	case $cpu in
		arm|i386|x86_64)
			var_append makeopt " " "dyn"
			;;
	esac
fi

# dietlibc contains non Thumb aware assembly ...
var_remove GCC_WRAPPER_INSERT " " "-mthumb"

if [ "$stagelevel" -eq 0 ]; then
	custmain="dietlibc_stage0"
else
	custmain="dietlibc_main"
fi


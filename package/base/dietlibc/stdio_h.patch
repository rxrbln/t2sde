# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../dietlibc/stdio_h.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# Copyright (C) 1998 - 2004 ROCK Linux Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

This is needed because a definition like:
"static FILE dummy;"
will not work because of:
"storage size of `dummy' isn't known"
and that can be found in coreutils ...

--- ./dietstdio.h~	Fri Dec 13 21:23:43 2002
+++ ./dietstdio.h	Sat Apr 19 17:07:14 2003
@@ -14,22 +14,6 @@
 #define BUFSIZE 2048
 #endif
 
-struct __stdio_file {
-  int fd;
-  int flags;
-  unsigned int bs;	/* read: bytes in buffer */
-  unsigned int bm;	/* position in buffer */
-  unsigned int buflen;	/* length of buf */
-  char *buf;
-  struct __stdio_file *next;	/* for fflush */
-  pid_t popen_kludge;
-  unsigned char ungetbuf;
-  char ungotten;
-#ifdef WANT_THREAD_SAFE
-  pthread_mutex_t m;
-#endif
-};
-
 #define ERRORINDICATOR 1
 #define EOFINDICATOR 2
 #define BUFINPUT 4
--- ./include/stdio.h.orig	Sat Apr 19 17:18:15 2003
+++ ./include/stdio.h	Sat Apr 19 17:20:18 2003
@@ -5,6 +5,26 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 
+#ifndef _PTHREAD_H
+#include <pthread.h>
+#endif
+
+struct __stdio_file {
+  int fd;
+  int flags;
+  unsigned int bs;      /* read: bytes in buffer */
+  unsigned int bm;      /* position in buffer */
+  unsigned int buflen;  /* length of buf */
+  char *buf;
+  struct __stdio_file *next;    /* for fflush */
+  pid_t popen_kludge;
+  unsigned char ungetbuf;
+  char ungotten;
+#ifdef WANT_THREAD_SAFE
+  pthread_mutex_t m;
+#endif
+};
+
 typedef struct __stdio_file FILE;
 
 FILE *fopen (const char *path, const char *mode) __THROW;

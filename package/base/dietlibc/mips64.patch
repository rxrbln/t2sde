# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../dietlibc/mips64.patch
# Copyright (C) 2010 - 2014 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

MIPS64 support for dietlibc, most stuff works now.
The patch depends on: cp -ar mips{,64} as base.

  - Rene Rebe <rene@exactcode.de>

--- dietlibc-0.32/syscalls.h.vanilla    2011-01-11 15:55:47.687079252 +0000
+++ dietlibc-0.32/syscalls.h    2011-01-11 15:57:14.183804303 +0000
@@ -17,6 +17,9 @@
 #elif defined(__powerpc__)
 #include "ppc/syscalls.h"

+#elif defined(__mips64)
+#include "mips64/syscalls.h"
+
 #elif defined(__mips__)
 #include "mips/syscalls.h"

diff -urN dietlibc-0.32/include/endian.h dietlibc-0.32-fixed//include/endian.h
--- dietlibc-0.32/include/endian.h	2005-10-04 17:47:03.000000000 +0000
+++ dietlibc-0.32-fixed//include/endian.h	2011-02-03 11:07:52.900138397 +0000
@@ -5,7 +5,7 @@
 #define	__BIG_ENDIAN	4321
 
 #ifdef __mips__
-#if _MIPS_SIM == _MIPS_SIM_ABI64
+#ifdef __mips64
 #define __mips64__
 #else
 #undef __mips64__
--- dietlibc-0.32/include/sys/stat.h.vanilla	2011-02-04 14:05:52.983716588 +0000
+++ dietlibc-0.32/include/sys/stat.h	2011-02-04 14:13:11.696134006 +0000
@@ -197,6 +197,47 @@
 
 #elif defined(__mips__)
 
+#ifdef __mips64
+
+/* The memory layout is the same as of struct stat64 of the 32-bit kernel.  */
+struct stat {
+        unsigned int            st_dev;
+        unsigned int            st_pad0[3]; /* Reserved for st_dev expansion */
+
+        unsigned long           st_ino;
+
+        mode_t                  st_mode;
+        nlink_t                 st_nlink;
+
+        uid_t                   st_uid;
+        gid_t                   st_gid;
+
+        unsigned int            st_rdev;
+        unsigned int            st_pad1[3]; /* Reserved for st_rdev expansion */
+
+        off_t                   st_size;
+
+        /*
+         * Actually this should be timestruc_t st_atime, st_mtime and st_ctime
+         * but we don't have it under Linux.
+         */
+        time_t                  st_atime;
+        unsigned int            st_atime_nsec;
+
+        time_t                  st_mtime;
+        unsigned int            st_mtime_nsec;
+
+        time_t                  st_ctime;
+        unsigned int            st_ctime_nsec;
+
+        unsigned int            st_blksize;
+        unsigned int            st_pad2;
+
+        unsigned long           st_blocks;
+};
+
+#else
+
 struct stat {
 	uint32_t	st_dev;
 	long		st_pad1[3];		/* Reserved for network id */
@@ -253,6 +294,8 @@
 	unsigned long	st_pad2;
 __extension__ long long	st_blocks;
 };
+#endif
+
 #elif defined(__powerpc__) || defined(__powerpc64__)
 
 #if defined(__powerpc__) && !defined(__powerpc64__)
--- dietlibc-0.33/diet.c.vanilla	2014-06-03 16:47:32.000000000 +0200
+++ dietlibc-0.33/diet.c	2014-06-03 16:47:54.000000000 +0200
@@ -34,6 +34,7 @@
   "alpha","-Os","-fomit-frame-pointer",0,
   "arm","-Os","-fomit-frame-pointer",0,
   "mips","-Os","-fomit-frame-pointer","-march=mips2",0,
+  "mips64","-Os","-fomit-frame-pointer","-mno-abicalls","-fno-pic","-G","0",0,
   "mipsel","-Os","-fomit-frame-pointer","-march=mips2",0,
   "ppc","-Os","-fomit-frame-pointer","-mpowerpc-gpopt","-mpowerpc-gfxopt",0,
   "ppc64","-Os","-fomit-frame-pointer","-mpowerpc-gpopt","-mpowerpc-gfxopt",0,
@@ -173,6 +174,9 @@
 #ifdef __mips__
       shortplatform="mips";
 #endif
+#ifdef __mips64
+      shortplatform="mips64";
+#endif
 #ifdef __s390x__
       shortplatform="s390x";
 #else
--- dietlibc-0.32/mips64/Makefile.add.vanilla	2006-06-21 20:06:30.000000000 +0000
+++ dietlibc-0.32/mips64/Makefile.add	2010-09-25 11:42:24.447227563 +0000
@@ -10,5 +10,4 @@
 ENDIAN=-meb
 endif
-CFLAGS+=$(ENDIAN) -Os -march=mips2
-VPATH:=mips:syscalls.s:$(VPATH)
-LIBOBJ+=$(OBJDIR)/pread64.o $(OBJDIR)/pwrite64.o $(OBJDIR)/divdi3.o $(OBJDIR)/__CAS.o
+VPATH:=mips64:syscalls.s:$(VPATH)
+LIBOBJ+=$(OBJDIR)/pread64.o $(OBJDIR)/pwrite64.o $(OBJDIR)/__CAS.o $(OBJDIR)/__time.o $(OBJDIR)/__waitpid.o $(OBJDIR)/__send.o $(OBJDIR)/__recv.o
--- /dev/null   2010-07-05 19:29:53.544614528 +0200
+++ dietlibc/mips64/__time.c       2010-09-22 13:54:06.000000000 +0200
@@ -0,0 +1,1 @@
+#include "alpha/__time.c"
--- /dev/null   2010-07-05 19:29:53.544614528 +0200
+++ dietlibc/mips64/__waitpid.c       2010-09-22 13:54:06.000000000 +0200
@@ -0,0 +1,1 @@
+#include "ia64/__waitpid.c"
--- dietlibc-0.32/mips64/__recv.c.vanilla	2011-01-11 16:08:33.031198909 +0000
+++ dietlibc-0.32/mips64/__recv.c	2011-01-11 16:06:32.950885780 +0000
@@ -0,0 +1,13 @@
+#include <sys/types.h>
+#include <sys/socket.h>
+#include <linuxnet.h>
+
+int __libc_recv(int fd, void * buf, size_t n, int flags);
+  /* shut up gcc warning about missing prototype */
+
+int __libc_recv(int fd, void * buf, size_t n, int flags) {
+  return recvfrom(fd, buf, n, flags, 0, 0);
+}
+
+int recv(int a, void * b, size_t c, int flags)
+  __attribute__ ((weak, alias("__libc_recv")));
--- dietlibc-0.32/mips64/__pread.S.vanilla	2011-01-11 15:47:55.510814688 +0000
+++ dietlibc-0.32/mips64/__pread.S	2011-01-11 15:48:00.662803639 +0000
@@ -1,3 +1,3 @@
 #include "syscalls.h"
 
-syscall(pread,__pread)
+syscall(pread64,__pread)
--- dietlibc-0.32/mips64/__pwrite.S.vanilla      2011-01-11 15:47:55.510814688 +0000
+++ dietlibc-0.32/mips64/__pwrite.S      2011-01-11 15:48:00.662803639 +0000
@@ -1,3 +1,3 @@
 #include "syscalls.h"

-syscall(pwrite,__pwrite)
+syscall(pwrite64,__pwrite)
--- dietlibc-0.32/mips64/__send.c.vanilla	2011-01-11 16:08:28.887203510 +0000
+++ dietlibc-0.32/mips64/__send.c	2011-01-11 16:06:29.494943286 +0000
@@ -0,0 +1,13 @@
+#include <sys/types.h>
+#include <sys/socket.h>
+#include <linuxnet.h>
+
+int __libc_send(int fd, const void * buf, size_t n, int flags);
+  /* shut up gcc warning about missing prototype */
+
+int __libc_send(int fd, const void * buf, size_t n, int flags) {
+  return sendto(fd, buf, n, flags, NULL, 0);
+}
+
+int send(int a, const void * b, size_t c, int flags)
+  __attribute__ ((weak, alias("__libc_send")));
--- dietlibc-0.32/syscalls.s/umount.S.vanilla	2011-01-11 15:59:06.176652406 +0000
+++ dietlibc-0.32/syscalls.s/umount.S	2011-01-11 15:59:22.446806902 +0000
@@ -1,3 +1,7 @@
 #include "syscalls.h"
 
+#ifndef __NR_umount
+syscall(umount2,umount)
+#else
 syscall(umount,umount)
+#endif
--- dietlibc-0.32/mips64/syscalls.h.orig	2008-09-30 21:02:35.000000000 +0000
+++ dietlibc-0.32/mips64/syscalls.h	2011-01-08 17:00:42.000000000 +0000
@@ -1,332 +1,306 @@
 
 /*
- * Linux o32 style syscalls are in the range from 4000 to 4999.
+ * Linux 64-bit syscalls are in the range from 5000 to 5999.
  */
-#define __NR_Linux			4000
-#define __NR_syscall			(__NR_Linux +   0)
-#define __NR_exit			(__NR_Linux +   1)
-#define __NR_fork			(__NR_Linux +   2)
-#define __NR_read			(__NR_Linux +   3)
-#define __NR_write			(__NR_Linux +   4)
-#define __NR_open			(__NR_Linux +   5)
-#define __NR_close			(__NR_Linux +   6)
-#define __NR_waitpid			(__NR_Linux +   7)
-#define __NR_creat			(__NR_Linux +   8)
-#define __NR_link			(__NR_Linux +   9)
-#define __NR_unlink			(__NR_Linux +  10)
-#define __NR_execve			(__NR_Linux +  11)
-#define __NR_chdir			(__NR_Linux +  12)
-#define __NR_time			(__NR_Linux +  13)
-#define __NR_mknod			(__NR_Linux +  14)
-#define __NR_chmod			(__NR_Linux +  15)
-#define __NR_lchown			(__NR_Linux +  16)
-#define __NR_break			(__NR_Linux +  17)
-#define __NR_unused18			(__NR_Linux +  18)
-#define __NR_lseek			(__NR_Linux +  19)
-#define __NR_getpid			(__NR_Linux +  20)
-#define __NR_mount			(__NR_Linux +  21)
-#define __NR_umount			(__NR_Linux +  22)
-#define __NR_setuid			(__NR_Linux +  23)
-#define __NR_getuid			(__NR_Linux +  24)
-#define __NR_stime			(__NR_Linux +  25)
-#define __NR_ptrace			(__NR_Linux +  26)
-#define __NR_alarm			(__NR_Linux +  27)
-#define __NR_unused28			(__NR_Linux +  28)
-#define __NR_pause			(__NR_Linux +  29)
-#define __NR_utime			(__NR_Linux +  30)
-#define __NR_stty			(__NR_Linux +  31)
-#define __NR_gtty			(__NR_Linux +  32)
-#define __NR_access			(__NR_Linux +  33)
-#define __NR_nice			(__NR_Linux +  34)
-#define __NR_ftime			(__NR_Linux +  35)
-#define __NR_sync			(__NR_Linux +  36)
-#define __NR_kill			(__NR_Linux +  37)
-#define __NR_rename			(__NR_Linux +  38)
-#define __NR_mkdir			(__NR_Linux +  39)
-#define __NR_rmdir			(__NR_Linux +  40)
-#define __NR_dup			(__NR_Linux +  41)
-#define __NR_pipe			(__NR_Linux +  42)
-#define __NR_times			(__NR_Linux +  43)
-#define __NR_prof			(__NR_Linux +  44)
-#define __NR_brk			(__NR_Linux +  45)
-#define __NR_setgid			(__NR_Linux +  46)
-#define __NR_getgid			(__NR_Linux +  47)
-#define __NR_signal			(__NR_Linux +  48)
-#define __NR_geteuid			(__NR_Linux +  49)
-#define __NR_getegid			(__NR_Linux +  50)
-#define __NR_acct			(__NR_Linux +  51)
-#define __NR_umount2			(__NR_Linux +  52)
-#define __NR_lock			(__NR_Linux +  53)
-#define __NR_ioctl			(__NR_Linux +  54)
-#define __NR_fcntl			(__NR_Linux +  55)
-#define __NR_mpx			(__NR_Linux +  56)
-#define __NR_setpgid			(__NR_Linux +  57)
-#define __NR_ulimit			(__NR_Linux +  58)
-#define __NR_unused59			(__NR_Linux +  59)
-#define __NR_umask			(__NR_Linux +  60)
-#define __NR_chroot			(__NR_Linux +  61)
-#define __NR_ustat			(__NR_Linux +  62)
-#define __NR_dup2			(__NR_Linux +  63)
-#define __NR_getppid			(__NR_Linux +  64)
-#define __NR_getpgrp			(__NR_Linux +  65)
-#define __NR_setsid			(__NR_Linux +  66)
-#define __NR_sigaction			(__NR_Linux +  67)
-#define __NR_sgetmask			(__NR_Linux +  68)
-#define __NR_ssetmask			(__NR_Linux +  69)
-#define __NR_setreuid			(__NR_Linux +  70)
-#define __NR_setregid			(__NR_Linux +  71)
-#define __NR_sigsuspend			(__NR_Linux +  72)
-#define __NR_sigpending			(__NR_Linux +  73)
-#define __NR_sethostname		(__NR_Linux +  74)
-#define __NR_setrlimit			(__NR_Linux +  75)
-#define __NR_getrlimit			(__NR_Linux +  76)
-#define __NR_getrusage			(__NR_Linux +  77)
-#define __NR_gettimeofday		(__NR_Linux +  78)
-#define __NR_settimeofday		(__NR_Linux +  79)
-#define __NR_getgroups			(__NR_Linux +  80)
-#define __NR_setgroups			(__NR_Linux +  81)
-#define __NR_reserved82			(__NR_Linux +  82)
-#define __NR_symlink			(__NR_Linux +  83)
-#define __NR_unused84			(__NR_Linux +  84)
-#define __NR_readlink			(__NR_Linux +  85)
-#define __NR_uselib			(__NR_Linux +  86)
-#define __NR_swapon			(__NR_Linux +  87)
-#define __NR_reboot			(__NR_Linux +  88)
-#define __NR_readdir			(__NR_Linux +  89)
-#define __NR_mmap			(__NR_Linux +  90)
-#define __NR_munmap			(__NR_Linux +  91)
-#define __NR_truncate			(__NR_Linux +  92)
-#define __NR_ftruncate			(__NR_Linux +  93)
-#define __NR_fchmod			(__NR_Linux +  94)
-#define __NR_fchown			(__NR_Linux +  95)
-#define __NR_getpriority		(__NR_Linux +  96)
-#define __NR_setpriority		(__NR_Linux +  97)
-#define __NR_profil			(__NR_Linux +  98)
-#define __NR_statfs			(__NR_Linux +  99)
-#define __NR_fstatfs			(__NR_Linux + 100)
-#define __NR_ioperm			(__NR_Linux + 101)
-#define __NR_socketcall			(__NR_Linux + 102)
-#define __NR_syslog			(__NR_Linux + 103)
-#define __NR_setitimer			(__NR_Linux + 104)
-#define __NR_getitimer			(__NR_Linux + 105)
-#define __NR_stat			(__NR_Linux + 106)
-#define __NR_lstat			(__NR_Linux + 107)
-#define __NR_fstat			(__NR_Linux + 108)
-#define __NR_unused109			(__NR_Linux + 109)
-#define __NR_iopl			(__NR_Linux + 110)
-#define __NR_vhangup			(__NR_Linux + 111)
-#define __NR_idle			(__NR_Linux + 112)
-#define __NR_vm86			(__NR_Linux + 113)
-#define __NR_wait4			(__NR_Linux + 114)
-#define __NR_swapoff			(__NR_Linux + 115)
-#define __NR_sysinfo			(__NR_Linux + 116)
-#define __NR_ipc			(__NR_Linux + 117)
-#define __NR_fsync			(__NR_Linux + 118)
-#define __NR_sigreturn			(__NR_Linux + 119)
-#define __NR_clone			(__NR_Linux + 120)
-#define __NR_setdomainname		(__NR_Linux + 121)
-#define __NR_uname			(__NR_Linux + 122)
-#define __NR_modify_ldt			(__NR_Linux + 123)
-#define __NR_adjtimex			(__NR_Linux + 124)
-#define __NR_mprotect			(__NR_Linux + 125)
-#define __NR_sigprocmask		(__NR_Linux + 126)
-#define __NR_create_module		(__NR_Linux + 127)
-#define __NR_init_module		(__NR_Linux + 128)
-#define __NR_delete_module		(__NR_Linux + 129)
-#define __NR_get_kernel_syms		(__NR_Linux + 130)
-#define __NR_quotactl			(__NR_Linux + 131)
-#define __NR_getpgid			(__NR_Linux + 132)
-#define __NR_fchdir			(__NR_Linux + 133)
-#define __NR_bdflush			(__NR_Linux + 134)
-#define __NR_sysfs			(__NR_Linux + 135)
-#define __NR_personality		(__NR_Linux + 136)
-#define __NR_afs_syscall		(__NR_Linux + 137) /* Syscall for Andrew File System */
-#define __NR_setfsuid			(__NR_Linux + 138)
-#define __NR_setfsgid			(__NR_Linux + 139)
-#define __NR__llseek			(__NR_Linux + 140)
-#define __NR_getdents			(__NR_Linux + 141)
-#define __NR__newselect			(__NR_Linux + 142)
-#define __NR_flock			(__NR_Linux + 143)
-#define __NR_msync			(__NR_Linux + 144)
-#define __NR_readv			(__NR_Linux + 145)
-#define __NR_writev			(__NR_Linux + 146)
-#define __NR_cacheflush			(__NR_Linux + 147)
-#define __NR_cachectl			(__NR_Linux + 148)
-#define __NR_sysmips			(__NR_Linux + 149)
-#define __NR_unused150			(__NR_Linux + 150)
-#define __NR_getsid			(__NR_Linux + 151)
-#define __NR_fdatasync			(__NR_Linux + 152)
-#define __NR__sysctl			(__NR_Linux + 153)
-#define __NR_mlock			(__NR_Linux + 154)
-#define __NR_munlock			(__NR_Linux + 155)
-#define __NR_mlockall			(__NR_Linux + 156)
-#define __NR_munlockall			(__NR_Linux + 157)
-#define __NR_sched_setparam		(__NR_Linux + 158)
-#define __NR_sched_getparam		(__NR_Linux + 159)
-#define __NR_sched_setscheduler		(__NR_Linux + 160)
-#define __NR_sched_getscheduler		(__NR_Linux + 161)
-#define __NR_sched_yield		(__NR_Linux + 162)
-#define __NR_sched_get_priority_max	(__NR_Linux + 163)
-#define __NR_sched_get_priority_min	(__NR_Linux + 164)
-#define __NR_sched_rr_get_interval	(__NR_Linux + 165)
-#define __NR_nanosleep			(__NR_Linux + 166)
-#define __NR_mremap			(__NR_Linux + 167)
-#define __NR_accept			(__NR_Linux + 168)
-#define __NR_bind			(__NR_Linux + 169)
-#define __NR_connect			(__NR_Linux + 170)
-#define __NR_getpeername		(__NR_Linux + 171)
-#define __NR_getsockname		(__NR_Linux + 172)
-#define __NR_getsockopt			(__NR_Linux + 173)
-#define __NR_listen			(__NR_Linux + 174)
-#define __NR_recv			(__NR_Linux + 175)
-#define __NR_recvfrom			(__NR_Linux + 176)
-#define __NR_recvmsg			(__NR_Linux + 177)
-#define __NR_send			(__NR_Linux + 178)
-#define __NR_sendmsg			(__NR_Linux + 179)
-#define __NR_sendto			(__NR_Linux + 180)
-#define __NR_setsockopt			(__NR_Linux + 181)
-#define __NR_shutdown			(__NR_Linux + 182)
-#define __NR_socket			(__NR_Linux + 183)
-#define __NR_socketpair			(__NR_Linux + 184)
-#define __NR_setresuid			(__NR_Linux + 185)
-#define __NR_getresuid			(__NR_Linux + 186)
-#define __NR_query_module		(__NR_Linux + 187)
-#define __NR_poll			(__NR_Linux + 188)
-#define __NR_nfsservctl			(__NR_Linux + 189)
-#define __NR_setresgid			(__NR_Linux + 190)
-#define __NR_getresgid			(__NR_Linux + 191)
-#define __NR_prctl			(__NR_Linux + 192)
-#define __NR_rt_sigreturn		(__NR_Linux + 193)
-#define __NR_rt_sigaction		(__NR_Linux + 194)
-#define __NR_rt_sigprocmask		(__NR_Linux + 195)
-#define __NR_rt_sigpending		(__NR_Linux + 196)
-#define __NR_rt_sigtimedwait		(__NR_Linux + 197)
-#define __NR_rt_sigqueueinfo		(__NR_Linux + 198)
-#define __NR_rt_sigsuspend		(__NR_Linux + 199)
-#define __NR_pread			(__NR_Linux + 200)
-#define __NR_pwrite			(__NR_Linux + 201)
-#define __NR_chown			(__NR_Linux + 202)
-#define __NR_getcwd			(__NR_Linux + 203)
-#define __NR_capget			(__NR_Linux + 204)
-#define __NR_capset			(__NR_Linux + 205)
-#define __NR_sigaltstack		(__NR_Linux + 206)
-#define __NR_sendfile			(__NR_Linux + 207)
-#define __NR_getpmsg			(__NR_Linux + 208)
-#define __NR_putpmsg			(__NR_Linux + 209)
-#define __NR_mmap2			(__NR_Linux + 210)
-#define __NR_truncate64			(__NR_Linux + 211)
-#define __NR_ftruncate64		(__NR_Linux + 212)
-#define __NR_stat64			(__NR_Linux + 213)
-#define __NR_lstat64			(__NR_Linux + 214)
-#define __NR_fstat64			(__NR_Linux + 215)
-#define __NR_pivot_root			(__NR_Linux + 216)
-#define __NR_mincore			(__NR_Linux + 217)
-#define __NR_madvise			(__NR_Linux + 218)
-#define __NR_getdents64			(__NR_Linux + 219)
-#define __NR_fcntl64			(__NR_Linux + 220)
-#define __NR_reserved221		(__NR_Linux + 221)
-#define __NR_gettid			(__NR_Linux + 222)
-#define __NR_readahead			(__NR_Linux + 223)
-#define __NR_setxattr			(__NR_Linux + 224)
-#define __NR_lsetxattr			(__NR_Linux + 225)
-#define __NR_fsetxattr			(__NR_Linux + 226)
-#define __NR_getxattr			(__NR_Linux + 227)
-#define __NR_lgetxattr			(__NR_Linux + 228)
-#define __NR_fgetxattr			(__NR_Linux + 229)
-#define __NR_listxattr			(__NR_Linux + 230)
-#define __NR_llistxattr			(__NR_Linux + 231)
-#define __NR_flistxattr			(__NR_Linux + 232)
-#define __NR_removexattr		(__NR_Linux + 233)
-#define __NR_lremovexattr		(__NR_Linux + 234)
-#define __NR_fremovexattr		(__NR_Linux + 235)
-#define __NR_tkill			(__NR_Linux + 236)
-#define __NR_sendfile64			(__NR_Linux + 237)
-#define __NR_futex			(__NR_Linux + 238)
-#define __NR_sched_setaffinity		(__NR_Linux + 239)
-#define __NR_sched_getaffinity		(__NR_Linux + 240)
-#define __NR_io_setup			(__NR_Linux + 241)
-#define __NR_io_destroy			(__NR_Linux + 242)
-#define __NR_io_getevents		(__NR_Linux + 243)
-#define __NR_io_submit			(__NR_Linux + 244)
-#define __NR_io_cancel			(__NR_Linux + 245)
-#define __NR_exit_group			(__NR_Linux + 246)
-#define __NR_lookup_dcookie		(__NR_Linux + 247)
-#define __NR_epoll_create		(__NR_Linux + 248)
-#define __NR_epoll_ctl			(__NR_Linux + 249)
-#define __NR_epoll_wait			(__NR_Linux + 250)
-#define __NR_remap_file_pages		(__NR_Linux + 251)
-#define __NR_set_tid_address		(__NR_Linux + 252)
-#define __NR_restart_syscall		(__NR_Linux + 253)
-#define __NR_fadvise64			(__NR_Linux + 254)
-#define __NR_statfs64			(__NR_Linux + 255)
-#define __NR_fstatfs64			(__NR_Linux + 256)
-#define __NR_timer_create		(__NR_Linux + 257)
-#define __NR_timer_settime		(__NR_Linux + 258)
-#define __NR_timer_gettime		(__NR_Linux + 259)
-#define __NR_timer_getoverrun		(__NR_Linux + 260)
-#define __NR_timer_delete		(__NR_Linux + 261)
-#define __NR_clock_settime		(__NR_Linux + 262)
-#define __NR_clock_gettime		(__NR_Linux + 263)
-#define __NR_clock_getres		(__NR_Linux + 264)
-#define __NR_clock_nanosleep		(__NR_Linux + 265)
-#define __NR_tgkill			(__NR_Linux + 266)
-#define __NR_utimes			(__NR_Linux + 267)
-#define __NR_mbind			(__NR_Linux + 268)
-#define __NR_get_mempolicy		(__NR_Linux + 269)
-#define __NR_set_mempolicy		(__NR_Linux + 270)
-#define __NR_mq_open			(__NR_Linux + 271)
-#define __NR_mq_unlink			(__NR_Linux + 272)
-#define __NR_mq_timedsend		(__NR_Linux + 273)
-#define __NR_mq_timedreceive		(__NR_Linux + 274)
-#define __NR_mq_notify			(__NR_Linux + 275)
-#define __NR_mq_getsetattr		(__NR_Linux + 276)
-#define __NR_vserver			(__NR_Linux + 277)
-#define __NR_waitid			(__NR_Linux + 278)
-/* #define __NR_sys_setaltroot		(__NR_Linux + 279) */
-#define __NR_add_key			(__NR_Linux + 280)
-#define __NR_request_key		(__NR_Linux + 281)
-#define __NR_keyctl			(__NR_Linux + 282)
-#define __NR_set_thread_area		(__NR_Linux + 283)
-#define __NR_inotify_init		(__NR_Linux + 284)
-#define __NR_inotify_add_watch		(__NR_Linux + 285)
-#define __NR_inotify_rm_watch		(__NR_Linux + 286)
-#define __NR_migrate_pages		(__NR_Linux + 287)
-#define __NR_openat			(__NR_Linux + 288)
-#define __NR_mkdirat			(__NR_Linux + 289)
-#define __NR_mknodat			(__NR_Linux + 290)
-#define __NR_fchownat			(__NR_Linux + 291)
-#define __NR_futimesat			(__NR_Linux + 292)
-#define __NR_fstatat			(__NR_Linux + 293)
-#define __NR_unlinkat			(__NR_Linux + 294)
-#define __NR_renameat			(__NR_Linux + 295)
-#define __NR_linkat			(__NR_Linux + 296)
-#define __NR_symlinkat			(__NR_Linux + 297)
-#define __NR_readlinkat			(__NR_Linux + 298)
-#define __NR_fchmodat			(__NR_Linux + 299)
-#define __NR_faccessat			(__NR_Linux + 300)
-#define __NR_pselect6			(__NR_Linux + 301)
-#define __NR_ppoll			(__NR_Linux + 302)
-#define __NR_unshare			(__NR_Linux + 303)
-#define __NR_splice			(__NR_Linux + 304)
-#define __NR_sync_file_range		(__NR_Linux + 305)
-#define __NR_tee			(__NR_Linux + 306)
-#define __NR_vmsplice			(__NR_Linux + 307)
-#define __NR_move_pages			(__NR_Linux + 308)
-#define __NR_set_robust_list		(__NR_Linux + 272)
-#define __NR_get_robust_list		(__NR_Linux + 273)
-#define __NR_kexec_load			(__NR_Linux + 274)
-#define __NR_getcpu			(__NR_Linux + 275)
-#define __NR_epoll_pwait		(__NR_Linux + 276)
-#define __NR_ioprio_set			(__NR_Linux + 277)
-#define __NR_ioprio_get			(__NR_Linux + 278)
-#define __NR_utimensat			(__NR_Linux + 279)
-#define __NR_signalfd			(__NR_Linux + 280)
-#define __NR_timerfd			(__NR_Linux + 281)
-#define __NR_eventfd			(__NR_Linux + 282)
-#define __NR_fallocate			(__NR_Linux + 283)
-#define __NR_timerfd_create		(__NR_Linux + 284)
-#define __NR_timerfd_gettime		(__NR_Linux + 285)
-#define __NR_timerfd_settime		(__NR_Linux + 286)
+#define __NR_Linux			5000
+#define __NR_read			(__NR_Linux +   0)
+#define __NR_write			(__NR_Linux +   1)
+#define __NR_open			(__NR_Linux +   2)
+#define __NR_close			(__NR_Linux +   3)
+#define __NR_stat			(__NR_Linux +   4)
+#define __NR_fstat			(__NR_Linux +   5)
+#define __NR_lstat			(__NR_Linux +   6)
+#define __NR_poll			(__NR_Linux +   7)
+#define __NR_lseek			(__NR_Linux +   8)
+#define __NR_mmap			(__NR_Linux +   9)
+#define __NR_mprotect			(__NR_Linux +  10)
+#define __NR_munmap			(__NR_Linux +  11)
+#define __NR_brk			(__NR_Linux +  12)
+#define __NR_rt_sigaction		(__NR_Linux +  13)
+#define __NR_rt_sigprocmask		(__NR_Linux +  14)
+#define __NR_ioctl			(__NR_Linux +  15)
+#define __NR_pread64			(__NR_Linux +  16)
+#define __NR_pwrite64			(__NR_Linux +  17)
+#define __NR_readv			(__NR_Linux +  18)
+#define __NR_writev			(__NR_Linux +  19)
+#define __NR_access			(__NR_Linux +  20)
+#define __NR_pipe			(__NR_Linux +  21)
+#define __NR__newselect			(__NR_Linux +  22)
+#define __NR_sched_yield		(__NR_Linux +  23)
+#define __NR_mremap			(__NR_Linux +  24)
+#define __NR_msync			(__NR_Linux +  25)
+#define __NR_mincore			(__NR_Linux +  26)
+#define __NR_madvise			(__NR_Linux +  27)
+#define __NR_shmget			(__NR_Linux +  28)
+#define __NR_shmat			(__NR_Linux +  29)
+#define __NR_shmctl			(__NR_Linux +  30)
+#define __NR_dup			(__NR_Linux +  31)
+#define __NR_dup2			(__NR_Linux +  32)
+#define __NR_pause			(__NR_Linux +  33)
+#define __NR_nanosleep			(__NR_Linux +  34)
+#define __NR_getitimer			(__NR_Linux +  35)
+#define __NR_setitimer			(__NR_Linux +  36)
+#define __NR_alarm			(__NR_Linux +  37)
+#define __NR_getpid			(__NR_Linux +  38)
+#define __NR_sendfile			(__NR_Linux +  39)
+#define __NR_socket			(__NR_Linux +  40)
+#define __NR_connect			(__NR_Linux +  41)
+#define __NR_accept			(__NR_Linux +  42)
+#define __NR_sendto			(__NR_Linux +  43)
+#define __NR_recvfrom			(__NR_Linux +  44)
+#define __NR_sendmsg			(__NR_Linux +  45)
+#define __NR_recvmsg			(__NR_Linux +  46)
+#define __NR_shutdown			(__NR_Linux +  47)
+#define __NR_bind			(__NR_Linux +  48)
+#define __NR_listen			(__NR_Linux +  49)
+#define __NR_getsockname		(__NR_Linux +  50)
+#define __NR_getpeername		(__NR_Linux +  51)
+#define __NR_socketpair			(__NR_Linux +  52)
+#define __NR_setsockopt			(__NR_Linux +  53)
+#define __NR_getsockopt			(__NR_Linux +  54)
+#define __NR_clone			(__NR_Linux +  55)
+#define __NR_fork			(__NR_Linux +  56)
+#define __NR_execve			(__NR_Linux +  57)
+#define __NR_exit			(__NR_Linux +  58)
+#define __NR_wait4			(__NR_Linux +  59)
+#define __NR_kill			(__NR_Linux +  60)
+#define __NR_uname			(__NR_Linux +  61)
+#define __NR_semget			(__NR_Linux +  62)
+#define __NR_semop			(__NR_Linux +  63)
+#define __NR_semctl			(__NR_Linux +  64)
+#define __NR_shmdt			(__NR_Linux +  65)
+#define __NR_msgget			(__NR_Linux +  66)
+#define __NR_msgsnd			(__NR_Linux +  67)
+#define __NR_msgrcv			(__NR_Linux +  68)
+#define __NR_msgctl			(__NR_Linux +  69)
+#define __NR_fcntl			(__NR_Linux +  70)
+#define __NR_flock			(__NR_Linux +  71)
+#define __NR_fsync			(__NR_Linux +  72)
+#define __NR_fdatasync			(__NR_Linux +  73)
+#define __NR_truncate			(__NR_Linux +  74)
+#define __NR_ftruncate			(__NR_Linux +  75)
+#define __NR_getdents			(__NR_Linux +  76)
+#define __NR_getcwd			(__NR_Linux +  77)
+#define __NR_chdir			(__NR_Linux +  78)
+#define __NR_fchdir			(__NR_Linux +  79)
+#define __NR_rename			(__NR_Linux +  80)
+#define __NR_mkdir			(__NR_Linux +  81)
+#define __NR_rmdir			(__NR_Linux +  82)
+#define __NR_creat			(__NR_Linux +  83)
+#define __NR_link			(__NR_Linux +  84)
+#define __NR_unlink			(__NR_Linux +  85)
+#define __NR_symlink			(__NR_Linux +  86)
+#define __NR_readlink			(__NR_Linux +  87)
+#define __NR_chmod			(__NR_Linux +  88)
+#define __NR_fchmod			(__NR_Linux +  89)
+#define __NR_chown			(__NR_Linux +  90)
+#define __NR_fchown			(__NR_Linux +  91)
+#define __NR_lchown			(__NR_Linux +  92)
+#define __NR_umask			(__NR_Linux +  93)
+#define __NR_gettimeofday		(__NR_Linux +  94)
+#define __NR_getrlimit			(__NR_Linux +  95)
+#define __NR_getrusage			(__NR_Linux +  96)
+#define __NR_sysinfo			(__NR_Linux +  97)
+#define __NR_times			(__NR_Linux +  98)
+#define __NR_ptrace			(__NR_Linux +  99)
+#define __NR_getuid			(__NR_Linux + 100)
+#define __NR_syslog			(__NR_Linux + 101)
+#define __NR_getgid			(__NR_Linux + 102)
+#define __NR_setuid			(__NR_Linux + 103)
+#define __NR_setgid			(__NR_Linux + 104)
+#define __NR_geteuid			(__NR_Linux + 105)
+#define __NR_getegid			(__NR_Linux + 106)
+#define __NR_setpgid			(__NR_Linux + 107)
+#define __NR_getppid			(__NR_Linux + 108)
+#define __NR_getpgrp			(__NR_Linux + 109)
+#define __NR_setsid			(__NR_Linux + 110)
+#define __NR_setreuid			(__NR_Linux + 111)
+#define __NR_setregid			(__NR_Linux + 112)
+#define __NR_getgroups			(__NR_Linux + 113)
+#define __NR_setgroups			(__NR_Linux + 114)
+#define __NR_setresuid			(__NR_Linux + 115)
+#define __NR_getresuid			(__NR_Linux + 116)
+#define __NR_setresgid			(__NR_Linux + 117)
+#define __NR_getresgid			(__NR_Linux + 118)
+#define __NR_getpgid			(__NR_Linux + 119)
+#define __NR_setfsuid			(__NR_Linux + 120)
+#define __NR_setfsgid			(__NR_Linux + 121)
+#define __NR_getsid			(__NR_Linux + 122)
+#define __NR_capget			(__NR_Linux + 123)
+#define __NR_capset			(__NR_Linux + 124)
+#define __NR_rt_sigpending		(__NR_Linux + 125)
+#define __NR_rt_sigtimedwait		(__NR_Linux + 126)
+#define __NR_rt_sigqueueinfo		(__NR_Linux + 127)
+#define __NR_rt_sigsuspend		(__NR_Linux + 128)
+#define __NR_sigaltstack		(__NR_Linux + 129)
+#define __NR_utime			(__NR_Linux + 130)
+#define __NR_mknod			(__NR_Linux + 131)
+#define __NR_personality		(__NR_Linux + 132)
+#define __NR_ustat			(__NR_Linux + 133)
+#define __NR_statfs			(__NR_Linux + 134)
+#define __NR_fstatfs			(__NR_Linux + 135)
+#define __NR_sysfs			(__NR_Linux + 136)
+#define __NR_getpriority		(__NR_Linux + 137)
+#define __NR_setpriority		(__NR_Linux + 138)
+#define __NR_sched_setparam		(__NR_Linux + 139)
+#define __NR_sched_getparam		(__NR_Linux + 140)
+#define __NR_sched_setscheduler		(__NR_Linux + 141)
+#define __NR_sched_getscheduler		(__NR_Linux + 142)
+#define __NR_sched_get_priority_max	(__NR_Linux + 143)
+#define __NR_sched_get_priority_min	(__NR_Linux + 144)
+#define __NR_sched_rr_get_interval	(__NR_Linux + 145)
+#define __NR_mlock			(__NR_Linux + 146)
+#define __NR_munlock			(__NR_Linux + 147)
+#define __NR_mlockall			(__NR_Linux + 148)
+#define __NR_munlockall			(__NR_Linux + 149)
+#define __NR_vhangup			(__NR_Linux + 150)
+#define __NR_pivot_root			(__NR_Linux + 151)
+#define __NR__sysctl			(__NR_Linux + 152)
+#define __NR_prctl			(__NR_Linux + 153)
+#define __NR_adjtimex			(__NR_Linux + 154)
+#define __NR_setrlimit			(__NR_Linux + 155)
+#define __NR_chroot			(__NR_Linux + 156)
+#define __NR_sync			(__NR_Linux + 157)
+#define __NR_acct			(__NR_Linux + 158)
+#define __NR_settimeofday		(__NR_Linux + 159)
+#define __NR_mount			(__NR_Linux + 160)
+#define __NR_umount2			(__NR_Linux + 161)
+#define __NR_swapon			(__NR_Linux + 162)
+#define __NR_swapoff			(__NR_Linux + 163)
+#define __NR_reboot			(__NR_Linux + 164)
+#define __NR_sethostname		(__NR_Linux + 165)
+#define __NR_setdomainname		(__NR_Linux + 166)
+#define __NR_create_module		(__NR_Linux + 167)
+#define __NR_init_module		(__NR_Linux + 168)
+#define __NR_delete_module		(__NR_Linux + 169)
+#define __NR_get_kernel_syms		(__NR_Linux + 170)
+#define __NR_query_module		(__NR_Linux + 171)
+#define __NR_quotactl			(__NR_Linux + 172)
+#define __NR_nfsservctl			(__NR_Linux + 173)
+#define __NR_getpmsg			(__NR_Linux + 174)
+#define __NR_putpmsg			(__NR_Linux + 175)
+#define __NR_afs_syscall		(__NR_Linux + 176)
+#define __NR_reserved177		(__NR_Linux + 177)
+#define __NR_gettid			(__NR_Linux + 178)
+#define __NR_readahead			(__NR_Linux + 179)
+#define __NR_setxattr			(__NR_Linux + 180)
+#define __NR_lsetxattr			(__NR_Linux + 181)
+#define __NR_fsetxattr			(__NR_Linux + 182)
+#define __NR_getxattr			(__NR_Linux + 183)
+#define __NR_lgetxattr			(__NR_Linux + 184)
+#define __NR_fgetxattr			(__NR_Linux + 185)
+#define __NR_listxattr			(__NR_Linux + 186)
+#define __NR_llistxattr			(__NR_Linux + 187)
+#define __NR_flistxattr			(__NR_Linux + 188)
+#define __NR_removexattr		(__NR_Linux + 189)
+#define __NR_lremovexattr		(__NR_Linux + 190)
+#define __NR_fremovexattr		(__NR_Linux + 191)
+#define __NR_tkill			(__NR_Linux + 192)
+#define __NR_reserved193		(__NR_Linux + 193)
+#define __NR_futex			(__NR_Linux + 194)
+#define __NR_sched_setaffinity		(__NR_Linux + 195)
+#define __NR_sched_getaffinity		(__NR_Linux + 196)
+#define __NR_cacheflush			(__NR_Linux + 197)
+#define __NR_cachectl			(__NR_Linux + 198)
+#define __NR_sysmips			(__NR_Linux + 199)
+#define __NR_io_setup			(__NR_Linux + 200)
+#define __NR_io_destroy			(__NR_Linux + 201)
+#define __NR_io_getevents		(__NR_Linux + 202)
+#define __NR_io_submit			(__NR_Linux + 203)
+#define __NR_io_cancel			(__NR_Linux + 204)
+#define __NR_exit_group			(__NR_Linux + 205)
+#define __NR_lookup_dcookie		(__NR_Linux + 206)
+#define __NR_epoll_create		(__NR_Linux + 207)
+#define __NR_epoll_ctl			(__NR_Linux + 208)
+#define __NR_epoll_wait			(__NR_Linux + 209)
+#define __NR_remap_file_pages		(__NR_Linux + 210)
+#define __NR_rt_sigreturn		(__NR_Linux + 211)
+#define __NR_set_tid_address		(__NR_Linux + 212)
+#define __NR_restart_syscall		(__NR_Linux + 213)
+#define __NR_semtimedop			(__NR_Linux + 214)
+#define __NR_fadvise64			(__NR_Linux + 215)
+#define __NR_timer_create		(__NR_Linux + 216)
+#define __NR_timer_settime		(__NR_Linux + 217)
+#define __NR_timer_gettime		(__NR_Linux + 218)
+#define __NR_timer_getoverrun		(__NR_Linux + 219)
+#define __NR_timer_delete		(__NR_Linux + 220)
+#define __NR_clock_settime		(__NR_Linux + 221)
+#define __NR_clock_gettime		(__NR_Linux + 222)
+#define __NR_clock_getres		(__NR_Linux + 223)
+#define __NR_clock_nanosleep		(__NR_Linux + 224)
+#define __NR_tgkill			(__NR_Linux + 225)
+#define __NR_utimes			(__NR_Linux + 226)
+#define __NR_mbind			(__NR_Linux + 227)
+#define __NR_get_mempolicy		(__NR_Linux + 228)
+#define __NR_set_mempolicy		(__NR_Linux + 229)
+#define __NR_mq_open			(__NR_Linux + 230)
+#define __NR_mq_unlink			(__NR_Linux + 231)
+#define __NR_mq_timedsend		(__NR_Linux + 232)
+#define __NR_mq_timedreceive		(__NR_Linux + 233)
+#define __NR_mq_notify			(__NR_Linux + 234)
+#define __NR_mq_getsetattr		(__NR_Linux + 235)
+#define __NR_vserver			(__NR_Linux + 236)
+#define __NR_waitid			(__NR_Linux + 237)
+/* #define __NR_sys_setaltroot		(__NR_Linux + 238) */
+#define __NR_add_key			(__NR_Linux + 239)
+#define __NR_request_key		(__NR_Linux + 240)
+#define __NR_keyctl			(__NR_Linux + 241)
+#define __NR_set_thread_area		(__NR_Linux + 242)
+#define __NR_inotify_init		(__NR_Linux + 243)
+#define __NR_inotify_add_watch		(__NR_Linux + 244)
+#define __NR_inotify_rm_watch		(__NR_Linux + 245)
+#define __NR_migrate_pages		(__NR_Linux + 246)
+#define __NR_openat			(__NR_Linux + 247)
+#define __NR_mkdirat			(__NR_Linux + 248)
+#define __NR_mknodat			(__NR_Linux + 249)
+#define __NR_fchownat			(__NR_Linux + 250)
+#define __NR_futimesat			(__NR_Linux + 251)
+#define __NR_newfstatat			(__NR_Linux + 252)
+#define __NR_unlinkat			(__NR_Linux + 253)
+#define __NR_renameat			(__NR_Linux + 254)
+#define __NR_linkat			(__NR_Linux + 255)
+#define __NR_symlinkat			(__NR_Linux + 256)
+#define __NR_readlinkat			(__NR_Linux + 257)
+#define __NR_fchmodat			(__NR_Linux + 258)
+#define __NR_faccessat			(__NR_Linux + 259)
+#define __NR_pselect6			(__NR_Linux + 260)
+#define __NR_ppoll			(__NR_Linux + 261)
+#define __NR_unshare			(__NR_Linux + 262)
+#define __NR_splice			(__NR_Linux + 263)
+#define __NR_sync_file_range		(__NR_Linux + 264)
+#define __NR_tee			(__NR_Linux + 265)
+#define __NR_vmsplice			(__NR_Linux + 266)
+#define __NR_move_pages			(__NR_Linux + 267)
+#define __NR_set_robust_list		(__NR_Linux + 268)
+#define __NR_get_robust_list		(__NR_Linux + 269)
+#define __NR_kexec_load			(__NR_Linux + 270)
+#define __NR_getcpu			(__NR_Linux + 271)
+#define __NR_epoll_pwait		(__NR_Linux + 272)
+#define __NR_ioprio_set			(__NR_Linux + 273)
+#define __NR_ioprio_get			(__NR_Linux + 274)
+#define __NR_utimensat			(__NR_Linux + 275)
+#define __NR_signalfd			(__NR_Linux + 276)
+#define __NR_timerfd			(__NR_Linux + 277)
+#define __NR_eventfd			(__NR_Linux + 278)
+#define __NR_fallocate			(__NR_Linux + 279)
+#define __NR_timerfd_create		(__NR_Linux + 280)
+#define __NR_timerfd_gettime		(__NR_Linux + 281)
+#define __NR_timerfd_settime		(__NR_Linux + 282)
+#define __NR_signalfd4			(__NR_Linux + 283)
+#define __NR_eventfd2			(__NR_Linux + 284)
+#define __NR_epoll_create1		(__NR_Linux + 285)
+#define __NR_dup3			(__NR_Linux + 286)
+#define __NR_pipe2			(__NR_Linux + 287)
+#define __NR_inotify_init1		(__NR_Linux + 288)
+#define __NR_preadv			(__NR_Linux + 289)
+#define __NR_pwritev			(__NR_Linux + 290)
+#define __NR_rt_tgsigqueueinfo		(__NR_Linux + 291)
+#define __NR_perf_event_open		(__NR_Linux + 292)
+#define __NR_accept4			(__NR_Linux + 293)
+#define __NR_recvmmsg			(__NR_Linux + 294)
+#define __NR_fanotify_init		(__NR_Linux + 295)
+#define __NR_fanotify_mark		(__NR_Linux + 296)
+#define __NR_prlimit64			(__NR_Linux + 297)
 
 #define syscall_weak(name,wsym,sym) \
 .text; \
--- dietlibc-0.32/mips64/start.S.vanilla	2011-02-03 18:41:45.251259244 +0000
+++ dietlibc-0.32/mips64/start.S	2011-02-03 18:43:32.227804168 +0000
@@ -26,19 +26,19 @@
 	la      $gp, _gp
 #endif
 	move	$ra, $zero	/* prime stack frame */
-	lw	$a0, 0($sp)	/* load argc */
-	addu	$a1, $sp, 4	/* load argv.  huh?  should be 4, right? */
+	ld	$a0, 0($sp)	/* load argc */
+	daddu	$a1, $sp, 8	/* load argv.  huh?  should be 8, right? */
 
-	and	$sp, 0xfffffff8	/* align stack to 8 bytes */
-	subu	$sp, 24		/* make room for 4 arguments, RA + pad */
+	and	$sp, 0xfffffffffffffff8 /* align stack to 8 bytes */
+	dsubu	$sp, 48		/* make room for 4 arguments, RA + pad */
 	/* I don't understand the MIPS calling convention.  Why do you
 	   need to make room on the stack for arguments you pass in
 	   registers?  Anyway, if we don't do this, the arguments are
 	   garbled. */
-	sw	$ra, 20($sp)	/* close stack frame */
+	sd	$ra, 40($sp)	/* close stack frame */
 
-	addu	$a2, $a0, 1	/* load envp */
-	sll	$a2, $a2, 2
+	daddu	$a2, $a0, 1	/* load envp */
+	sll	$a2, $a2, 3
 #ifdef WANT_DYNAMIC
 /* FIXME: dl_init parameter ??? */
 	la	$25, _dyn_start
@@ -45,8 +45,8 @@
 #else
 	la	$25, CALL_IN_STARTCODE
 #endif
-	add	$a2, $a2, $a1
-	sw	$a2, environ
+	dadd	$a2, $a2, $a1
+	sd	$a2, environ
 	jalr	$25
 	la	$25, exit
 	move	$4,$2
--- dietlibc-0.32/mips64/unified.S.vanilla	2011-02-03 20:31:13.882817306 +0000
+++ dietlibc-0.32/mips64/unified.S	2011-02-03 20:35:39.508478132 +0000
@@ -27,22 +27,22 @@
 error_unified_syscall:
 .Lerror:
 #ifdef WANT_THREAD_SAFE
-	addiu	$sp, $sp, -24
+	daddiu	$sp, $sp, -24
 
-	sw	$31, 0($sp)
-	sw	$2,  4($sp)
+	sd	$31, 0($sp)
+	sd	$2,  8($sp)
 
 	la	$25, __errno_location
 	jalr	$25
 
-	lw	$8,  4($sp)
-	lw	$31, 0($sp)
-	sw	$8,  0($2)
+	ld	$8,  8($sp)
+	ld	$31, 0($sp)
+	sw	$8,  0($2)
 	li	$2,  -1
-	addiu	$sp, $sp, 24
+	daddiu	$sp, $sp, 24
 	jr	$31
 #else
-	sw	$2,  errno
+	sw	$2,  errno
 	li	$2,  -1
 	jr	$31
 #endif
--- dietlibc-0.32/include/setjmp.h.vanilla	2011-02-04 15:27:10.051710293 +0000
+++ dietlibc-0.32/include/setjmp.h	2011-02-04 15:28:03.546792538 +0000
@@ -79,6 +79,18 @@
 
 #ifdef __mips__
 #ifndef __ASSEMBLER__
+#ifdef __mips64
+typedef struct
+  {
+    void * __pc;        /* Program counter.  */
+    void * __sp;        /* Stack pointer.  */
+    long __regs[8];      /* Callee-saved registers s0 through s7.  */
+    void * __fp;        /* The frame pointer.  */
+    void * __gp;        /* The global pointer.  */
+    long __fpc_csr;      /* Floating point status register.  */
+    double __fpregs[6]; /* Callee-saved floating point registers.  */
+  } __jmp_buf[1];
+#else
 typedef struct
   {
     void * __pc;	/* Program counter.  */
@@ -91,6 +103,7 @@
   } __jmp_buf[1];
 #endif
 #endif
+#endif
 
 #ifdef __sparc__
 #ifdef __arch64__
--- dietlibc-0.32/mips64/__longjmp.S	2003-04-07 18:24:53.000000000 +0000
+++ dietlibc-0.32/mips64/__longjmp.S	2011-02-04 15:21:26.436471554 +0000
@@ -4,29 +4,29 @@
 .ent	__longjmp
 __longjmp:
 	/* load coprocessor status */
-	lw	 $2, 48($4)
+	ld	 $2, 96($4)
 	/* restore callee save floating point registers (double) */
-	l.d	$f20, 56($4)	/* fs0 */
-	l.d	$f22, 64($4)	/* fs1 */
-	l.d	$f24, 72($4)	/* fs2 */
-	l.d	$f26, 80($4)	/* fs3 */
-	l.d	$f28, 88($4)	/* fs4 */
-	l.d	$f30, 96($4)	/* fs6 */
+	l.d	$f20,104($4)	/* fs0 */
+	l.d	$f22,112($4)	/* fs1 */
+	l.d	$f24,120($4)	/* fs2 */
+	l.d	$f26,128($4)	/* fs3 */
+	l.d	$f28,136($4)	/* fs4 */
+	l.d	$f30,144($4)	/* fs6 */
 	/* restore coprocessor status register */
 	ctc1	 $2, $31
 	/* restore callee save integer register */
-	lw	$25,  0($4)	/* ra */
-	lw	$29,  4($4)	/* sp */
-	lw	$16,  8($4)	/* s0 */
-	lw	$17, 12($4)	/* s1 */
-	lw	$18, 16($4)	/* s2 */
-	lw	$19, 20($4)	/* s3 */
-	lw	$20, 24($4)	/* s4 */
-	lw	$21, 28($4)	/* s5 */
-	lw	$22, 32($4)	/* s6 */
-	lw	$23, 36($4)	/* s7 */
-	lw	$30, 40($4)	/* fp/s8 */
-	lw	$gp, 44($4)	/* gp */
+	ld	$25,  0($4)	/* ra */
+	ld	$29,  8($4)	/* sp */
+	ld	$16, 16($4)	/* s0 */
+	ld	$17, 24($4)	/* s1 */
+	ld	$18, 32($4)	/* s2 */
+	ld	$19, 40($4)	/* s3 */
+	ld	$20, 48($4)	/* s4 */
+	ld	$21, 56($4)	/* s5 */
+	ld	$22, 64($4)	/* s6 */
+	ld	$23, 72($4)	/* s7 */
+	ld	$30, 80($4)	/* fp/s8 */
+	ld	$gp, 88($4)	/* gp */
 	/* never return 0 */
 	move	 $2, $5
 	bne	 $5, $0,1f
--- dietlibc-0.32/mips64/setjmp.S	2002-09-12 10:33:48.000000000 +0000
+++ dietlibc-0.32/mips64/setjmp.S	2011-02-04 15:18:00.538804258 +0000
@@ -12,28 +12,28 @@
 	/* where to jump later */
 	la	$25, __sigjmp_save
 	/* callee save floating point save registers (double) */
-	s.d	$f20, 56($4)	/* fs0 */
-	s.d	$f22, 64($4)	/* fs1 */
-	s.d	$f24, 72($4)	/* fs2 */
-	s.d	$f26, 80($4)	/* fs3 */
-	s.d	$f28, 88($4)	/* fs4 */
-	s.d	$f30, 96($4)	/* fs6 */
+	s.d	$f20,104($4)	/* fs0 */
+	s.d	$f22,112($4)	/* fs1 */
+	s.d	$f24,120($4)	/* fs2 */
+	s.d	$f26,128($4)	/* fs3 */
+	s.d	$f28,136($4)	/* fs4 */
+	s.d	$f30,144($4)	/* fs6 */
 	/* save coprocessor status register */
 	cfc1	 $2, $31
 	/* callee save register */
-	sw	$gp, 44($4)
-	sw	 $2, 48($4)
-	sw	$31,  0($4)	/* ra */
-	sw	$29,  4($4)	/* sp */
-	sw	$16,  8($4)	/* s0 */
-	sw	$17, 12($4)	/* s1 */
-	sw	$18, 16($4)	/* s2 */
-	sw	$19, 20($4)	/* s3 */
-	sw	$20, 24($4)	/* s4 */
-	sw	$21, 28($4)	/* s5 */
-	sw	$22, 32($4)	/* s6 */
-	sw	$23, 36($4)	/* s7 */
-	sw	$30, 40($4)	/* fp */
+	sd	$gp, 88($4)
+	sd	 $2, 96($4)
+	sd	$31,  0($4)	/* ra */
+	sd	$29,  8($4)	/* sp */
+	sd	$16, 16($4)	/* s0 */
+	sd	$17, 24($4)	/* s1 */
+	sd	$18, 32($4)	/* s2 */
+	sd	$19, 40($4)	/* s3 */
+	sd	$20, 48($4)	/* s4 */
+	sd	$21, 56($4)	/* s5 */
+	sd	$22, 64($4)	/* s6 */
+	sd	$23, 72($4)	/* s7 */
+	sd	$30, 80($4)	/* fp */
 	j	$25
 .end	__sigsetjmp
 .weak	setjmp
--- dietlibc-0.32/mips64/clone.S	2002-03-20 12:27:03.000000000 +0000
+++ dietlibc-0.32/mips64/clone.S	2011-02-04 15:10:18.838836027 +0000
@@ -10,16 +10,16 @@
 	.set noreorder
 	.cpload $25
 	.set reorder
-	subu	$29,$29,32
+	dsubu	$29,$29,64
 	.cprestore 16
 
 	li	$2, EINVAL
 	beqz	$4, .Lerror
 	beqz	$5, .Lerror
 
-	subu	$5, $5, 32	/* resterve some space */
-	sw	$4, 0($5)	/* save function pointer */
-	sw	$7, 4($5)	/* save arg pointer */
+	dsubu	$5, $5, 64	/* resterve some space */
+	sd	$4, 0($5)	/* save function pointer */
+	sd	$7, 8($5)	/* save arg pointer */
 
 	move	$4, $6
 	li	$2, __NR_clone
@@ -28,7 +28,7 @@
 	bnez	$7, .Lerror
 	beqz	$2, .Lstart
 
-	addu	$29,$29,32	/* free stack */
+	daddu	$29,$29,64	/* free stack */
 	jr	$31
 
 .Lerror:
@@ -36,9 +36,9 @@
 	jr	$25
 
 .Lstart:
-	lw	$28,16($29)
-	lw	$25, 0($29)
-	lw	$4,  4($29)
+	ld	$28, 24($29)
+	ld	$25, 0($29)
+	ld	$4,  8($29)
 	jalr	$25
 	move	$4, $2
 	jal	_exit

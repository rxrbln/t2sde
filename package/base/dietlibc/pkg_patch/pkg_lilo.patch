# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/dietlibc/pkg_patch/pkg_lilo.patch
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

--- ./partition.h.orig	2002-08-14 13:55:42.000000000 +0200
+++ ./partition.h	2002-08-14 13:58:10.000000000 +0200
@@ -16,10 +16,10 @@
     struct _change_rule *next;
 } CHANGE_RULE;
 
-#if 1
-
 #define LLSECTORSIZE ((long long)SECTOR_SIZE)
 
+#if 0
+
        loff_t llseek(unsigned int fd, loff_t offs, unsigned int whence);
 
 #endif
--- ./partition.c.orig	2002-08-14 13:56:50.000000000 +0200
+++ ./partition.c	2002-08-14 13:59:32.000000000 +0200
@@ -9,6 +9,7 @@
 
 */
 
+#include "asm/posix_types.h"
 
 #include <stdlib.h>
 #include <unistd.h>
@@ -36,6 +37,7 @@
 
 
        
+#if 0
        _syscall5(int,  _llseek,  uint,  fd, ulong, hi, ulong, lo,
        loff_t *, res, uint, wh);
 
@@ -48,7 +50,7 @@
        	return _llseek(fd, offs>>32, offs, &res, whence) < 0  ?
        			 (loff_t)(-1) : res;
        }
-
+#endif
 
 
 
@@ -153,8 +155,8 @@
     }
     i=5;
     while (i<=pe && base) {
-        if (llseek(fd, LLSECTORSIZE*(base+second) + PART_TABLE_OFFSET, SEEK_SET) < 0)
-            die("secondary llseek failed");
+        if (lseek(fd, LLSECTORSIZE*(base+second) + PART_TABLE_OFFSET, SEEK_SET) < 0)
+            die("secondary lseek failed");
 	if (read(fd, part_table, sizeof(part_table)) != sizeof(part_table)) die("secondary read pt failed");
 	if ( read(fd, &boot_sig, sizeof(boot_sig)) != sizeof(boot_sig)  ||
 	    boot_sig != BOOT_SIGNATURE ) die("read second boot signature failed");
--- ./probe.c.orig	2002-08-14 13:59:52.000000000 +0200
+++ ./probe.c	2002-08-14 14:00:02.000000000 +0200
@@ -551,8 +551,8 @@
     }
     i=5;
     while (verbose>0 && base) {
-        if (llseek(fd, LLSECTORSIZE*(base+second) + PART_TABLE_OFFSET, SEEK_SET) < 0)
-            die("secondary llseek failed");
+        if (lseek(fd, LLSECTORSIZE*(base+second) + PART_TABLE_OFFSET, SEEK_SET) < 0)
+            die("secondary lseek failed");
 	if (read(fd, pt, sizeof(pt)) != sizeof(pt)) die("secondary read pt failed");
 	if ( read(fd, &boot_sig, sizeof(boot_sig)) != sizeof(boot_sig)  ||
 	    boot_sig != BOOT_SIGNATURE ) die("read second boot signature failed");
--- ./Makefile.orig	Sat Jan 11 13:58:28 2003
+++ ./Makefile	Sat Jan 11 13:58:34 2003
@@ -57,7 +57,7 @@
 #   XL_SECS=n	  Support for extra large (non-standard) floppies.
 
 CONFIG=-DBDATA -DBUILTIN -DDSECS=3 -DIGNORECASE -DLBA32 -DLVM -DEVMS -DM386 \
-  -DONE_SHOT -DPASS160 -DREISERFS -DREWRITE_TABLE -DSOLO_CHAIN -DVARSETUP \
+  -DONE_SHOT -DPASS160 -DREWRITE_TABLE -DSOLO_CHAIN -DVARSETUP \
   -DVERSION -DUNIFY
 
 # set the compiler optimization level

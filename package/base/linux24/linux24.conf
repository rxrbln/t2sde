# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/linux24/linux24.conf
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

# include the function to patch and configure the kernel
. $base/package/base/linux24/lx_config.sh

main_lx() {
	lx_config

	echo "Cleanup kernel ..."
	eval $MAKE -j 1 dep clean > /dev/null

	echo "Building the kernel ..."
	case "$lx_cpu" in
	    i386)
		eval $MAKE bzImage
		cp -v arch/i386/boot/bzImage $root/boot/vmlinuz_$ver-rock
		cp -v arch/i386/boot/bzImage $root/boot/vmlinuz ;;
	    alpha)
		eval $MAKE vmlinux
		gzip < vmlinux > $root/boot/vmlinux_$ver-rock.gz
		cp $root/boot/vmlinux_$ver-rock.gz root/boot/vmlinux.gz ;;
	    mips)
		eval $MAKE vmlinux
		$BUILDCC arch/mips/boot/elf2ecoff.c -o elf2ecoff
		./elf2ecoff vmlinux vmlinux.ecoff
		cp -v vmlinux.ecoff $root/boot/vmlinux_$ver-rock.ecoff
		cp -v vmlinux.ecoff $root/boot/ ;;
	    *)
		eval $MAKE vmlinux
		cp -v vmlinux $root/boot/vmlinux_$ver-rock
		cp -v vmlinux $root/boot/vmlinux ;;
	esac
	cp -v .config $root/boot/kconfig_$ver-rock
	cp -v System.map $root/boot/System.map_$ver-rock
	cp -v System.map $root/boot/System.map

	echo "Building the modules ..."
	eval $MAKE -k modules || true
	if [ $stagelevel -le 1 ] ; then
		eval $MAKE -k modules_install \
			INSTALL_MOD_PATH=$root DEPMOD=/bin/true || true
	else
		eval $MAKE -k modules_install DEPMOD=/bin/true || true
		echo "Running 'depmod -a -q -F /boot/System.map $ver-rock' .."
		depmod -a -q -F /boot/System.map $ver-rock || true
		for x in /lib/modules/$ver-rock/modules.*
		do [ -f $x ] && add_flist $x; done
	fi

	# fix /lib/modules/${ver}/build symlink
	rm -f $root/lib/modules/${ver}-rock/build
	ln -sf ../../../usr/src/linux-${ver}-rock \
	       $root/lib/modules/${ver}-rock/build

	cp $base/package/base/linux24/mkinitrd.sh $root/sbin/mkinitrd
	chmod +x $root/sbin/mkinitrd
	if [ -z "$root" ]; then
		mkinitrd empty ${ver}-rock
		rm -f /boot/initrd.img
		ln -s initrd-${ver}-rock.img /boot/initrd.img
	fi
}

custmain="main_lx"
autopatch=0


# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/glibc22/glibc22.conf
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

glibc_custmain() {
	cat > configparms <<- EOF
		prefix = /usr
		slibdir = /lib
		sysconfdir = /etc
		install_root = $root
		CC = $CC
		BUILD_CC = $BUILDCC
		AR = $AR
		RANLIB = $RANLIB
	EOF

	# Disable glibc internal debuging but build debuging and profile
	# code so we can use this glibc to debug other programs.
	CFLAGS="$CFLAGS -g -DNDEBUG=1" ./configure --with-gnu-binutils \
		--enable-add-ons --enable-profile \
		--with-headers=$root/usr/include/linux \
		--with-gd=/usr \
		--with-gd-lib=/usr/lib \
		--with-gd-include=/usr/include \
		--build=${arch_build} ${arch_target}

	echo $BUILDCC elf/sln.c -o elf/dyn_sln
	$BUILDCC elf/sln.c -o elf/dyn_sln
	eval $MAKE symbolic-link-prog=elf/dyn_sln all install
	
	# Misc. stuff
	#
	if [ "$crossnative" = native ] ; then
		eval $MAKE install-locales -C localedata
		mkdir -p $root/usr/share/man/man3
		if [ -f /usr/bin/perl ] ; then
			eval $MAKE -C linuxthreads/man \
				MANDIR=$root/usr/share/man/man3 all install
		fi
	fi
	ln -sf libbsd-compat.a $root/usr/lib/libbsd.a
	
	# copy linuxthreads and crypt documentation
	#
	cp linuxthreads/ChangeLog   $docdir/ChangeLog.threads
	cp linuxthreads/Changes     $docdir/Changes.threads
	cp linuxthreads/README      $docdir/README.threads
	cp linuxthreads/FAQ.html    $docdir/FAQ-threads.html
	cp -r linuxthreads/Examples $docdir/examples.threads
	cp crypt/README.ufc-crypt   $docdir/README.crypt
	
	# NSCD Init script and config
	#
	cp $confdir/nscd.conf $confdir/nsswitch.conf $root/etc/
	install_init nscd $confdir/nscd.init

	# No absolute path in libc.so if cross-compileing
	#
	if [ $crossnative = cross ] ; then
		libcso=$root/usr/lib/libc.so
		for x in 1 2 3 4 5 ; do
			sed -i 's,/[a-z/]*/,,' $libcso
		done
	fi

	# Install ld.so.conf
	#
	{
		echo "/usr/lib"
		echo "/usr/X11/lib"
		echo "/usr/local/lib"
		echo "/opt/*/lib"
	} > $root/etc/ld.so.conf
	if [ -f $root/usr/sbin/ldconfig ] ; then
		ln -sf ../usr/sbin/ldconfig $root/sbin/
	fi
}

glibc_prepatch() {
	tar $taropt $archdir/glibc-linuxthreads-$threadsver.tar.bz2
}

glibc_stage0() {
	eval "./configure --enable-add-ons $confopt"
	make cross-compiling=yes install-headers

	# make some final adaptions
	cp -v include/features.h $root/$prefix/include
	mkdir -p $root/$prefix/include/gnu
	touch $root/$prefix/include/gnu/stubs.h
	cp -v bits/stdio_lim.h $root/$prefix/include/bits
	# cp /usr/include/errno.h $root/$prefix/include
	# cp /usr/include/bits/errno.h $root/$prefix/include/bits
}

threadsver="$ver"
prepatch="glibc_prepatch"

if [ $stagelevel -eq 0 ]
then
	custmain="glibc_stage0"
else
	custmain="glibc_custmain"
fi


# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/gcc3/config-300.in
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

menu_begin MENU_COMPILER 'Selecting compiler'
	default='' ; list=''
	while read pkg ver ; do
		default=${default:-$pkg} ; [ $pkg = gcc3 ] && default=gcc3
		list="$list $pkg Use_${pkg}_($ver)_as_standard_C_compiler"
	done < <(grep "^X .* CC " config/$config/packages | cut -f5,6 -d' ')
	if [ -z "$default" ] ; then
		default="cc" ; list="cc Standard_C-Compiler_CC"
	fi
	choice ROCKCFG_DEFAULT_CC $default $list

	if [ "$ROCKCFG_DEFAULT_CC" = gcc2 ] ; then
		sed -e '/ gcc3 / s/^\(..\)../\1--/' < config/$config/packages \
						> config/$config/packages.new
		mv config/$config/packages.new config/$config/packages
	else
		sed -e '/ gcc2 / s/^\(..\)../\1--/' < config/$config/packages \
						> config/$config/packages.new
		mv config/$config/packages.new config/$config/packages
	fi

	default='' ; list=''
	while read pkg ver ; do
		default=${default:-$pkg} ; [ $pkg = gcc3 ] && default=gcc3
		list="$list $pkg Use_${pkg}_($ver)_as_kernel_C_compiler"
	done < <(grep "^X .* KCC " config/$config/packages | cut -f5,6 -d' ')
	if [ -z "$default" ] ; then
		default="kcc" ; list="kcc Standard_Kernel_C-Compiler_KCC"
	fi
	choice ROCKCFG_DEFAULT_KCC $default $list

	default='' ; list=''
	while read pkg ver ; do
		default=${default:-$pkg} ; [ $pkg = gcc3 ] && default=gcc3
		list="$list $pkg Use_${pkg}_($ver)_as_standard_C++_compiler"
	done < <(grep "^X .* CXX " config/$config/packages | cut -f5,6 -d' ')
	if [ -z "$default" ] ; then
		default="c++" ; list="c++ Standard_C++-Compiler_C++"
	fi
	choice ROCKCFG_DEFAULT_CXX $default $list

	default='' ; list=''
	while read pkg ver ; do
		default=${default:-$pkg} ; [ $pkg = gcc3 ] && default=gcc3
		list="$list $pkg Use_${pkg}_($ver)_as_standard_F77_compiler"
	done < <(grep "^X .* F77 " config/$config/packages | cut -f5,6 -d' ')
	if [ -z "$default" ] ; then
		default="f77" ; list="f77 Standard_Fortran-Compiler_F77"
	fi
	choice ROCKCFG_DEFAULT_F77 $default $list
menu_end

if pkgcheck gcc2 X
then
	menu_begin MENU_PKG_GCC2 'GCC (GNU Compiler Collection) 2.x options'
		bool 'Use GCC 2.x Stack-Smashing Protector' \
					ROCKCFG_PKG_GCC2_STACKPRO 0
		bool 'Do not build GCC 2.x CHILL compiler' \
					ROCKCFG_PKG_GCC2_NO_CHILL 0
	menu_end
fi

if pkgcheck gcc3 X
then
	menu_begin MENU_PKG_GCC3 'GCC (GNU Compiler Collection) 3.x options'
		bool 'Use GCC 3.x Stack-Smashing Protector' \
					ROCKCFG_PKG_GCC3_STACKPRO 0
		bool 'Do not build GCC 3.x JAVA compiler' \
					ROCKCFG_PKG_GCC3_NO_JAVA 0
	menu_end
fi


# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/bdb33/db-3.3.11-2.patch
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

Official patches (1 & 2) from
http://www.sleepycat.com/update/3.3.11/patch.3.3.11.html

*** ./db185/db185.c	2001/04/10 20:43:53	11.18
--- ./db185/db185.c	2001/07/30 14:12:47
***************
*** 40,47 ****
--- ./40,52 ----
  
  /*
   * EXTERN: #define dbopen __db185_open
+  * EXTERN: #ifdef _DB185_INT_H_
   * EXTERN: DB185 *__db185_open
   * EXTERN:     __P((const char *, int, int, DBTYPE, const void *));
+  * EXTERN: #else
+  * EXTERN: DB *__db185_open
+  * EXTERN:     __P((const char *, int, int, DBTYPE, const void *));
+  * EXTERN: #endif
   */
  DB185 *
  __db185_open(file, oflags, mode, type, openinfo)
*** ./db185/db185_int.in	2001/04/10 20:43:54	11.9
--- ./db185/db185_int.in	2001/07/30 14:12:47
***************
*** 39,46 ****
   * $Id: db-3.3.11-2.patch,v 1.2 2003/04/28 13:50:08 clifford Exp $
   */
  
! #ifndef _DB_185_H_
! #define	_DB_185_H_
  
  /* Routine flags. */
  #define	R_CURSOR	1		/* del, put, seq */
--- ./39,46 ----
   * $Id: db-3.3.11-2.patch,v 1.2 2003/04/28 13:50:08 clifford Exp $
   */
  
! #ifndef _DB185_INT_H_
! #define	_DB185_INT_H_
  
  /* Routine flags. */
  #define	R_CURSOR	1		/* del, put, seq */
*** ./include_auto/db185_ext.in	2001/04/10 20:44:20	1.1
--- ./include_auto/db185_ext.in	2001/07/30 14:12:48
***************
*** 3,11 ****
  extern "C" {
  #endif
  #define dbopen __db185_open
  DB185 *__db185_open __P((const char *, int, int, DBTYPE, const void *));
  #if defined(__cplusplus)
  }
  #endif
  
! #endif /* !_DB_185_H_ */
--- ./3,15 ----
  extern "C" {
  #endif
  #define dbopen __db185_open
+ #ifdef _DB185_INT_H_
  DB185 *__db185_open __P((const char *, int, int, DBTYPE, const void *));
+ #else
+ DB *__db185_open __P((const char *, int, int, DBTYPE, const void *));
+ #endif
  #if defined(__cplusplus)
  }
  #endif
  
! #endif /* _DB_185_H_ or _DB185_INT_H_ */
*** ./include_auto/db185_uext.in	2001/04/10 20:44:20	1.1
--- ./include_auto/db185_uext.in	2001/07/30 14:12:48
***************
*** 3,12 ****
  extern "C" {
  #endif
  #define dbopen __db185_open@DB_VERSION_UNIQUE_NAME@
  #define	__db185_open __db185_open@DB_VERSION_UNIQUE_NAME@
  DB185 *__db185_open __P((const char *, int, int, DBTYPE, const void *));
  #if defined(__cplusplus)
  }
  #endif
  
! #endif /* !_DB_185_H_ */
--- ./3,17 ----
  extern "C" {
  #endif
  #define dbopen __db185_open@DB_VERSION_UNIQUE_NAME@
+ #ifdef _DB185_INT_H_
  #define	__db185_open __db185_open@DB_VERSION_UNIQUE_NAME@
  DB185 *__db185_open __P((const char *, int, int, DBTYPE, const void *));
+ #else
+ #define	__db185_open __db185_open@DB_VERSION_UNIQUE_NAME@
+ DB *__db185_open __P((const char *, int, int, DBTYPE, const void *));
+ #endif
  #if defined(__cplusplus)
  }
  #endif
  
! #endif /* _DB_185_H_ or _DB185_INT_H_ */

*** ./build_vxworks/db.h.orig	Mon Jul 30 09:49:54 2001
--- ./build_vxworks/db.h	Wed Dec 31 19:00:00 1969
***************
*** 32,37 ****
--- 32,41 ----
  extern "C" {
  #endif
  
+ #ifndef	HAVE_VXWORKS
+ #define	HAVE_VXWORKS	1
+ #endif
+ 
  /*
   * XXX
   * Handle function prototypes and the keyword "const".  This steps on name


#!/bin/sh
#
# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../sysvinit/system.init
# Copyright (C) 2004 - 2019 The T2 SDE Project
# Copyright (C) 1998 - 2003 ROCK Linux Project
# 
# More information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- T2-COPYRIGHT-NOTE-END ---
#
# Desc: System bootup and shutdown
# Runlevel: 01 rcX rc1 rc2 rc3 rc4 rc5
#
export PATH="/sbin:/usr/sbin:$PATH"

main_begin
    block_begin(start, `Mounting /proc, /sys, /dev/shm and /dev/pts.')
	[ -d /proc/self ] || mount -n /proc
	[ -d /sys/class ] || mount -n /sys

	mkdir -p /dev/shm
	check(`mount -n /dev/shm')
	mkdir -p /dev/pts
	mount -n /dev/pts 2> /dev/null
dnl
    if [ -f /etc/conf/hardware ] ; then
	. /etc/conf/hardware
    fi
dnl
    [ -x /bin/dmesg ] && /bin/dmesg -n 3
    block_split(`Configuring the /dev filesystem ...')
	check(`sh /etc/conf/devfs')
dnl
    if [ -s /etc/lvmtab -o -s /etc/lvm/cache/.cache ]; then
	block_split(`Activating Volume Groups...')
	    modprobe dm-mod 2> /dev/null
	    check(`vgchange --sysinit -a ay')
    fi
dnl
        if [ -f /etc/crypttab -a -n "$(/bin/grep -v ^# /etc/crypttab | /bin/grep -v ^$)" ]; then
        block_split(`Found encrypted disks, activating volumes.')
        modprobe dm-mod 2> /dev/null
        modprobe aes 2> /dev/null
        modprobe sha256 2> /dev/null
        modprobe sha512 2> /dev/null
        crypt_setup=/usr/sbin/cryptsetup
        do_crypt() {
           if [ $# -ge 3 ]; then
                crypt_name="$1"
                crypt_src="$2"
                crypt_key="$3"
                shift 3
                crypt_opts="$*"
                # be careful , the parameter ordering differs for LUKS and non-LUKS devices
                if [ "${crypt_name}" = "swap" ] ; then
                   # do nothing if swap is LUKS device
                   if $crypt_setup isLuks $crypt_src 2> /dev/null; then
                        continue
                   elif [ "${crypt_key}" != "defaults" -a "x${crypt_opts}" != "x" ] ; then
                        $crypt_setup -d $crypt_key ${crypt_opts} create $crypt_name $crypt_src >/dev/null && \
                        /sbin/mkswap -f -L $crypt_name /dev/mapper/$crypt_name >/dev/null
                   else
                        $crypt_setup -d /dev/urandom -h sha256 -c aes-cbc-essiv:sha256 -s 256 create $crypt_name $crypt_src >/dev/null && \
                        /sbin/mkswap -f -L $crypt_name /dev/mapper/$crypt_name >/dev/null
                   fi
                else
                   if $crypt_setup isLuks $crypt_src 2>/dev/null; then
                    $crypt_setup luksOpen $crypt_src $crypt_name < /dev/console
                   fi
                fi
           fi
        }
        check(while read line ; do
                eval do_crypt "$line"
        done </etc/crypttab)
        fi
dnl
    block_split(`Checking file systems.')
	fsck -A -C -a ; fsckrc=$?
	if   [ $(( $fsckrc & ~3 )) != 0 ] ; then
		echo " **"
		echo " ** Filesystem check failed (returncode=$fsckrc)."
		echo " ** Please repair the broken disk(s) manually."
		echo " **"
		sulogin -t 600 /dev/console
		umount -arv ; /sbin/reboot -d -f
		while true ; do sleep 1 ; done
	elif [ $(( $fsckrc &  2 )) != 0 ] ; then
		for x in 10 9 8 7 6 5 4 3 2 ; do  
			echo -en "\rSystem reboot in $x seconds ... "
			sleep 1
		done ; echo -e "\rSystem reboot now!                 "
		umount -arv ; /sbin/reboot -d -f
		while true ; do sleep 1 ; done
	fi
dnl
    block_split(`Mounting local file systems.')
	check(`mount -n -o remount,rw /')
	rm -f /etc/mtab~* # lingering lock files
	cat /proc/mounts > /etc/mtab
	check(`mount -a -t nocoda,nfs,devfs,proc,sysfs')
dnl
    block_split(`Activating swap devices.')
	check(`swapon -a')
dnl
    block_split(`Refresh utmp, delete lock and tmp files and other stuff.')
	find /var/lock /var/run /tmp -mindepth 1 -print0 2> /dev/null | xargs --null rm -rf
	rm -f /etc/nologin /nologin /fastboot ; touch /var/run/utmp
	chmod 664 /var/run/utmp ; chown root:tty /var/run/utmp
	mkdir /tmp/.ICE-unix && chmod 1777 /tmp/.ICE-unix
dnl
    block_split(`Setting hostname to $(cat /etc/HOSTNAME).')
	check(`hostname "$(cat /etc/HOSTNAME)"')
dnl
    block_split(`Activating udevd.')
	echo "" > /proc/sys/kernel/hotplug
	udevd -d
	udevadm trigger
	udevadm settle
dnl    block_split(`Running hotplug++.')
dnl	check(`/sbin/hotplug++ -synth')

    block_split(`Configuring the kernel with /etc/conf/kernel.')
	check(`sh /etc/conf/kernel')
dnl
    [ -f /etc/conf/clock ] && . /etc/conf/clock
    if [ "$clock_tz" = localtime ] ; then
	block_split(`Setting kernel clock to local time.')
	    check(`hwclock --hctosys --localtime')
    fi
    if [ "$clock_rtc" ] ; then
	block_split(`Setting enhanced real time clock precision to $clock_rtc.')
	if [ -w /proc/sys/dev/rtc/max-user-freq ] ; then
	    check(`echo $clock_rtc > /proc/sys/dev/rtc/max-user-freq')
	else
	    echo "No /proc/sys/dev/rtc/max-user-freq found."
	fi
    fi
dnl
    block_split(`Writing /var/log/boot.msg.')
	check(`dmesg > /var/log/boot.msg')
dnl
    block_split(`Setting console screen font.')
	if [ -L /etc/default.vcfont ] ; then
		fontfile=$(ls -l /etc/default.vcfont | sed 's,.* -> ,,')
		check(`setfont $fontfile')
	elif [ -f /etc/default.vcfont ] ; then
		check(`setfont /etc/default.vcfont')
	else
		echo "No /etc/default.vcfont found."
	fi
dnl
    block_split(`Setting console terminal type and blank interval.')
	con_term=linux; con_blank=0; con_blength=0
        [ -f /etc/conf/console ] && . /etc/conf/console
        check(`D_prefix/bin/setterm -term $con_term -blank $con_blank -blength $con_blength > /dev/console')
dnl
    block_split(`Setting up loopback networking.')
	check(`ip link set lo up')
	[[ "$(ip addr show lo)" = *127.0.0.1/8* ]] ||
		check(`ip addr add 127.0.0.1/8 dev lo')
	check(`ip route add 127/8 dev lo')
dnl
    block_split(`Setting overflow UID and GID kernel parameters.')
	check(`sysctl -w kernel.overflowuid=$(id -u nobody) > /dev/null')
	check(`sysctl -w kernel.overflowgid=$(id -g nobody) > /dev/null')
dnl
    block_split(`Reading /etc/sysctl.conf file.')
	check(`sysctl -p')
dnl
    block_split(`Initializing kernel random number generator.')
	if [ -e /var/state/random-seed ] ; then
		check(`cat /var/state/random-seed >/dev/urandom')
	fi
    block_end


    block_begin(stop, `Saving /var/log/init.msg and /var/log/boot.msg.')
	check(`touch /var/log/init.msg /var/log/boot.msg')
	check(`mv /var/log/init.msg /var/log/init.old')
	check(`mv /var/log/boot.msg /var/log/boot.old')
    block_split(`Writing a wtmp record.')
	if [ "$RUNLEVEL" = 0 ] ; then check(`halt -w')
	else check(`reboot -w') ; fi
    block_split(`Saving kernel random seed.')
	dd if=/dev/urandom of=/var/state/random-seed count=1 2> /dev/null
dnl
    block_split(`Sending all processes a SIGTERM (15).')
	check(`killall5 -15') ; sleep 5 
    block_split(`Sending all processes a 2nd SIGTERM (15).')
	check(`killall5 -15') ; sleep 5 
    block_split(`Sending all processes a SIGKILL (9).')
	check(`killall5 -9') ; sleep 5 
dnl
    block_split(`Turning off swap devices.')
	check(`swapoff -a')
dnl
    block_split(`Remounting sync/ro and umount filesystems.')
	sync
	cut -d' ' -f-3 /etc/mtab /proc/mounts | sort -k2 -u -r |
	while read dev dir fs ; do
		case "$dir" in
		/|/dev|/proc|/sys|/tmp)	continue ;;
		*)	echo "Umounting $dev on $dir ($fs)."
			mount -o remount,sync $dir
			mount -o remount,ro $dir
			umount $dir ;;
		esac
	done
dnl
    if [ -s /etc/lvmtab -o -s /etc/lvm/cache/.cache ]; then
	block_split(`Deactivating Volume Groups...')
	check(`vgchange --sysinit -a n || lvchange --sysinit -a n $(lvdisplay -c | cut -d : -f 1)')
    fi
dnl
    block_split(`Unmounting remaining file systems.')
	grep -v -e '^none /[a-z]\+' -e ' / ' /proc/mounts > /etc/mtab
	mount -vn -o remount,sync /
	sync
	umount -vran -t nodevfs,proc,sysfs
	mount -vn -o remount,ro /
	sync ; sleep 1
dnl
        if [ -f /etc/crypttab -a -n "$(/bin/grep -v ^# /etc/crypttab | /bin/grep -v ^$)" ]; then
        block_split(`Deactivating encrypted volumes.')
        crypt_setup=/usr/sbin/cryptsetup
        do_uncrypt() {
           if [ $# -ge 3 ]; then
                $crypt_setup remove $1
           fi
        }
        check(while read line ; do
                eval do_uncrypt "$line"
        done </etc/crypttab)
        fi
dnl
    block_split()
	if [ "$INIT_DOES_REBOOTHALT" != "1" ]; then
	command=""
	[ "$RUNLEVEL" = 0 ] && command=halt
	[ "$RUNLEVEL" = 6 ] && command=reboot
	if [ -n "$command" ] ; then
		echo "Going to $command the system ..."
		$command -d -f -i -p
		[ "$INIT_WAITS" != "1" ] && \
			while true ; do sleep 1 ; done
	fi
	fi
    block_end	

main_end

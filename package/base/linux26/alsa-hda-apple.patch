The best ALSA Intel HDA for Apple Mactel boxes patch I have seen so far.
Mostly works, that is on a MacBook (at least not Pro) the right speaker
gets a signal, even if it is muted but the headphone right channel is
driven. Not ovious why, maybe the static pin config?

--- ./sound/pci/hda/patch_sigmatel.c.orig	2006-07-08 12:09:09.000000000 +0200
+++ ./sound/pci/hda/patch_sigmatel.c	2006-07-08 12:09:17.000000000 +0200
@@ -41,6 +41,7 @@
 #define STAC_REF		0
 #define STAC_D945GTP3		1
 #define STAC_D945GTP5		2
+#define STAC_APPLE		3 /* Apple MacBook Pro/Mac Mini */
 
 struct sigmatel_spec {
 	struct snd_kcontrol_new *mixers[4];
@@ -52,6 +53,7 @@
 	unsigned int mic_switch: 1;
 	unsigned int alt_switch: 1;
 	unsigned int hp_detect: 1;
+	unsigned int gpio_mute: 1;
 
 	/* playback */
 	struct hda_multi_out multiout;
@@ -289,10 +291,17 @@
 	0x02a19320, 0x40000100,
 };
 
+static unsigned int apple_pin_configs[10] = {
+	0x0121E230, 0x90A70120, 0x9017E110, 0x400000FE,
+	0x400000FD, 0x0181E021, 0x1145E040, 0x400000FA,
+	0x400000FC, 0x400000FB,
+};
+
 static unsigned int *stac922x_brd_tbl[] = {
 	ref922x_pin_configs,
 	d945gtp3_pin_configs,
 	d945gtp5_pin_configs,
+	apple_pin_configs,
 };
 
 static struct hda_board_config stac922x_cfg_tbl[] = {
@@ -324,6 +333,9 @@
 	{ .pci_subvendor = PCI_VENDOR_ID_INTEL,
 	  .pci_subdevice = 0x0417,
 	  .config = STAC_D945GTP5 },	/* Intel D975XBK - 5 Stack */
+	{ .pci_subvendor = 0x8384,
+	  .pci_subdevice = 0x7680,
+	  .config = STAC_APPLE },       /* Apple Mac Mini (early 2006) / MacBook Pro */
 	{} /* terminator */
 };
 
@@ -841,6 +853,19 @@
 		}
 	}
 
+      if (imux->num_items == 1) {
+              /*
+               * Set the current input for the muxes.
+               * The STAC9221 has two input muxes with identical source
+               * NID lists.  Hopefully this won't get confused.
+               */
+              for (i = 0; i < spec->num_muxes; i++) {
+                      snd_hda_codec_write(codec, spec->mux_nids[i], 0,
+                                          AC_VERB_SET_CONNECT_SEL,
+                                          imux->items[0].index);
+              }
+      }
+
 	return 0;
 }
 
@@ -946,6 +971,45 @@
 	return 1;
 }
 
+/*
+ * Early 2006 Intel Macintoshes with STAC9220X5 codecs seem to have a
+ * funky external mute control using GPIO pins.
+ */
+
+static void stac922x_gpio_mute(struct hda_codec *codec, int pin, int muted)
+{
+      unsigned int gpiostate, gpiomask, gpiodir;
+
+      gpiostate = snd_hda_codec_read(codec, codec->afg, 0,
+                                     AC_VERB_GET_GPIO_DATA, 0);
+
+      if (!muted)
+              gpiostate |= (1 << pin);
+      else
+              gpiostate &= ~(1 << pin);
+
+      gpiomask = snd_hda_codec_read(codec, codec->afg, 0,
+                                    AC_VERB_GET_GPIO_MASK, 0);
+      gpiomask |= (1 << pin);
+
+      gpiodir = snd_hda_codec_read(codec, codec->afg, 0,
+                                   AC_VERB_GET_GPIO_DIRECTION, 0);
+      gpiodir |= (1 << pin);
+
+      /* AppleHDA seems to do this -- WTF is this verb?? */
+      snd_hda_codec_write(codec, codec->afg, 0, 0x7e7, 0);
+
+      snd_hda_codec_write(codec, codec->afg, 0,
+                          AC_VERB_SET_GPIO_MASK, gpiomask);
+      snd_hda_codec_write(codec, codec->afg, 0,
+                          AC_VERB_SET_GPIO_DIRECTION, gpiodir);
+
+      msleep(1);
+
+      snd_hda_codec_write(codec, codec->afg, 0,
+                          AC_VERB_SET_GPIO_DATA, gpiostate);
+}
+
 static int stac92xx_init(struct hda_codec *codec)
 {
 	struct sigmatel_spec *spec = codec->spec;
@@ -982,6 +1046,11 @@
 		stac92xx_auto_set_pinctl(codec, cfg->dig_in_pin,
 					 AC_PINCTL_IN_EN);
 
+      if (spec->gpio_mute) {
+              stac922x_gpio_mute(codec, 0, 0);
+              stac922x_gpio_mute(codec, 1, 0);
+      }
+
 	return 0;
 }
 
@@ -1154,6 +1223,9 @@
 		return err;
 	}
 
+	if (spec->board_config == STAC_APPLE)
+	    spec->gpio_mute = 1;
+
 	codec->patch_ops = stac92xx_patch_ops;
 
 	return 0;

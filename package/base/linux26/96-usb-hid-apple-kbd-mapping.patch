# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../linux26/96-usb-hid-apple-kbd-mapping.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

The Apple USB keyboard does send non-standard events that do not make working
that comfortable. That is we swap the events here as in the 95-adb-mapping
patch.

  - Rene Rebe <rene@exactcode.de>

--- linux-2.6.10/drivers/usb/input/hid-input.c.orig	2005-02-28 22:59:17.008670368 +0100
+++ linux-2.6.10/drivers/usb/input/hid-input.c	2005-02-28 23:11:19.325861464 +0100
@@ -101,8 +101,20 @@
 			set_bit(EV_REP, input->evbit);
 
 			if ((usage->hid & HID_USAGE) < 256) {
-				if (!hid_keyboard[usage->hid & HID_USAGE]) goto ignore;
-				map_key_clear(hid_keyboard[usage->hid & HID_USAGE]);
+				unsigned char k = hid_keyboard[usage->hid & HID_USAGE];
+
+				if (hidinput->input.id.vendor == 0x5ac &&
+				  hidinput->input.id.product == 0x020c) {
+				  switch (k) {
+					case 56: k = 100; break;
+					case 125: k = 56; break;
+					case 126: k = 56; break;
+				  }
+				}
+
+				if (!k) goto ignore;
+				
+				map_key_clear(k);
 			} else
 				map_key(KEY_UNKNOWN);
 

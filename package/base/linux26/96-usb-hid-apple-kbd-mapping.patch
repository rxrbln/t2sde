# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../linux26/96-usb-hid-apple-kbd-mapping.patch
# Copyright (C) 2004 - 2008 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

The Apple USB keyboards carry symbols differing from the on-wire values sent.
So we swap the events here simillar as in the 95-adb-mapping patch.
Likewise, default to the normal F* keys for usability on the Linux desktop.

  - Rene Rebe <rene@exactcode.de>

--- linux-2.6.28/drivers/hid/hid-input.c.orig	2008-12-25 00:26:37.000000000 +0100
+++ linux-2.6.28/drivers/hid/hid-input.c	2008-12-27 21:39:23.000000000 +0100
@@ -190,8 +190,20 @@
 		set_bit(EV_REP, input->evbit);
 
 		if ((usage->hid & HID_USAGE) < 256) {
-			if (!hid_keyboard[usage->hid & HID_USAGE]) goto ignore;
-			map_key_clear(hid_keyboard[usage->hid & HID_USAGE]);
+			unsigned char code = hid_keyboard[usage->hid & HID_USAGE];
+			if (!code) goto ignore;
+
+			/* Apple? */
+			if (input->id.vendor == 0x5ac) {
+				/* alt->altgr, lmeta->alt, and no dups
+				   due Linux meta bit parsing */
+				switch (code) {
+				  case 56: code = 100; break;
+				  case 125: code = 56; break;
+				  case 100: code = 127; break;
+				}
+			}
+			map_key_clear(code);
 		} else
 			map_key(KEY_UNKNOWN);
 

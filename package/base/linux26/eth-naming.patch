# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../linux26/eth-naming.patch
# Copyright (C) 2006 - 2009 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Ever chaning wlan^Wwifi^Weth interface names do not only annoy users, but
also prevent reusing configuration from one machine to another.

Sanitze naming to alway be eth* regardless of who wrote the driver.

  - Rene Rebe <rene@exactcode.de>

diff -ur linux-2.6.16/drivers/net/wireless/airo.c linux-2.6.16/drivers/net/wireless-unified/airo.c
--- linux-2.6.16/drivers/net/wireless/airo.c	2006-03-20 06:53:29.000000000 +0100
+++ linux-2.6.16/drivers/net/wireless-unified/airo.c	2006-06-06 17:25:52.000000000 +0200
@@ -2659,7 +2659,7 @@
 					struct net_device *ethdev)
 {
 	int err;
-	struct net_device *dev = alloc_netdev(0, "wifi%d", wifi_setup);
+	struct net_device *dev = alloc_netdev(0, "eth%d", wifi_setup);
 	if (!dev)
 		return NULL;
 	dev->priv = ethdev->priv;
diff -ur linux-2.6.16/drivers/net/wireless/hostap/hostap_hw.c linux-2.6.16/drivers/net/wireless-unified/hostap/hostap_hw.c
--- linux-2.6.16/drivers/net/wireless/hostap/hostap_hw.c	2006-03-20 06:53:29.000000000 +0100
+++ linux-2.6.16/drivers/net/wireless-unified/hostap/hostap_hw.c	2006-06-06 17:26:58.000000000 +0200
@@ -82,10 +82,10 @@
 module_param_array(dtim_period, int, NULL, 0444);
 MODULE_PARM_DESC(dtim_period, "DTIM period");
 
-static char dev_template[16] = "wlan%d";
+static char dev_template[16] = "eth%d";
 module_param_string(dev_template, dev_template, sizeof(dev_template), 0444);
 MODULE_PARM_DESC(dev_template, "Prefix for network device name (default: "
-		 "wlan%d)");
+		 "eth%d)");
 
 #ifdef final_version
 #define EXTRA_EVENTS_WTERR 0
--- linux-2.6.27/drivers/net/usb/usbnet.c.vanilla	2008-10-20 15:53:24.000000000 +0200
+++ linux-2.6.27/drivers/net/usb/usbnet.c	2008-10-20 15:54:07.000000000 +0200
@@ -1203,9 +1203,8 @@
 		if ((dev->driver_info->flags & FLAG_ETHER) != 0
 				&& (net->dev_addr [0] & 0x02) == 0)
 			strcpy (net->name, "eth%d");
-		/* WLAN devices should always be named "wlan%d" */
 		if ((dev->driver_info->flags & FLAG_WLAN) != 0)
-			strcpy(net->name, "wlan%d");
+			strcpy(net->name, "eth%d");
 
 		/* maybe the remote can't receive an Ethernet MTU */
 		if (net->mtu > (dev->hard_mtu - net->hard_header_len))
--- linux-2.6.27/drivers/net/ps3_gelic_wireless.c.vanilla	2008-10-20 15:53:24.000000000 +0200
+++ linux-2.6.27/drivers/net/ps3_gelic_wireless.c	2008-10-20 15:54:14.000000000 +0200
@@ -2460,7 +2460,7 @@
 	if (!netdev)
 		return NULL;
 
-	strcpy(netdev->name, "wlan%d");
+	strcpy(netdev->name, "eth%d");
 
 	port = netdev_priv(netdev);
 	port->netdev = netdev;
--- linux-2.6.29/drivers/net/wireless/zd1201.c.vanilla	2009-03-26 16:22:55.000000000 +0100
+++ linux-2.6.29/drivers/net/wireless/zd1201.c	2009-03-26 16:23:17.000000000 +0100
@@ -1787,7 +1787,7 @@
 	dev->tx_timeout = zd1201_tx_timeout;
 	dev->set_multicast_list = zd1201_set_multicast;
 	dev->set_mac_address = zd1201_set_mac_address;
-	strcpy(dev->name, "wlan%d");
+	strcpy(dev->name, "eth%d");
 
 	err = zd1201_getconfig(zd, ZD1201_RID_CNFOWNMACADDR, 
 	    dev->dev_addr, dev->addr_len);
--- linux-2.6.29/net/mac80211/main.c.vanilla	2009-03-26 16:26:20.000000000 +0100
+++ linux-2.6.29/net/mac80211/main.c	2009-03-26 16:26:55.000000000 +0100
@@ -891,7 +891,7 @@
 
 	/* add one default STA interface if supported */
 	if (local->hw.wiphy->interface_modes & BIT(NL80211_IFTYPE_STATION)) {
-		result = ieee80211_if_add(local, "wlan%d", NULL,
+		result = ieee80211_if_add(local, "eth%d", NULL,
 					  NL80211_IFTYPE_STATION, NULL);
 		if (result)
 			printk(KERN_WARNING "%s: Failed to add default virtual iface\n",

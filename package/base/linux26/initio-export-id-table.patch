# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../linux26/initio-export-id-table.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Minimal updates to export the device table in the module, the driver should
be updated further.

  - Rene Rebe <rene@exactcode.de>

--- linux-2.6.18/drivers/scsi/initio.c.orig	2006-09-20 05:42:06.000000000 +0200
+++ linux-2.6.18/drivers/scsi/initio.c	2006-09-20 17:33:56.000000000 +0200
@@ -155,11 +155,6 @@
 
 #define TUL_RDWORD(x,y)         (short)(inl((int)((ULONG)((ULONG)x+(UCHAR)y)) ))
 
-typedef struct PCI_ID_Struc {
-	unsigned short vendor_id;
-	unsigned short device_id;
-} PCI_ID;
-
 static int tul_num_ch = 4;	/* Maximum 4 adapters           */
 static int tul_num_scb;
 static int tul_tag_enable = 1;
@@ -171,12 +166,13 @@
 
 static void i91uSCBPost(BYTE * pHcb, BYTE * pScb);
 
-static const PCI_ID i91u_pci_devices[] = {
-	{ INI_VENDOR_ID, I950_DEVICE_ID },
-	{ INI_VENDOR_ID, I940_DEVICE_ID },
-	{ INI_VENDOR_ID, I935_DEVICE_ID },
-	{ INI_VENDOR_ID, I920_DEVICE_ID },
-	{ DMX_VENDOR_ID, I920_DEVICE_ID },
+static struct pci_device_id i91u_pci_tbl[] = {
+        { INI_VENDOR_ID, I950_DEVICE_ID, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0 },
+        { INI_VENDOR_ID, I940_DEVICE_ID, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0 },
+        { INI_VENDOR_ID, I935_DEVICE_ID, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0 },
+        { INI_VENDOR_ID, I920_DEVICE_ID, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0 },
+        { DMX_VENDOR_ID, I920_DEVICE_ID, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0 },
+        { 0 }
 };
 
 #define DEBUG_INTERRUPT 0
@@ -2769,9 +2765,9 @@
 
 	init_i91uAdapter_table();
 
-	for (i = 0; i < ARRAY_SIZE(i91u_pci_devices); i++)
+	for (i = 0; i < ARRAY_SIZE(i91u_pci_tbl); i++)
 	{
-		while ((pDev = pci_find_device(i91u_pci_devices[i].vendor_id, i91u_pci_devices[i].device_id, pDev)) != NULL) {
+		while ((pDev = pci_find_device(i91u_pci_tbl[i].vendor, i91u_pci_tbl[i].device, pDev)) != NULL) {
 			if (pci_enable_device(pDev))
 				continue;
 			pci_read_config_dword(pDev, 0x44, (u32 *) & dRegValue);
@@ -3154,6 +3150,8 @@
 }
 MODULE_LICENSE("Dual BSD/GPL");
 
+MODULE_DEVICE_TABLE(pci, i91u_pci_tbl);
+
 static struct scsi_host_template driver_template = {
 	.proc_name	= "INI9100U",
 	.name		= i91u_REVID,

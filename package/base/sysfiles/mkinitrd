#!/bin/sh

set -e

if [ $UID != 0 ]; then
	echo "Non root - exiting ..."
	exit 1
fi

while [ "$1" ]; do
  case $1 in
	[0-9]*) kernelver="$1" ;;
	*) echo "Usage: mkinitrd [ kernelver ]"
	   exit 1 ;;
  esac
  shift
done

[ "$kernelver" ] || kernelver=`uname -r`
[ "$moddir" ] || moddir="/lib/modules/$kernelver"

echo "Kernel: $kernelver, module dir: $moddir"

if [ ! -d $moddir ]; then
	echo "Module dir $moddir does not exist!"
	exit 2
fi

tmpdir=`mktemp`

# create basic structure
#
rm -rf $tmpdir >/dev/null

echo "Create dirtree ..."

mkdir -p $tmpdir/{dev,bin,sbin,proc,sys,lib/modules,etc/hotplug.d/default}
mknod $tmpdir/dev/console c 5 1

# copy the basic / rootfs kernel modules
#
echo "Copying kernel modules ..."

find $moddir/kernel -type f | grep \
	-e reiserfs -e ext2 -e ext3 -e isofs -e /jfs -e /xfs \
	-e /unionfs -e ntfs -e /dos \
	-e /ide/ -e /scsi/ -e hci -e usb-storage -e sbp2 |
while read fn ; do

	for x in $fn `modinfo $fn | grep depends |
	         cut -d : -f 2- | sed -e 's/ //g' -e 's/,/ /g' `
	do
		# expand to full name if it was a depend
		[ $x = ${x##*/} ] &&
		x=`find $moddir/kernel -name "$x.*o"`

		echo -n "${x##*/} "

		# TODO: strip possible $root / $DESTDIR prefix later
		mkdir -p `dirname $tmpdir/$x`
		cp $x $tmpdir/$x 2>/dev/null
	done
done

# generate map files
#
/sbin/depmod --basedir $tmpdir $kernelver

echo "Injecting programs and configuration ..."

# copying config
#
cp -ar /etc/udev $tmpdir/etc/

# setup programs
#
for x in /sbin/hotplug++ /sbin/{udev,udevstart,modprobe,insmod,insmod.old}
do
	# sanity check
	file $x | grep -q "dynamically linked" &&
		echo "Warning: $x is dynamically linked!"
	cp $x $tmpdir/sbin/
done

ln -s insmod.old $tmpdir/sbin/modprobe.old
ln -sf /sbin/udev $tmpdir/etc/hotplug.d/default/10-udev.hotplug
cp /bin/pdksh $tmpdir/bin/sh

# hack - to be resolved
#
cp /usr/embutils/{mount,umount,rm,mv,mkdir,ln,ls,pivot_root,sleep,losetup,chmod,cat} \
   $tmpdir/bin/
ln -s mv $tmpdir/bin/cp

cp /sbin/initrdinit $tmpdir/init

# create the cpio image
#
echo "Archiving ..."
( cd $tmpdir
  find * | cpio -o -H newc | gzip -c9 > /boot/initrd-$kernelver.img
)

# display the resulting image
#
du -sh /boot/initrd-$kernelver.img
rm -rf $tmpdir




At least on sparc64 this fixes an abort due to SIGBUS ;-)

  - Rene Rebe <rene@exactcode.de>

diff -ur procps-3.2.4/proc/escape.c procps-3.2.4-fixed/proc/escape.c
--- procps-3.2.4/proc/escape.c	2004-10-23 19:44:28.000000000 +0200
+++ procps-3.2.4-fixed/proc/escape.c	2005-01-29 15:46:10.000000000 +0100
@@ -159,7 +159,7 @@
 // escape an argv or environment string array
 //
 // bytes arg means sizeof(buf)
-int escape_strlist(char *restrict dst, const char *restrict const *restrict src, size_t bytes, size_t *cells){
+int escape_strlist(char *restrict dst, const char *restrict const *restrict src, size_t bytes, int *cells){
   size_t i = 0;
 
   for(;;){
diff -ur procps-3.2.4/proc/escape.h procps-3.2.4-fixed/proc/escape.h
--- procps-3.2.4/proc/escape.h	2004-10-20 19:13:53.000000000 +0200
+++ procps-3.2.4-fixed/proc/escape.h	2005-01-29 15:46:36.000000000 +0100
@@ -12,7 +12,7 @@
 #define ESC_BRACKETS 0x2  // if using cmd, put '[' and ']' around it
 #define ESC_DEFUNCT  0x4  // mark zombies with " <defunct>"
 
-extern int escape_strlist(char *restrict dst, const char *restrict const *restrict src, size_t n, size_t *cells);
+extern int escape_strlist(char *restrict dst, const char *restrict const *restrict src, size_t n, int *cells);
 extern int escape_str(char *restrict dst, const char *restrict src, int bufsize, int *maxcells);
 extern int escape_command(char *restrict const outbuf, const proc_t *restrict const pp, int bytes, int *cells, unsigned flags);
 

--- ./glibc-2.2.5/linuxthreads/sysdeps/pthread/pthread.h.old	2003-05-12 22:01:07.000000000 +0200
+++ ./glibc-2.2.5/linuxthreads/sysdeps/pthread/pthread.h	2003-05-12 22:01:31.000000000 +0200
@@ -160,7 +160,7 @@
 /* Create a thread with given attributes ATTR (or default attributes
    if ATTR is NULL), and call function START_ROUTINE with given
    arguments ARG.  */
-extern int pthread_create (pthread_t *__restrict __thread,
+extern int pthread_create (pthread_t *__restrict __thread_id,
 			   __const pthread_attr_t *__restrict __attr,
 			   void *(*__start_routine) (void *),
 			   void *__restrict __arg) __THROW;
@@ -588,7 +588,7 @@
 extern int pthread_setcanceltype (int __type, int *__oldtype) __THROW;
 
 /* Cancel THREAD immediately or at the next possibility.  */
-extern int pthread_cancel (pthread_t __thread) __THROW;
+extern int pthread_cancel (pthread_t __thread_id) __THROW;
 
 /* Test for pending cancellation for the current thread and terminate
    the thread as per pthread_exit(PTHREAD_CANCELED) if it has been
--- ./glibc-2.2.5/linuxthreads/sysdeps/unix/sysv/linux/bits/sigthread.h.old	2003-05-12 22:11:27.000000000 +0200
+++ ./glibc-2.2.5/linuxthreads/sysdeps/unix/sysv/linux/bits/sigthread.h	2003-05-12 22:11:40.000000000 +0200
@@ -33,6 +33,6 @@
 			    __sigset_t *__restrict __oldmask)__THROW;
 
 /* Send signal SIGNO to the given thread. */
-extern int pthread_kill (pthread_t __thread, int __signo) __THROW;
+extern int pthread_kill (pthread_t __thread_id, int __signo) __THROW;
 
 #endif	/* bits/sigthread.h */

# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/*/hdparm/glibc234.patch
# Copyright (C) 1998 - 2004 ROCK Linux Project
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---


Conflicts with a readahead in the new glibc headers - bits/fcntl.h.

  - Rene Rebe <rene@rocklinux.org>

--- hdparm-5.5/hdparm.c.orig	2004-05-02 22:37:10.000000000 +0200
+++ hdparm-5.5/hdparm.c	2004-05-02 22:42:27.000000000 +0200
@@ -52,7 +52,7 @@
 static int flagcount = 0, do_flush = 0, is_scsi_hd = 0, is_scsi_cd = 0, is_xt_hd = 0;
 static int do_ctimings, do_timings = 0;
 
-static unsigned long set_readahead= 0, get_readahead= 0, readahead= 0;     
+static unsigned long set_readahead= 0, get_readahead= 0, rahead= 0;     
 static unsigned long set_readonly = 0, get_readonly = 0, readonly = 0;
 static unsigned long set_unmask   = 0, get_unmask   = 0, unmask   = 0;     
 static unsigned long set_mult     = 0, get_mult     = 0, mult     = 0;     
@@ -784,8 +784,8 @@
 
 	if (set_readahead) {
 		if (get_readahead)
-			printf(" setting fs readahead to %ld\n", readahead);
-		if (ioctl(fd, BLKRASET, readahead)) 
+			printf(" setting fs readahead to %ld\n", rahead);
+		if (ioctl(fd, BLKRASET, rahead)) 
 			perror(" BLKRASET failed");
 	}
 #ifdef HDIO_UNREGISTER_HWIF
@@ -1829,7 +1829,7 @@
 					case 'a':
 						get_readahead = noisy;
 						noisy = 1;
-						GET_NUMBER(set_readahead,readahead);
+						GET_NUMBER(set_readahead,rahead);
 						break;
 					case 'B':
 						get_apmmode = noisy;

# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/raidtools/gcc33-support.patch
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

diff -urN -x '*~' raidtools-1.00.3/mkraid.c raidtools-1.00.3-gcc-3.3.1/mkraid.c
--- raidtools-1.00.3/mkraid.c	2003-01-15 09:58:25.000000000 +0100
+++ raidtools-1.00.3-gcc-3.3.1/mkraid.c	2003-08-19 23:00:59.000000000 +0200
@@ -171,32 +171,32 @@
     if (old_force_flag && (func == mkraid)) {
 	fprintf(stderr, 
 
-"
- WARNING!
-
- NOTE: if you are recovering a double-disk error or some other failure mode
- that made your array unrunnable but data is still intact then it's strongly
- recommended to use the lsraid utility and to read the lsraid HOWTO.
-
- If your RAID array holds useful and not yet backed up data then --force
- and the hot-add/hot-remove functionality should be used with extreme care!
- If your /etc/raidtab file is not in sync with the real array configuration,
- then --force might DESTROY ALL YOUR DATA. It's especially dangerous to use
- -f if the array is in degraded mode.
-
- If your /etc/raidtab file matches the real layout of on-disk data then
- recreating the array will not hurt your data, but be aware of the risks
- of doing this anyway: freshly created RAID1 and RAID5 arrays do a full
- resync of their mirror/parity blocks, which, if the raidtab is incorrect,
- the resync will wipe out data irrecoverably. Also, if your array is in
- degraded mode then the raidtab must match the degraded config exactly,
- otherwise you'll get the same kind of data destruction during resync.
- (see the failed-disk raidtab option.) You have been warned!
-
- [ If your array holds no data, or you have it all backed up, or if you
- know precisely what you are doing and you still want to proceed then use
- the --really-force (or -R) flag. ]
-");
+"\n"
+" WARNING!\n"
+"\n"
+" NOTE: if you are recovering a double-disk error or some other failure mode\n"
+" that made your array unrunnable but data is still intact then it's strongly\n"
+" recommended to use the lsraid utility and to read the lsraid HOWTO.\n"
+"\n"
+" If your RAID array holds useful and not yet backed up data then --force\n"
+" and the hot-add/hot-remove functionality should be used with extreme care!\n"
+" If your /etc/raidtab file is not in sync with the real array configuration,\n"
+" then --force might DESTROY ALL YOUR DATA. It's especially dangerous to use\n"
+" -f if the array is in degraded mode.\n"
+"\n"
+" If your /etc/raidtab file matches the real layout of on-disk data then\n"
+" recreating the array will not hurt your data, but be aware of the risks\n"
+" of doing this anyway: freshly created RAID1 and RAID5 arrays do a full\n"
+" resync of their mirror/parity blocks, which, if the raidtab is incorrect,\n"
+" the resync will wipe out data irrecoverably. Also, if your array is in\n"
+" degraded mode then the raidtab must match the degraded config exactly,\n"
+" otherwise you'll get the same kind of data destruction during resync.\n"
+" (see the failed-disk raidtab option.) You have been warned!\n"
+"\n"
+" [ If your array holds no data, or you have it all backed up, or if you\n"
+" know precisely what you are doing and you still want to proceed then use\n"
+" the --really-force (or -R) flag. ]\n"
+"\n");
 	return EXIT_FAILURE;
     }
 

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../embutils/mount.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Hardened mount to not crash when the directory was not found in /etc/fstab and
improved the tokenizing to strip white spaces, since the files are often
indented in tabular form.

  - Rene Rebe <rene@exactcode.de>

--- embutils-0.17/mount.c	2004-01-09 17:03:48.000000000 +0100
+++ embutils-0.17-fixed/mount.c	2005-02-09 12:34:56.222517672 +0100
@@ -142,12 +142,20 @@
  * isn't really portable
  */
 
-/* tokenizes the string when a space appears (not thread safe) */
+/* tokenizes the string when a space appears and strip leading ones
+   (not thread safe) */
 static char *spacetok(char *s) {
   static char *buffer=NULL;
+  char *tmp;
+
   if(s)
     buffer=s;
-  char *tmp=buffer;
+
+  /* skip leading spaces */
+  while(*buffer && isspace(*buffer))
+    ++buffer;
+
+  tmp=buffer;
   for(;*buffer;++buffer) {
     if(isspace(*buffer)) {
       *buffer++=0;
@@ -463,13 +470,18 @@
       if(fh) {
 	struct mntentry *mnt;
 	while((mnt=mnt_entry(fh)))
-	  if(!strcmp(mnt->dir,device)) {
+	  if(mnt->dir && !strcmp(mnt->dir,device)) {
 	    device=mnt->device;
 	    dir=mnt->dir;
 	    fs_type=mnt->fs_type;
 	    parse_options(mnt->opts,&flags,data+data_size,DATA_BUFFER_SIZE-data_size);
 	    break;
 	  }
+        if (!dir) {
+          __write2(device);
+          write(2," no found in /etc/fstab\n",24);
+          return 1;
+        }
       }
 #ifdef CLEANUP
       io_close(fh);

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/musl/socketcall.patch.x32
# Copyright (C) 2021 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License version 2 as used by the T2 SDE.
# --- T2-COPYRIGHT-NOTE-END ---

--- musl-1.2.2/src/internal/syscall.h.vanilla	2021-10-20 18:50:54.028222342 +0200
+++ musl-1.2.2/src/internal/syscall.h	2021-10-20 19:38:41.265108017 +0200
@@ -58,22 +58,20 @@
 #define __syscall_cp(...) __SYSCALL_DISP(__syscall_cp,__VA_ARGS__)
 #define syscall_cp(...) __syscall_ret(__syscall_cp(__VA_ARGS__))
 
-static inline long __alt_socketcall(int sys, int sock, int cp, long a, long b, long c, long d, long e, long f)
+static inline long __alt_socketcall(int sys, int sock, int cp, long long a, long long b, long long c, long long d, long long e, long long f)
 {
 	long r;
 	if (cp) r = __syscall_cp(sys, a, b, c, d, e, f);
 	else r = __syscall(sys, a, b, c, d, e, f);
 	if (r != -ENOSYS) return r;
 #ifdef SYS_socketcall
-	if (cp) r = __syscall_cp(SYS_socketcall, sock, ((long[6]){a, b, c, d, e, f}));
-	else r = __syscall(SYS_socketcall, sock, ((long[6]){a, b, c, d, e, f}));
+	if (cp) r = __syscall_cp(SYS_socketcall, sock, ((long long[6]){a, b, c, d, e, f}));
+	else r = __syscall(SYS_socketcall, sock, ((long long[6]){a, b, c, d, e, f}));
 #endif
 	return r;
 }
-#define __socketcall(nm, a, b, c, d, e, f) __alt_socketcall(SYS_##nm, __SC_##nm, 0, \
-	(long)(a), (long)(b), (long)(c), (long)(d), (long)(e), (long)(f))
-#define __socketcall_cp(nm, a, b, c, d, e, f) __alt_socketcall(SYS_##nm, __SC_##nm, 1, \
-	(long)(a), (long)(b), (long)(c), (long)(d), (long)(e), (long)(f))
+#define __socketcall(nm, a, b, c, d, e, f) __syscall(SYS_##nm, (a), (b), (c), (d), (e), (f))
+#define __socketcall_cp(nm, a, b, c, d, e, f) __syscall_cp(SYS_##nm, (a), (b), (c), (d), (e), (f))
 
 /* fixup legacy 16-bit junk */
 

# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/gcc/config-300.in
# ROCK Linux is Copyright (C) 1998 - 2004 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

if pkgcheck gcc X
then
  menu_begin MENU_COMPILER 'GCC Compiler Options'

	bool 'Building gcc 2.x package'   ROCKCFG_PKG_GCC_GCC2  0
	bool 'Building gcc 3.2.x package' ROCKCFG_PKG_GCC_GCC32 0
	bool 'Building gcc 3.3.x package' ROCKCFG_PKG_GCC_GCC33 1
	bool 'Building gcc 3.4.x package' ROCKCFG_PKG_GCC_GCC34 0

	l=""
	if [ $ROCKCFG_PKG_GCC_GCC2  = 1 ]; then pkgfork gcc gcc2;  l="$l gcc2";  fi
	if [ $ROCKCFG_PKG_GCC_GCC32 = 1 ]; then pkgfork gcc gcc32; l="$l gcc32"; fi
	if [ $ROCKCFG_PKG_GCC_GCC33 = 1 ]; then pkgfork gcc gcc33; l="$l gcc33"; fi
	if [ $ROCKCFG_PKG_GCC_GCC34 = 1 ]; then pkgfork gcc gcc34; l="$l gcc34"; fi
	pkgremove gcc

	d="none"
	if [ $ROCKCFG_PKG_GCC_GCC2  = 1 ]; then d="gcc2";  fi
	if [ $ROCKCFG_PKG_GCC_GCC34 = 1 ]; then d="gcc34"; fi
	if [ $ROCKCFG_PKG_GCC_GCC32 = 1 ]; then d="gcc32"; fi
	if [ $ROCKCFG_PKG_GCC_GCC33 = 1 ]; then d="gcc33"; fi

	k=""; for x in $l; do
		k="$k $x Use_${x}_as_standard_C_compiler"
	done
	choice ROCKCFG_DEFAULT_CC $d $k
	
	k=""; for x in $l; do
		k="$k $x Use_${x}_as_standard_Kernel_C_compiler"
	done
	choice ROCKCFG_DEFAULT_KCC $d $k
	
	k=""; for x in $l; do
		k="$k $x Use_${x}_as_standard_C++_compiler"
	done
	choice ROCKCFG_DEFAULT_CXX $d $k
	
	k=""; for x in $l; do
		k="$k $x Use_${x}_as_standard_Fortran_compiler"
	done
	choice ROCKCFG_DEFAULT_F77 $d $k

	k=""; for x in gcc2 gcc32 gcc33 gcc34; do
		if [ "$ROCKCFG_DEFAULT_CC" != "$x" ]; then
			if [ "$ROCKCFG_DEFAULT_CXX" != "$x" ]; then
				k="$k / gcc=$x / s/^\(..\).../\1---/;"
			else
				k="$k / gcc=$x / s/^\(..\)../\1--/;"
			fi
		fi
	done
	pkgfilter sed -e "$k"

	bool 'Use Stack-Smashing Protector when available' \
				ROCKCFG_PKG_GCC_STACKPRO 0
	%include package/*/*/subconfig-gcc.in
	
	if pkgcheck gcc=gcc2 X; then
		comment ' '
		comment '--- GCC 2.x options'
		bool 'Do not build CHILL compiler' \
				ROCKCFG_PKG_GCC2_NO_CHILL 0
		%include package/*/*/subconfig-gcc2.in
	fi
	if pkgcheck gcc=gcc32 X; then
		comment ' '
		comment '--- GCC 3.2.x options'
		bool 'Do not build JAVA compiler' \
				ROCKCFG_PKG_GCC32_NO_JAVA 0
		%include package/*/*/subconfig-gcc32.in
	fi
	if pkgcheck gcc=gcc33 X; then
		comment ' '
		comment '--- GCC 3.3.x options'
		bool 'Do not build JAVA compiler' \
				ROCKCFG_PKG_GCC33_NO_JAVA 0
		%include package/*/*/subconfig-gcc33.in
	fi
	if pkgcheck gcc=gcc34 X; then
		comment ' '
		comment '--- GCC 3.4.x options'
		bool 'Do not build JAVA compiler' \
				ROCKCFG_PKG_GCC34_NO_JAVA 0
		bool 'Do profiled bootstrap' \
				ROCKCFG_PKG_GCC34_PROFILED 1
		%include package/*/*/subconfig-gcc34.in
	fi

  menu_end
fi


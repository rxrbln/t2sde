# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/linux26/12-conf-hacks.patch
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

Set all unset options to module. Needed by the ROCK Linux kernel
configuration.

Initally written by Clifford Wold <clifford@clifford.at> and adapted
for various new 2.5/2.6 kernels by Rene Rebe <rene.rebe@gmx.net>.
 
--- ./scripts/kconfig/Makefile.orig	2003-10-25 15:44:56.000000000 -0300
+++ ./scripts/kconfig/Makefile	2003-10-25 23:06:06.000000000 -0300
@@ -23,7 +23,7 @@
 silentoldconfig: $(obj)/conf
 	$< -s arch/$(ARCH)/Kconfig
 
-.PHONY: randconfig allyesconfig allnoconfig allmodconfig defconfig
+.PHONY: randconfig allyesconfig allnoconfig allmodconfig no2modconfig defconfig
 
 randconfig: $(obj)/conf
 	$< -r arch/$(ARCH)/Kconfig
@@ -37,6 +37,9 @@
 allmodconfig: $(obj)/conf
 	$< -m arch/$(ARCH)/Kconfig
 
+no2modconfig: scripts/kconfig/conf
+	$< -M arch/$(ARCH)/Kconfig
+
 defconfig: $(obj)/conf
 	$< -d arch/$(ARCH)/Kconfig
 
@@ -51,6 +54,7 @@
 	@echo  '  gconfig	  - Update current config utilising a GTK based front-end'
 	@echo  '  defconfig	  - New config with default answer to all options'
 	@echo  '  allmodconfig	  - New config selecting modules when possible'
+	@echo  '  no2modconfig    - New config selecting modules for disabled options'
 	@echo  '  allyesconfig	  - New config where all options are accepted with yes'
 	@echo  '  allnoconfig	  - New minimal config'
 
Only in linux-2.6.0-test4-rock/scripts/kconfig: conf
diff -ru linux-2.6.0-test4/scripts/kconfig/conf.c linux-2.6.0-test4-rock/scripts/kconfig/conf.c
--- linux-2.6.0-test4/scripts/kconfig/conf.c	2003-08-23 01:59:45.000000000 +0200
+++ linux-2.6.0-test4-rock/scripts/kconfig/conf.c	2003-08-23 16:48:07.000000000 +0200
@@ -20,6 +20,7 @@
 	ask_all,
 	ask_new,
 	ask_silent,
+	ask_no2mod,
 	set_default,
 	set_yes,
 	set_mod,
@@ -81,6 +82,15 @@
 	}
 
 	switch (input_mode) {
+	case ask_no2mod:
+		if (type == S_TRISTATE &&
+		    sym_get_tristate_value(sym) == no) {
+			fprintf(stderr, "Setting %s to 'm'.\n", sym->name);
+			line[0] = 'm';
+			line[1] = '\n';
+			line[2] = 0;
+			break;
+		}
 	case ask_new:
 	case ask_silent:
 		if (sym_has_value(sym)) {
@@ -344,6 +354,7 @@
 				break;
 			}
 			check_stdin();
+		case ask_no2mod:
 		case ask_all:
 			fflush(stdout);
 			fgets(line, 128, stdin);
@@ -504,6 +515,9 @@
 		case 'm':
 			input_mode = set_mod;
 			break;
+		case 'M':
+			input_mode = ask_no2mod;
+			break;
 		case 'y':
 			input_mode = set_yes;
 			break;
@@ -543,6 +557,7 @@
 		}
 	case ask_all:
 	case ask_new:
+	case ask_no2mod:
 		conf_read(NULL);
 		break;
 	default:

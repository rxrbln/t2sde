# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../moneypenny/gcc41.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- ./src/hobit.h.orig	2006-02-04 10:40:46.000000000 +0100
+++ ./src/hobit.h	2006-03-15 17:45:09.000000000 +0100
@@ -952,7 +952,7 @@
   
   /** Returns the bankId BLZ
   */
-  QString HoBIT::getBankId();
+  QString getBankId();
   
   /** Returns the user from OpenHbci database.
   */
@@ -985,11 +985,11 @@
   
   /** Read property of AdminJobFactory m_AdminJobFactory. 
   */
-  AdminJobFactory * HoBIT::getAdminJobFactory()const;
+  AdminJobFactory * getAdminJobFactory()const;
   
   /** Read property of AccountJobFactory m_AccountJobFactory. 
   */
-  AccountJobFactory * HoBIT::getAccountJobFactory()const;
+  AccountJobFactory * getAccountJobFactory()const;
   
   /** returns the current HBCI mode */
   HBCI_MODE getHbciMode();
@@ -1003,13 +1003,13 @@
   void setCryptDir(const string & newVal);
   /** Read property of QString _CurrentAccount. 
   */
-  const QString& HoBIT::getCurrentAccount()const;
+  const QString& getCurrentAccount()const;
   /** Read property of QString _CurrentAccountName. 
   */
-  const QString& HoBIT::getCurrentAccountName()const;
+  const QString& getCurrentAccountName()const;
   /** Write property of QString _CurrentAccount. 
   */
-  void HoBIT::setCurrentAccount( const QString& _newVal);
+  void setCurrentAccount( const QString& _newVal);
   /** Returns temporary config data directory.
   */
   QString getConfigDataDir();
--- ./src/hobit_bank.h.orig	2006-02-04 10:40:46.000000000 +0100
+++ ./src/hobit_bank.h	2006-03-15 17:43:46.000000000 +0100
@@ -46,28 +46,28 @@
 
    /** Read property of QString BankId. 
    */
-   const QString& HoBIT_Bank::getBankId()const;
+   const QString& getBankId()const;
    /** Write property of QString BankId. 
    */
-   void HoBIT_Bank::setBankId( const QString& _newVal);
+   void setBankId( const QString& _newVal);
     /** Read property of QString _BankName. 
    */
-   const QString& HoBIT_Bank::getBankName()const;
+   const QString& getBankName()const;
    /** Write property of QString _BankName. 
    */
-   void HoBIT_Bank::setBankName( const QString& _newVal);
+   void setBankName( const QString& _newVal);
    /** Read property of QString _Location. 
    */
-   const QString& HoBIT_Bank::getLocation()const;
+   const QString& getLocation()const;
    /** Write property of QString _Location. 
    */
-   void HoBIT_Bank::setLocation( const QString& _newVal);
+   void setLocation( const QString& _newVal);
    /** Read property of QString _Server. 
    */
-   const QString& HoBIT_Bank::getServer()const;
+   const QString& getServer()const;
    /** Write property of QString _Server. 
    */
-   void HoBIT_Bank::setServer( const QString& _newVal);
+   void setServer( const QString& _newVal);
    /** Returns the HBCI version of the server
    */
    int getHBCIVersion();
--- ./src/hobit_connector.h.orig	2006-02-04 10:40:46.000000000 +0100
+++ ./src/hobit_connector.h	2006-03-15 17:42:50.000000000 +0100
@@ -57,22 +57,22 @@
 
   /** Read property of QString m_URL. 
   */
-  const QString& HoBIT_Connector::getUrl()const;
+  const QString& getUrl()const;
   /** Write property of QString m_URL. 
   */
-  void HoBIT_Connector::setUrl( const QString& _newVal);
+  void setUrl( const QString& _newVal);
   /** Read property of int m_Port. 
   */
-  const int& HoBIT_Connector::getPort()const;
+  const int& getPort()const;
   /** Write property of int m_Port. 
   */
-  void HoBIT_Connector::setPort( const int& _newVal);
+  void setPort( const int& _newVal);
   /** Read property of int _TimeOut. 
   */
-  const int& HoBIT_Connector::getTimeOut()const;
+  const int& getTimeOut()const;
   /** Write property of int _TimeOut. 
   */
-  void HoBIT_Connector::setTimeOut( const int& _newVal);
+  void setTimeOut( const int& _newVal);
   
   
   private:
--- ./src/hobit_interactor.h.orig	2006-02-04 10:40:46.000000000 +0100
+++ ./src/hobit_interactor.h	2006-03-15 17:41:59.000000000 +0100
@@ -142,11 +142,11 @@
 
   /** Read property of int _SecurityMode. 
   */
-  int  HoBIT_Interactor::getSecurityMode()const;
+  int  getSecurityMode()const;
   
 /** Write property of int _SecurityMode. 
   */
-  void HoBIT_Interactor::setSecurityMode( int _newVal);
+  void setSecurityMode( int _newVal);
   
 public slots:
     /** Callback function for_Timer. Sets  _Wait to false.
@@ -160,7 +160,7 @@
 
   /** input the pin code */
      bool _inputPin(string &pin, bool r);
-     char HoBIT_Interactor::readFromStdin();
+     char readFromStdin();
   
   /** Pointer on the hbci wrapper */
   HBCI_API *_api;
--- ./src/guimain.h.orig	2006-02-04 10:40:46.000000000 +0100
+++ ./src/guimain.h	2006-03-15 18:14:03.000000000 +0100
@@ -191,11 +191,11 @@
   
   /** Read property of QString _MountPoint. 
   */
-  const QString& GuiMain::getMountPoint()const;
+  const QString& getMountPoint()const;
   
   /** Write property of QString _MountPoint. 
   */
-  void GuiMain::setMountPoint( const QString& _newVal);
+  void setMountPoint( const QString& _newVal);
 
   /** shows the splash screen */
   void showSplashScreen();
--- ./src/guitransactionprinter.h.orig	2006-02-04 10:40:46.000000000 +0100
+++ ./src/guitransactionprinter.h	2006-03-15 18:18:36.000000000 +0100
@@ -66,7 +66,7 @@
   /**
   * prints the text on printer
   */
-  void GuiTransactionPrinter::slotPrint();
+  void slotPrint();
 
   /**
   * Updates the preview. When called for the first time, it creates the preview pixmap and then 
@@ -79,13 +79,13 @@
   /**
   * Read property of QString m_AccountName.
   */
-  const QString& GuiTransactionPrinter::getAccountName()const;
+  const QString& getAccountName()const;
 
   /**
   * Write property of QString m_AccountName. 
   * @param _newVal QString
   */
-  void GuiTransactionPrinter::setAccountName( const QString& _newVal);
+  void setAccountName( const QString& _newVal);
 
   /**
   * To be called when main data have changed
@@ -95,13 +95,13 @@
   /**
   * Read property of QPtrList<TransactionItem> m_TransactionsList.
   */
-  const QPtrList<TransactionItem>& GuiTransactionPrinter::getTransactionList()const;
+  const QPtrList<TransactionItem>& getTransactionList()const;
 
   /**
   * Write property of QPtrList<TransactionItem> m_TransactionsList. 
   * @param _newVal QPtrList<TransactionItem>
   */
-  void GuiTransactionPrinter::setTransactionList( const QPtrList<TransactionItem>& _newVal);
+  void setTransactionList( const QPtrList<TransactionItem>& _newVal);
   
   /** invalidates bitmapo
   */
--- ./src/guiinteractor.h.orig	2006-02-04 10:40:46.000000000 +0100
+++ ./src/guiinteractor.h	2006-03-15 18:39:18.000000000 +0100
@@ -136,10 +136,10 @@
 
   /** Read property of int _SecurityMode. 
   */
-  int  GuiInteractor::getSecurityMode()const;
+  int  getSecurityMode()const;
   /** Write property of int _SecurityMode. 
   */
-  void GuiInteractor::setSecurityMode( int _newVal);
+  void setSecurityMode( int _newVal);
   
 public slots:
     /** Callback function for_Timer. Sets  _Wait to false.
@@ -150,7 +150,7 @@
 
   /** input the pin code */
      bool _inputPin(string &pin, bool r);
-     char GuiInteractor::readFromStdin();
+     char readFromStdin();
   
   /** Pointer on the hbci wrapper */
 //  HBCI_API *_api;
--- ./src/crypttripledes.h.orig	2006-02-04 10:40:46.000000000 +0100
+++ ./src/crypttripledes.h	2006-03-15 18:58:05.000000000 +0100
@@ -67,10 +67,10 @@
   void setKey(const KeyTripleDes & key);
   /** Read property of DES_CIPHER_TYPE _DesCipherType. 
   */
-  const DES_CIPHER_TYPE& CryptTripleDes::getDesCipherType()const;
+  const DES_CIPHER_TYPE& getDesCipherType()const;
   /** Write property of DES_CIPHER_TYPE _DesCipherType. Sets Keylength too.
   */
-  void CryptTripleDes::setDesCipherType( const DES_CIPHER_TYPE& _newVal);
+  void setDesCipherType( const DES_CIPHER_TYPE& _newVal);
 
   /** Read property of int _Keylength. 
   */
--- moneypenny-1.2/src/transactionitem.h.orig	2006-05-27 17:20:41.000000000 +0200
+++ moneypenny-1.2/src/transactionitem.h	2006-09-21 13:39:32.000000000 +0200
@@ -39,25 +39,25 @@
   QString htmlTableRow(const QString & bgColor);
   /** Read property of QString _OurAccount. 
   */
-  QString TransactionItem::getOurAccountId()const;
+  QString getOurAccountId()const;
   /** Read property of QString _OurAccount. 
   */
-  QString TransactionItem::getOtherAccountId()const;
+  QString getOtherAccountId()const;
   /** Read property of QString _OtherBankCode. 
   */
-  QString TransactionItem::getOtherBankCode()const;
+  QString getOtherBankCode()const;
   /** Read property of QString _OurBankCode. 
   */
-  QString TransactionItem::getOurBankCode()const;
+  QString getOurBankCode()const;
   /** Read property of QString _OtherName. 
   */
-  QString TransactionItem::getOtherName()const;
+  QString getOtherName()const;
   /** Read property of QString _Text. 
   */
-  QString TransactionItem::getText()const;
+  QString getText()const;
   /** Read property of QString _ValutaDate. 
   */
-  QDate TransactionItem::getValutaDate()const;
+  QDate getValutaDate()const;
   /** Read property of QString _PurposeLine. First line is line 1
   */
   QString getPurposeLine(int line)const;
--- moneypenny-1.2/src/guifindmedium.h.orig	2006-05-27 17:20:41.000000000 +0200
+++ moneypenny-1.2/src/guifindmedium.h	2006-09-21 13:56:01.000000000 +0200
@@ -44,19 +44,19 @@
     
     /** Read property of StorageType m_Storage. 
     */
-    const StorageType& GuiFindMedium::getStorage()const;
+    const StorageType& getStorage()const;
     
     /** Write property of StorageType _Storage. 
     */
-    void GuiFindMedium::setStorage( const StorageType& _newVal);
+    void setStorage( const StorageType& _newVal);
 
     /** Read property of QString _CryptDirName. 
     */
-    const QString& GuiFindMedium::getCryptDirName()const;
+    const QString& getCryptDirName()const;
     
     /** Read property of QString _MountPoint. 
     */
-    const QString& GuiFindMedium::getMountPoint()const;
+    const QString& getMountPoint()const;
 
     /** Read Property of QString _BankName
     */
@@ -127,7 +127,7 @@
     
      /** Read property of bool _IsWritable. 
      */
-     const bool& GuiFindMedium::isWritable()const;
+     const bool& isWritable()const;
      
      /** Runs the specified process, spins the event loop and sete the _SkipTimer flag, so that timer events are not processed.
      */
@@ -137,7 +137,7 @@
      int buildBankList();
      /** Sets the new status text and resizes and repaints the Widget
      */  
-     void GuiFindMedium::setStatusText(const QString & newText, const QColor & newColor);     
+     void setStatusText(const QString & newText, const QColor & newColor);     
      /** Tries to write a testfile into _MountPoint dir. Returns true on success
      */
      bool canWriteTestFile();

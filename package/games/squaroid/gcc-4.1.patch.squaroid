# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../squaroid/gcc-4.1.patch.squaroid
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- squaroid-0.60.3/src/netclient.c.vanilla	2006-10-04 19:44:45.000000000 +0000
+++ squaroid-0.60.3/src/netclient.c	2006-10-04 19:45:39.000000000 +0000
@@ -864,7 +864,7 @@
 					game->options.timeout = atoi(data->list[2]);
 					game->movelimit.time_max = atoi(data->list[3]);
 					game->e_opponent->lag = atoi(data->list[4]);
-					GAME_PLUGIN(game) = sq_plugin_find_by_name(data->list[5]);
+					game->options.plugin = sq_plugin_find_by_name(data->list[5]);
 					chatroom_debugmessage(" INVITE [player=%d] [timeout=%d] "
 																"[time_max=%d]\n",
 																game->options.first_player,
--- squaroid-0.60.3/plugins/xhigh/xhigh.c.vanilla	2006-10-04 19:41:06.000000000 +0000
+++ squaroid-0.60.3/plugins/xhigh/xhigh.c	2006-10-04 19:44:24.000000000 +0000
@@ -38,7 +38,7 @@
 	GtkWidget *frame, *frame_box, *button;
 	
 	if (!XHIGH)
-		XHIGH = game_alloc(game, sizeof(XHighData));
+		this->data = game_alloc(game, sizeof(XHighData));
 	if (!XHIGH)
 		fprintf(stderr, "[XHIGH] FATAL ERROR: no plugindata\n");
 
@@ -107,7 +107,7 @@
 	else if (XHIGH->mode == MODE_16HIGH)
 		game_chatmessage(game, STARTOFF " Only squares with a value of \0035 16 or less \003 are counted\n");
 		
-	XHIGH = 0;
+	this->data = 0;
 	return PLUGIN_SUCCESS;
 }
 
@@ -149,9 +149,9 @@
 			return;
 		}
 	
-	XHIGH = game->plugindata;              /* restore the pointer! */
+	this->data = game->plugindata;              /* restore the pointer! */
 	if (XHIGH == 0)
-		XHIGH = game_alloc(game, sizeof(XHighData));
+		this->data = game_alloc(game, sizeof(XHighData));
 	
 	XHIGH->mode = atoi(data->list[1]);
 	fprintf(stderr, "[XHIGH] mode set to %d\n", XHIGH->mode);

# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/rene/kmatplot/inline-fix.patch
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

diff -ur kmatplot-0.4/kmatplot/widgets/qscontour.cpp kmatplot/widgets/qscontour.cpp
--- kmatplot-0.4/kmatplot/widgets/qscontour.cpp	2002-03-18 17:06:56.000000000 +0100
+++ kmatplot/widgets/qscontour.cpp	2002-04-11 18:04:26.000000000 +0200
@@ -427,7 +427,7 @@
 
 //-------------------------------------------------------------//
 
-inline int QSContour::find_level_greater_than( double value )
+int QSContour::find_level_greater_than( double value )
 // find first level > value or return level.number if all levels are lower then value
  {
   double *first_level      = &d->level.value[0];
diff -ur kmatplot-0.4/kmatplot/widgets/qscontour.h kmatplot/widgets/qscontour.h
--- kmatplot-0.4/kmatplot/widgets/qscontour.h	2002-03-12 00:59:49.000000000 +0100
+++ kmatplot/widgets/qscontour.h	2002-04-11 18:04:51.000000000 +0200
@@ -184,7 +184,7 @@
       				      QSPt3f *under_pts, int *under_npts,
       				      QSPt3f *cross_line = NULL, int *cross_npts = NULL );
 	inline double distance( const QSPt2f& p1, const QSPt2f& p2 );
- 	inline int find_level_greater_than( double value );
+ 	int find_level_greater_than( double value );
 	void flush_rectangle_buffer();
 	bool draw_rectangle( const QSPt3f pts[4] );
    };

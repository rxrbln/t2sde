--- kdebindings-3.2.1/dcoppython/lib/pydcop.py.orig	2004-04-09 14:22:19.645982533 +0100
+++ kdebindings-3.2.1/dcoppython/lib/pydcop.py	2004-04-09 14:23:00.486753945 +0100
@@ -32,10 +32,10 @@
 	return pcop.disconnect_dcop_signal(sender,senderObj,signal,receiverObj,slot)
 
 class DCOPApplication(object):
-        def __init__( self, name ):
-                self.name = name
+	def __init__( self, name ):
+		self.name = name
 
-        def __getattr__( self, item ):
+	def __getattr__( self, item ):
 		if item == "__repr__":
 			return object.__repr__
 		if item == "__str__":
@@ -44,15 +44,15 @@
 			return object.__call__
 		if item == "_objects_":
 			return pcop.obj_list(self.name)
-                return DCOPObject( self.name, item )
+		return DCOPObject( self.name, item )
 
 	def _object_(self, object):
 		return DCOPObject( self.name, object )
 
 class DCOPObject(object):
-        def __init__( self, appname, name ):
-                self.appname = appname
-                self.name = name
+	def __init__( self, appname, name ):
+		self.appname = appname
+		self.name = name
 
 	def __repr__( self ):
 		return "DCOPObject(%s,%s)" % ( self.appname, self.name )
@@ -60,7 +60,7 @@
 	def __str__( self ):
 		return "DCOPObject(%s,%s)" % ( self.appname, self.name )
 
-        def __getattr__( self, item ):
+	def __getattr__( self, item ):
 		if item == "__repr__":
 			return object.__repr__
 		if item == "__str__":
@@ -69,16 +69,16 @@
 			return object.__call__
 		if item == "_methods_":
 			return pcop.method_list( self.appname, self.name )
-                return DCOPMethod( self.appname, self.name, item )
+		return DCOPMethod( self.appname, self.name, item )
 
 	def _method_(self, method):
 		return DCOPMethod( self.appname, self.name, method )
 
 class DCOPMethod(object):
-        def __init__( self, appname, objname, name ):
-                self.appname = appname
-                self.objname = objname
-                self.name = name
+	def __init__( self, appname, objname, name ):
+		self.appname = appname
+		self.objname = objname
+		self.name = name
 
 	def __repr__( self ):
 		return "DCOPMethod(%s,%s,%s)" % ( self.appname, self.objname, self.name )
@@ -86,7 +86,7 @@
 	def __str__( self ):
 		return "DCOPMethod(%s,%s,%s)" % ( self.appname, self.objname, self.name )
 
-        def __call__( self, *args ):
+	def __call__( self, *args ):
 		return pcop.dcop_call( self.appname, self.objname, self.name, args )
 
 class DCOPServer(object):

# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/mnemoc/vquota/quota-tools-3.08-ctx16-v0.35.diff
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

diff -NurBP --minimal quota-tools/Makefile.in quota-tools-context-0.35/Makefile.in
--- quota-tools/Makefile.in	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/Makefile.in	Tue Feb 11 04:21:11 2003
@@ -1,6 +1,6 @@
 PROGS         = quotacheck quotaon quota quot repquota warnquota quotastats xqmstats edquota setquota convertquota rpc.rquotad 
 SOURCES       = bylabel.c common.c convertquota.c edquota.c pot.c quot.c quota.c quotacheck.c quotacheck_v1.c quotacheck_v2.c quotaio.c quotaio_rpc.c quotaio_v1.c quotaio_v2.c quotaio_xfs.c quotaio_generic.c quotaon.c quotaon_xfs.c quotaops.c quotastats.c quotasys.c repquota.c rquota_client.c rquota_server.c rquota_svc.c setquota.c warnquota.c xqmstats.c svc_socket.c
-VERSIONDEF    = -DQUOTA_VERSION=\"3.08\"
+VERSIONDEF    = -DQUOTA_VERSION=\"3.08x\"
 CFLAGS        = @CFLAGS@ @EXT2_DIRECT@ -D_GNU_SOURCE -Wall -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 $(VERSIONDEF)
 EXT2LIBS      = @EXT2LIBS@
 RPCSRC        = rquota.h rquota_xdr.c rquota_clnt.c
diff -NurBP --minimal quota-tools/edquota.c quota-tools-context-0.35/edquota.c
--- quota-tools/edquota.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/edquota.c	Tue Feb 11 04:34:30 2003
@@ -64,17 +64,19 @@
 void usage(void)
 {
 #if defined(RPC_SETQUOTA)
-	errstr("%s%s%s",
+	errstr("%s%s%s%s%s",
 		_("Usage:\tedquota [-r] [-u] [-F formatname] [-p username] [-f filesystem] username ...\n"),
 		_("\tedquota [-r] -g [-F formatname] [-p groupname] [-f filesystem] groupname ...\n"),
-		_("\tedquota [-r] [-u|g] [-F formatname] [-f filesystem] -t\n"),
-		_("\tedquota [-r] [-u|g] [-F formatname] [-f filesystem] -T username|groupname ...\n"));
+		_("\tedquota [-r] -x [-F formatname] [-p context] [-f filesystem] context ...\n"),
+		_("\tedquota [-r] [-u|-g|-x] [-F formatname] [-f filesystem] -t\n"),
+		_("\tedquota [-r] [-u|-g] [-F formatname] [-f filesystem] -T username|groupname ...\n"));
 #else
-	errstr("%s%s%s",
+	errstr("%s%s%s%s%s",
 		_("Usage:\tedquota [-u] [-F formatname] [-p username] [-f filesystem] username ...\n"),
 		_("\tedquota -g [-F formatname] [-p groupname] [-f filesystem] groupname ...\n"),
-		_("\tedquota [-u|g] [-F formatname] [-f filesystem] -t\n"),
-		_("\tedquota [-u|g] [-F formatname] [-f filesystem] -T username|groupname ...\n"));
+		_("\tedquota -x [-F formatname] [-p context] [-f filesystem] context ...\n"),
+		_("\tedquota [-u|-g|-x] [-F formatname] [-f filesystem] -t\n"),
+		_("\tedquota [-u|-g] [-F formatname] [-f filesystem] -T username|groupname ...\n"));
 #endif
 	fprintf(stderr, _("Bugs to: %s\n"), MY_EMAIL);
 	exit(1);
@@ -99,9 +101,9 @@
 	dirname = NULL;
 	quotatype = USRQUOTA;
 #if defined(RPC_SETQUOTA)
-	while ((ret = getopt(argc, argv, "ugrntTVp:F:f:")) != -1) {
+	while ((ret = getopt(argc, argv, "ugxrntTVp:F:f:")) != -1) {
 #else
-	while ((ret = getopt(argc, argv, "ugtTVp:F:f:")) != -1) {
+	while ((ret = getopt(argc, argv, "ugxtTVp:F:f:")) != -1) {
 #endif
 		switch (ret) {
 		  case 'p':
@@ -120,6 +122,9 @@
 		  case 'u':
 			  quotatype = USRQUOTA;
 			  break;
+		  case 'x':
+			  quotatype = CTXQUOTA;
+			  break;
 		  case 't':
 			  tflag++;
 			  break;
diff -NurBP --minimal quota-tools/mntopt.h quota-tools-context-0.35/mntopt.h
--- quota-tools/mntopt.h	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/mntopt.h	Tue Feb 11 04:18:41 2003
@@ -17,6 +17,7 @@
 #define MNTOPT_QUOTA		"quota"	/* enforce user quota */
 #define MNTOPT_USRQUOTA		"usrquota"	/* enforce user quota */
 #define MNTOPT_GRPQUOTA		"grpquota"	/* enforce group quota */
+#define MNTOPT_CTXQUOTA		"ctxquota"	/* enforce context quota */
 #define MNTOPT_RSQUASH		"rsquash"	/* root as ordinary user */
 #define MNTOPT_BIND		"bind"		/* binded mount */
 #define MNTOPT_LOOP		"loop"		/* loopback mount */
diff -NurBP --minimal quota-tools/quot.c quota-tools-context-0.35/quot.c
--- quota-tools/quot.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quot.c	Tue Feb 11 04:18:41 2003
@@ -66,6 +66,7 @@
 static int fflag;
 static int gflag;
 static int uflag;
+static int xflag;
 static int vflag;
 static time_t now;
 char *progname;
@@ -77,7 +78,7 @@
 
 static void usage(void)
 {
-	errstr(_("Usage: %s [-acfugvV] [filesystem...]\n"), progname);
+	errstr(_("Usage: %s [-acfugxvV] [filesystem...]\n"), progname);
 	exit(1);
 }
 
@@ -88,7 +89,7 @@
 	now = time(0);
 	progname = basename(argv[0]);
 
-	while ((c = getopt(argc, argv, "acfguvV")) != -1) {
+	while ((c = getopt(argc, argv, "acfguxvV")) != -1) {
 		switch (c) {
 		  case 'a':
 			  aflag++;
@@ -105,6 +106,9 @@
 		  case 'u':
 			  uflag++;
 			  break;
+		  case 'x':
+			  xflag++;
+			  break;
 		  case 'v':
 			  vflag++;
 			  break;
@@ -117,7 +121,7 @@
 	}
 	if ((aflag && optind != argc) || (!aflag && optind == argc))
 		usage();
-	if (!uflag && !gflag)
+	if (!uflag && !gflag && !xflag)
 		uflag++;
 	if (init_mounts_scan(aflag ? 0 : argc - optind, argv + optind, 0) < 0)
 		return 1;
@@ -141,8 +145,9 @@
 
 		if (doit) {
 			if (cflag) creport(mntp->mnt_fsname, mntp->mnt_dir);
-			if (!cflag && uflag) report(mntp->mnt_fsname, mntp->mnt_dir, 0);
-			if (!cflag && gflag) report(mntp->mnt_fsname, mntp->mnt_dir, 1);
+			if (!cflag && uflag) report(mntp->mnt_fsname, mntp->mnt_dir, USRQUOTA);
+			if (!cflag && gflag) report(mntp->mnt_fsname, mntp->mnt_dir, GRPQUOTA);
+			if (!cflag && xflag) report(mntp->mnt_fsname, mntp->mnt_dir, CTXQUOTA);
 		}
 	}
 }
@@ -182,7 +187,8 @@
 {
 	du_t *dp;
 
-	printf(_("%s (%s) %s:\n"), file, fsdir, type? "groups" : "users");
+	printf(_("%s (%s) %s:\n"), file, fsdir, 
+	    (type == USRQUOTA)?"users":((type == GRPQUOTA)?"groups":"context"));
 	qsort(du[type], ndu[type], sizeof(du[type][0]), (int (*)(const void *, const void *))qcmp);
 	for (dp = du[type]; dp < &du[type][ndu[type]]; dp++) {
 		char *cp;
@@ -211,19 +217,24 @@
 	struct group  *gr;
 	static idcache_t idc;
 
-	if (type) {	/* /etc/group */
+	if (type == USRQUOTA) {	    	/* /etc/passwd */
+		if ((pw = byid? getpwuid(id) : getpwent()) == NULL)
+			return NULL;
+		idc.id = pw->pw_uid;
+		strncpy(idc.name, pw->pw_name, UT_NAMESIZE);
+		return &idc;
+	} 
+	else if (type == GRPQUOTA) {	/* /etc/group */
 		if ((gr = byid? getgrgid(id) : getgrent()) == NULL)
 			return NULL;
 		idc.id = gr->gr_gid;
 		strncpy(idc.name, gr->gr_name, UT_NAMESIZE);
 		return &idc;
 	}
-	/* /etc/passwd */
-	if ((pw = byid? getpwuid(id) : getpwent()) == NULL)
+	else {
 		return NULL;
-	idc.id = pw->pw_uid;
-	strncpy(idc.name, pw->pw_name, UT_NAMESIZE);
-	return &idc;
+		// fixme OTHERQUOTA
+	}
 }
 
 static char *idname(__uint32_t id, int type)
diff -NurBP --minimal quota-tools/quota.c quota-tools-context-0.35/quota.c
--- quota-tools/quota.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quota.c	Tue Feb 11 04:18:41 2003
@@ -64,9 +64,10 @@
 #define FL_VERBOSE 2
 #define FL_USER 4
 #define FL_GROUP 8
-#define FL_SMARTSIZE 16
+#define FL_CONTEXT 16
 #define FL_LOCALONLY 32
 #define FL_QUIETREFUSE 64
+#define FL_SMARTSIZE 128
 
 int flags, fmt = -1;
 char *progname;
@@ -84,7 +85,7 @@
 	gettexton();
 	progname = basename(argv[0]);
 
-	while ((ret = getopt(argc, argv, "guqvsVlQF:")) != -1) {
+	while ((ret = getopt(argc, argv, "guxqvsVlQF:")) != -1) {
 		switch (ret) {
 		  case 'g':
 			  flags |= FL_GROUP;
@@ -92,6 +93,9 @@
 		  case 'u':
 			  flags |= FL_USER;
 			  break;
+		  case 'x':
+			  flags |= FL_CONTEXT;
+			  break;
 		  case 'q':
 			  flags |= FL_QUIET;
 			  break;
@@ -121,7 +125,7 @@
 	argc -= optind;
 	argv += optind;
 
-	if (!(flags & FL_USER) && !(flags & FL_GROUP))
+	if (!(flags & FL_USER) && !(flags & FL_GROUP) && !(flags & FL_CONTEXT))
 		flags |= FL_USER;
 	init_kernel_interface();
 
@@ -136,10 +140,12 @@
 			for (i = 0; i < ngroups; i++)
 				ret |= showquotas(GRPQUOTA, gidset[i]);
 		}
+		if (flags & FL_CONTEXT)
+			ret |= showquotas(CTXQUOTA, 0); // fixme CONTEXT
 		exit(ret);
 	}
 
-	if ((flags & FL_USER) && (flags & FL_GROUP))
+	if ((flags & FL_USER) && (flags & FL_GROUP) && (flags & FL_CONTEXT))
 		usage();
 
 	if (flags & FL_USER)
@@ -148,15 +154,20 @@
 	else if (flags & FL_GROUP)
 		for (; argc > 0; argc--, argv++)
 			ret |= showquotas(GRPQUOTA, group2gid(*argv));
+	else if (flags & FL_CONTEXT)
+		for (; argc > 0; argc--, argv++)
+			ret |= showquotas(CTXQUOTA, other2xid(*argv));
+  	// fixme CONTEXT
 	return ret;
 }
 
 void usage(void)
 {
-	errstr( "%s%s%s",
+	errstr( "%s%s%s%s",
 		_("Usage: quota [-guqvs] [-l | -Q] [-F quotaformat]\n"),
 		_("\tquota [-qvs] [-l | -Q] [-F quotaformat] -u username ...\n"),
-		_("\tquota [-qvs] [-l | -Q] [-F quotaformat] -g groupname ...\n"));
+		_("\tquota [-qvs] [-l | -Q] [-F quotaformat] -g groupname ...\n"),
+		_("\tquota [-qvs] [-l | -Q] [-F quotaformat] -x context ...\n"));
 	fprintf(stderr, _("Bugs to: %s\n"), MY_EMAIL);
 	exit(1);
 }
diff -NurBP --minimal quota-tools/quota.h quota-tools-context-0.35/quota.h
--- quota-tools/quota.h	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quota.h	Tue Feb 11 04:18:41 2003
@@ -6,9 +6,10 @@
 typedef u_int32_t qid_t;	/* Type in which we store ids in memory */
 typedef u_int64_t qsize_t;	/* Type in which we store size limitations */
 
-#define MAXQUOTAS 2
+#define MAXQUOTAS 3
 #define USRQUOTA  0		/* element used for user quotas */
 #define GRPQUOTA  1		/* element used for group quotas */
+#define CTXQUOTA  2		/* element used for context quotas */
 
 /*
  * Definitions for the default names of the quotas files.
@@ -16,6 +17,7 @@
 #define INITQFNAMES { \
 	"user",    /* USRQUOTA */ \
 	"group",   /* GRPQUOTA */ \
+	"context", /* CTXQUOTA */ \
 	"undefined", \
 }
 
@@ -24,7 +26,8 @@
  */
 #define INITQMAGICS {\
 	0xd9c01f11,	/* USRQUOTA */\
-	0xd9c01927	/* GRPQUOTA */\
+	0xd9c01927,	/* GRPQUOTA */\
+	0xd9c0face	/* CTXQUOTA */\
 }
 
 /* Size of blocks in which are counted size limits in generic utility parts */
diff -NurBP --minimal quota-tools/quotacheck.c quota-tools-context-0.35/quotacheck.c
--- quota-tools/quotacheck.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quotacheck.c	Tue Feb 11 04:18:41 2003
@@ -63,7 +63,8 @@
 dev_t cur_dev;			/* Device we are working on */
 int files_done, dirs_done;
 int flags, fmt = -1, cfmt;	/* Options from command line; Quota format to use spec. by user; Actual format to check */
-int uwant, gwant, ucheck, gcheck;	/* Does user want to check user/group quota; Do we check user/group quota? */
+int uwant, gwant, xwant,    	/* Does user want to check user/group/context quota */
+    ucheck, gcheck, xcheck;	/* Do we check user/group/context quota? */
 char *mntpoint;			/* Mountpoint to check */
 char *progname;
 struct util_dqinfo old_info[MAXQUOTAS];	/* Loaded infos */
@@ -188,9 +189,13 @@
 	struct dquot *lptr;
 
 	if (type == USRQUOTA)
-		wanted = i_uid;
+		wanted = i_uid & ((1 << 16) - 1);
+	else if (type == GRPQUOTA)
+		wanted = i_gid & ((1 << 16) - 1);
+    	else if (type == CTXQUOTA)
+	    	wanted = i_uid >> 16;
 	else
-		wanted = i_gid;
+	    	wanted = 0;
 
 	if ((lptr = lookup_dquot(wanted, type)) == NODQUOT)
 		lptr = add_dquot(wanted, type);
@@ -281,7 +286,7 @@
 
 static void usage(void)
 {
-	printf(_("Utility for checking and repairing quota files.\n%s [-gucfinvdmMR] [-F <quota-format>] filesystem|-a\n"), progname);
+	printf(_("Utility for checking and repairing quota files.\n%s [-guxcfinvdmMR] [-F <quota-format>] filesystem|-a\n"), progname);
 	printf(_("Bugs to %s\n"), MY_EMAIL);
 	exit(1);
 }
@@ -290,7 +295,7 @@
 {
 	int ret;
 
-	while ((ret = getopt(argcnt, argstr, "VhbcvugidnfF:mMRa")) != -1) {
+	while ((ret = getopt(argcnt, argstr, "VhbcvugxidnfF:mMRa")) != -1) {
   	        switch (ret) {
 		  case 'b':
   		          flags |= FL_BACKUPS;
@@ -301,6 +306,9 @@
 		  case 'u':
 			  uwant = 1;
 			  break;
+		  case 'x':
+			  xwant = 1;
+			  break;
 		  case 'd':
 			  flags |= FL_DEBUG;
 			  setlinebuf(stderr);
@@ -343,7 +351,7 @@
 			usage();
 		}
 	}
-	if (!(uwant | gwant))
+	if (!(uwant | gwant | xwant))
 		uwant = 1;
 	if ((argcnt == optind && !(flags & FL_ALL)) || (argcnt > optind && flags & FL_ALL)) {
 		fputs(_("Bad number of arguments.\n"), stderr);
@@ -415,6 +423,10 @@
 				add_to_quota(GRPQUOTA, i_num, uid, gid,
 					     inode.i_mode, inode.i_links_count,
 					     inode.i_blocks << 9);
+			if (xcheck)
+				add_to_quota(CTXQUOTA, i_num, uid, gid,
+					     inode.i_mode, inode.i_links_count,
+					     inode.i_blocks << 9);
 			if (S_ISDIR(inode.i_mode))
 				dirs_done++;
 			else
@@ -468,6 +480,9 @@
 		if (gcheck)
 			add_to_quota(GRPQUOTA, st.st_ino, st.st_uid, st.st_gid, st.st_mode,
 				     st.st_nlink, qspace);
+		if (xcheck)
+			add_to_quota(CTXQUOTA, st.st_ino, st.st_uid, st.st_gid, st.st_mode,
+				     st.st_nlink, qspace);
 
 		if (S_ISDIR(st.st_mode)) {
 			if (st.st_dev != cur_dev)
@@ -760,7 +775,14 @@
 		else
 			gcheck = 0;
 	}
-	if (!ucheck && !gcheck)	/* Nothing to check? */
+	if (xcheck) {
+		if (process_file(mnt, CTXQUOTA) >= 0)
+			add_to_quota(CTXQUOTA, st.st_ino, st.st_uid, st.st_gid, st.st_mode,
+				     st.st_nlink, qspace);
+		else
+			xcheck = 0;
+	}
+	if (!ucheck && !gcheck && !xcheck)	/* Nothing to check? */
 		return;
 	if (!(flags & FL_NOREMOUNT)) {
 		/* Now we try to remount fs read-only to prevent races when scanning filesystem */
@@ -811,6 +833,8 @@
 		dump_to_file(mnt, USRQUOTA);
 	if (gcheck)
 		dump_to_file(mnt, GRPQUOTA);
+	if (xcheck)
+		dump_to_file(mnt, CTXQUOTA);
 out:
 	remove_list();
 }
@@ -818,7 +842,7 @@
 /* Detect quota format from filename of present files */
 static int detect_filename_format(struct mntent *mnt, int type)
 {
-	char *option;
+	char *option = NULL;
 	struct stat statbuf;
 	char namebuf[PATH_MAX];
 
@@ -828,10 +852,14 @@
 		else if ((option = hasmntopt(mnt, MNTOPT_QUOTA)))
 			option += strlen(MNTOPT_QUOTA);
 	}
-	else {
+	else if (type == GRPQUOTA) {
 		if ((option = hasmntopt(mnt, MNTOPT_GRPQUOTA)))
 			option += strlen(MNTOPT_GRPQUOTA);
 	}
+	else if (type == CTXQUOTA) {
+		if ((option = hasmntopt(mnt, MNTOPT_CTXQUOTA)))
+			option += strlen(MNTOPT_CTXQUOTA);
+	}
 	if (!option)
 		die(2, _("Can't find quota option on filesystem %s with quotas!\n"), mnt->mnt_dir);
 	if (*option == '=')	/* If the file name is specified we can't detect quota format from it... */
@@ -875,10 +903,21 @@
 			gcheck = 1;
 		else
 			gcheck = 0;
-		if (!ucheck && !gcheck)
+		if (xwant && hasquota(mnt, CTXQUOTA))
+			xcheck = 1;
+		else
+			xcheck = 0;
+		if (!ucheck && !gcheck && !xcheck)
 			continue;
 		if (cfmt == -1) {
-			if ((cfmt = detect_filename_format(mnt, ucheck ? USRQUOTA : GRPQUOTA)) == -1) {
+		    	int type = 0;
+			if (ucheck) 
+			    	type = USRQUOTA;
+			else if (gcheck)
+			    	type = GRPQUOTA;
+			else if (xcheck)
+			    	type = CTXQUOTA;
+			if ((cfmt = detect_filename_format(mnt, type)) == -1) {
 				errstr(_("Cannot guess format from filename on %s. Please specify format on commandline.\n"),
 					mnt->mnt_fsname);
 				continue;
diff -NurBP --minimal quota-tools/quotaio.h quota-tools-context-0.35/quotaio.h
--- quota-tools/quotaio.h	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quotaio.h	Tue Feb 11 04:18:41 2003
@@ -21,6 +21,7 @@
 /* Latest known versions */
 #define INITKNOWNVERSIONS {\
 	0,\
+	0,\
 	0\
 }
 
diff -NurBP --minimal quota-tools/quotaio_v2.h quota-tools-context-0.35/quotaio_v2.h
--- quota-tools/quotaio_v2.h	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quotaio_v2.h	Tue Feb 11 04:18:41 2003
@@ -18,7 +18,7 @@
 #define V2_DQSTRINBLK	((V2_DQBLKSIZE - sizeof(struct v2_disk_dqdbheader)) / sizeof(struct v2_disk_dqblk))	/* Number of entries in one blocks */
 #define V2_GETIDINDEX(id, depth) (((id) >> ((V2_DQTREEDEPTH-(depth)-1)*8)) & 0xff)
 #define V2_GETENTRIES(buf) ((struct v2_disk_dqblk *)(((char *)(buf)) + sizeof(struct v2_disk_dqdbheader)))
-#define INIT_V2_VERSIONS { 0, 0}
+#define INIT_V2_VERSIONS { 0, 0, 0 }
 
 struct v2_disk_dqheader {
 	u_int32_t dqh_magic;	/* Magic number identifying file */
diff -NurBP --minimal quota-tools/quotaio_xfs.c quota-tools-context-0.35/quotaio_xfs.c
--- quota-tools/quotaio_xfs.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quotaio_xfs.c	Tue Feb 11 04:18:41 2003
@@ -23,6 +23,7 @@
 			(h)->qh_info.u.xfs_mdqi.qs_flags & XFS_QUOTA_UDQ_ACCT)
 #define XFS_GRPQUOTA(h)	((h)->qh_type == GRPQUOTA && \
 			(h)->qh_info.u.xfs_mdqi.qs_flags & XFS_QUOTA_GDQ_ACCT)
+// fixme OTHERQUOTA
 
 static int xfs_init_io(struct quota_handle *h);
 static int xfs_write_info(struct quota_handle *h);
@@ -97,7 +98,7 @@
 	struct xfs_kern_dqblk xdqblk;
 	int qcmd;
 
-	if (!XFS_USRQUOTA(h) && !XFS_GRPQUOTA(h))
+	if (!XFS_USRQUOTA(h) && !XFS_GRPQUOTA(h))   // fixme OTHERQUOTA
 		return 0;
 
 	memset(&xdqblk, 0, sizeof(struct xfs_kern_dqblk));
@@ -123,7 +124,7 @@
 	dquot->dq_id = id;
 	dquot->dq_h = h;
 
-	if (!XFS_USRQUOTA(h) && !XFS_GRPQUOTA(h))
+	if (!XFS_USRQUOTA(h) && !XFS_GRPQUOTA(h))   // fixme OTHERQUOTA
 		return dquot;
 
 	qcmd = QCMD(Q_XFS_GETQUOTA, h->qh_type);
@@ -146,7 +147,7 @@
 	qid_t id = dquot->dq_id;
 	int qcmd;
 
-	if (!XFS_USRQUOTA(h) && !XFS_GRPQUOTA(h))
+	if (!XFS_USRQUOTA(h) && !XFS_GRPQUOTA(h))   // fixme OTHERQUOTA
 		return 0;
 
 	xfs_util2kerndqblk(&xdqblk, &dquot->dq_dqb);
@@ -193,12 +194,12 @@
 	struct xfs_kern_dqblk d;
 	int rd = 0;
 
-	if (!XFS_USRQUOTA(h) && !XFS_GRPQUOTA(h))
+	if (!XFS_USRQUOTA(h) && !XFS_GRPQUOTA(h))   // fixme OTHERQUOTA
 		return rd;
 
 	dq = get_empty_dquot();
 	dq->dq_h = h;
-	if (h->qh_type == USRQUOTA) {
+	if (h->qh_type == USRQUOTA) {	    	/* USRQUOTA */
 		struct passwd *usr;
 
 		setpwent();
@@ -210,7 +211,7 @@
 		}
 		endpwent();
 	}
-	else {			/* GRPQUOTA */
+	else if (h->qh_type == USRQUOTA) {	/* GRPQUOTA */
 		struct group *grp;
 
 		setgrent();
@@ -222,6 +223,9 @@
 		}
 		endgrent();
 	}
+	else {
+	    	// fixme OTHERQUOTA
+	}
 
 	free(dq);
 	return rd;
@@ -242,14 +246,17 @@
 	printf(_("*** Status for %s quotas on device %s\n"), type2name(h->qh_type), h->qh_quotadev);
 
 #define XQM_ON(flag) ((info->qs_flags & (flag)) ? _("ON") : _("OFF"))
-	if (h->qh_type == USRQUOTA) {
+	if (h->qh_type == USRQUOTA) {	    	/* USRQUOTA */
 		printf(_("Accounting: %s; Enforcement: %s\n"),
 		       XQM_ON(XFS_QUOTA_UDQ_ACCT), XQM_ON(XFS_QUOTA_UDQ_ENFD));
 	}
-	else {			/* qh_type == USRQUOTA */
+	else if (h->qh_type == GRPQUOTA) {	/* GRPQUOTA */
 		printf(_("Accounting: %s; Enforcement: %s\n"),
 		       XQM_ON(XFS_QUOTA_GDQ_ACCT), XQM_ON(XFS_QUOTA_GDQ_ENFD));
 	}
+	else {
+	    	// fixme OTHERQUOTA
+	}
 #undef XQM_ON
 
 	/*
@@ -258,19 +265,22 @@
 	 */
 #define XQM_ONDISK(flag) ((sbflags & (flag)) ? _("ON") : _("OFF"))
 	if ((sbflags = (info->qs_flags & 0xff00) >> 8) != 0) {
-		if (h->qh_type == USRQUOTA) {
+		if (h->qh_type == USRQUOTA) {	    	/* USRQUOTA */
 			printf(_("Accounting [ondisk]: %s; Enforcement [ondisk]: %s\n"),
 			       XQM_ONDISK(XFS_QUOTA_UDQ_ACCT), XQM_ONDISK(XFS_QUOTA_UDQ_ENFD));
 		}
-		else {		/* qh_type == USRQUOTA */
+		else if (h->qh_type == GRPQUOTA) {  	/* GRPQUOTA */
 			printf(_("Accounting [ondisk]: %s; Enforcement [ondisk]: %s\n"),
 			       XQM_ONDISK(XFS_QUOTA_GDQ_ACCT), XQM_ONDISK(XFS_QUOTA_GDQ_ENFD));
 		}
+		else {
+		    	// fixme OTHERQUOTA
+		}
 #undef XQM_ONDISK
 	}
 
 	/* user and group quota file status information */
-	if (h->qh_type == USRQUOTA) {
+	if (h->qh_type == USRQUOTA) {	    	/* USRQUOTA */
 		if (info->qs_uquota.qfs_ino == -1 || info->qs_uquota.qfs_ino == 0)
 			printf(_("Inode: none\n"));
 		else
@@ -279,7 +289,7 @@
 			       (unsigned long long)info->qs_uquota.qfs_nblks,
 			       info->qs_uquota.qfs_nextents);
 	}
-	else {			/* qh_type == GRPQUOTA */
+	else if (h->qh_type == USRQUOTA) {	/* GRPQUOTA */
 		if (info->qs_gquota.qfs_ino == -1)
 			printf(_("Inode: none\n"));
 		else
@@ -288,5 +298,8 @@
 			       (unsigned long long)info->qs_gquota.qfs_nblks,
 			       info->qs_gquota.qfs_nextents);
 	}
+	else {
+	    	// fixme OTHERQUOTA
+	}
 	return 0;
 }
diff -NurBP --minimal quota-tools/quotaon.c quota-tools-context-0.35/quotaon.c
--- quota-tools/quotaon.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quotaon.c	Tue Feb 11 04:18:41 2003
@@ -51,10 +51,11 @@
 
 #define FL_USER 1
 #define FL_GROUP 2
-#define FL_VERBOSE 4
+#define FL_CONTEXT 4
 #define FL_ALL 8
 #define FL_STAT 16
 #define FL_OFF 32
+#define FL_VERBOSE 64
 
 int flags, fmt = -1;
 char *progname;
@@ -64,7 +65,7 @@
 
 static void usage(void)
 {
-	errstr(_("Usage:\n\t%s [-guvp] [-F quotaformat] [-x state] -a\n\t%s [-guvp] [-F quotaformat] [-x state] filesys ...\n"), progname, progname);
+	errstr(_("Usage:\n\t%s [-guxvp] [-F quotaformat] [-X state] -a\n\t%s [-guvp] [-F quotaformat] [-x state] filesys ...\n"), progname, progname);
 	exit(1);
 }
 
@@ -72,7 +73,7 @@
 {
 	int c;
 
-	while ((c = getopt(argcnt, argstr, "afvugpx:VF:")) != -1) {
+	while ((c = getopt(argcnt, argstr, "afvugxpX:VF:")) != -1) {
 		switch (c) {
 		  case 'a':
 			  flags |= FL_ALL;
@@ -86,10 +87,13 @@
 		  case 'u':
 			  flags |= FL_USER;
 			  break;
+		  case 'x':
+			  flags |= FL_CONTEXT;
+			  break;
 		  case 'v':
 			  flags |= FL_VERBOSE;
 			  break;
-		  case 'x':
+		  case 'X':
 			  xarg = optarg;
 			  break;
 		  case 'p':
@@ -114,8 +118,8 @@
 		fputs(_("Can't turn on/off quotas via RPC.\n"), stderr);
 		exit(1);
 	}
-	if (!(flags & (FL_USER | FL_GROUP)))
-		flags |= FL_USER | FL_GROUP;
+	if (!(flags & (FL_USER | FL_GROUP | FL_CONTEXT)))
+		flags |= FL_USER | FL_GROUP | FL_CONTEXT;
 	if (!(flags & FL_ALL)) {
 		mntpoints = argstr + optind;
 		mntcnt = argcnt - optind;
@@ -142,6 +146,7 @@
 			errstr(_("Can't change state of XFS quota. It's not compiled in kernel.\n"));
 			return 1;
 		}
+		// fixme OTHERQUOTA
 		if (kernel_formats & (1 << QF_XFS) &&
 		    ((flags & FL_OFF && (kern_quota_on(mnt->mnt_fsname, USRQUOTA, 1 << QF_XFS)
 		    || kern_quota_on(mnt->mnt_fsname, GRPQUOTA, 1 << QF_XFS)))
@@ -330,12 +335,16 @@
 				errs += newstate(mnt, GRPQUOTA, xarg);
 			if (flags & FL_USER)
 				errs += newstate(mnt, USRQUOTA, xarg);
+			if (flags & FL_CONTEXT)
+				errs += newstate(mnt, CTXQUOTA, xarg);
 		}
 		else {
 			if (flags & FL_GROUP)
 				errs += print_state(mnt, GRPQUOTA);
 			if (flags & FL_USER)
 				errs += print_state(mnt, USRQUOTA);
+			if (flags & FL_CONTEXT)
+				errs += print_state(mnt, CTXQUOTA);
 		}
 	}
 	end_mounts_scan();
diff -NurBP --minimal quota-tools/quotaon_xfs.c quota-tools-context-0.35/quotaon_xfs.c
--- quota-tools/quotaon_xfs.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quotaon_xfs.c	Tue Feb 11 05:02:04 2003
@@ -37,18 +37,21 @@
 
 	/* establish current state before any transition */
 	state = QOFF;
-	if (type == USRQUOTA) {
+	if (type == USRQUOTA) {     	/* USRQUOTA */
 		if (info.qs_flags & XFS_QUOTA_UDQ_ACCT)
 			state = ACCT;
 		if (info.qs_flags & XFS_QUOTA_UDQ_ENFD)
 			state = ENFD;
 	}
-	else {			/* GRPQUOTA */
+	else if (type == GRPQUOTA) {	/* GRPQUOTA */
 		if (info.qs_flags & XFS_QUOTA_GDQ_ACCT)
 			state = ACCT;
 		if (info.qs_flags & XFS_QUOTA_GDQ_ENFD)
 			state = ENFD;
 	}
+	else {
+	    	// fixme OTHERQUOTA
+	}
 
 	switch (state) {
 	  case QOFF:
@@ -57,8 +60,12 @@
 			    return 1;
 		    case Q_XFS_QUOTAON:
 			    if (roothack) {
-				    *xopts |= (type == USRQUOTA) ?
-					    XFS_QUOTA_UDQ_ACCT : XFS_QUOTA_GDQ_ACCT;
+				    if (type == USRQUOTA)
+					    *xopts |= XFS_QUOTA_UDQ_ACCT;
+				    else if (type == GRPQUOTA)
+					    *xopts |= XFS_QUOTA_GDQ_ACCT;
+				    else
+					    ; // fixme OTHERQUOTA
 				    printf(_("Enabling %s quota on root filesystem"
 					     " (reboot to take effect)\n"), type2name(type));
 				    return 1;
@@ -79,19 +86,33 @@
 			    return -1;
 		    case Q_XFS_QUOTAON:
 			    if (roothack) {
-				    *xopts |= (type == USRQUOTA) ?
-					    XFS_QUOTA_UDQ_ACCT : XFS_QUOTA_GDQ_ACCT;
+				    if (type == USRQUOTA)
+					    *xopts |= XFS_QUOTA_UDQ_ACCT;
+				    else if (type == GRPQUOTA)
+					    *xopts |= XFS_QUOTA_GDQ_ACCT;
+				    else
+					    ; // fixme OTHERQUOTA
 				    printf(_("Enabling %s quota on root filesystem"
 					     " (reboot to take effect)\n"), type2name(type));
 				    return 1;
 			    }
 			    printf(_("Enabling %s quota accounting on %s\n"), type2name(type), dev);
-			    *xopts |= (type == USRQUOTA) ? XFS_QUOTA_UDQ_ACCT : XFS_QUOTA_GDQ_ACCT;
+			    if (type == USRQUOTA)
+				    *xopts |= XFS_QUOTA_UDQ_ACCT;
+			    else if (type == GRPQUOTA)
+				    *xopts |= XFS_QUOTA_GDQ_ACCT;
+			    else
+				    ; // fixme OTHERQUOTA
 			    return 1;
 		    case Q_XFS_QUOTAOFF:
 			    printf(_("Disabling %s quota accounting on %s\n"),
 				   type2name(type), dev);
-			    *xopts |= (type == USRQUOTA) ? XFS_QUOTA_UDQ_ACCT : XFS_QUOTA_GDQ_ACCT;
+			    if (type == USRQUOTA)
+				    *xopts |= XFS_QUOTA_UDQ_ACCT;
+			    else if (type == GRPQUOTA)
+				    *xopts |= XFS_QUOTA_GDQ_ACCT;
+			    else
+				    ; // fixme OTHERQUOTA
 			    return 1;
 		  }
 		  break;
@@ -110,7 +131,12 @@
 		    case Q_XFS_QUOTAOFF:
 			    printf(_("Disabling %s quota enforcement on %s\n"),
 				   type2name(type), dev);
-			    *xopts |= (type == USRQUOTA) ? XFS_QUOTA_UDQ_ENFD : XFS_QUOTA_GDQ_ENFD;
+			    if (type == USRQUOTA)
+			    	    *xopts |= XFS_QUOTA_UDQ_ENFD;
+			    else if (type == GRPQUOTA)
+			    	    *xopts |= XFS_QUOTA_GDQ_ENFD;
+			    else
+			    	    ; // fixme OTHERQUOTA
 			    return 1;
 		  }
 		  break;
@@ -196,24 +222,42 @@
 #endif /* XFS_ROOTHACK */
 
 	if (xarg == NULL) {	/* both acct & enfd on/off */
-		xopts |= (type == USRQUOTA) ?
-			(XFS_QUOTA_UDQ_ACCT | XFS_QUOTA_UDQ_ENFD) :
-			(XFS_QUOTA_GDQ_ACCT | XFS_QUOTA_GDQ_ENFD);
+		if (type == USRQUOTA)
+			xopts != XFS_QUOTA_UDQ_ACCT | XFS_QUOTA_UDQ_ENFD;
+		else if (type == GRPQUOTA)
+			xopts != XFS_QUOTA_GDQ_ACCT | XFS_QUOTA_GDQ_ENFD;
+		else
+			; // fixme OTHERQUOTA
 		err = xfs_onoff((char *)dev, type, flags, roothack, &xopts);
 	}
 	else if (strcmp(xarg, "account") == 0) {
 		/* only useful if we want root accounting only */
 		if (!roothack || !(flags & STATEFLAG_ON))
 			goto done;
-		xopts |= (type == USRQUOTA) ? XFS_QUOTA_UDQ_ACCT : XFS_QUOTA_GDQ_ACCT;
+		if (type == USRQUOTA)
+			xopts != XFS_QUOTA_UDQ_ACCT;
+		else if (type == GRPQUOTA)
+			xopts != XFS_QUOTA_GDQ_ACCT;
+		else
+			; // fixme OTHERQUOTA
 		err = xfs_onoff((char *)dev, type, flags, roothack, &xopts);
 	}
 	else if (strcmp(xarg, "enforce") == 0) {
-		xopts |= (type == USRQUOTA) ? XFS_QUOTA_UDQ_ENFD : XFS_QUOTA_GDQ_ENFD;
+		if (type == USRQUOTA)
+			xopts != XFS_QUOTA_UDQ_ENFD;
+		else if (type == GRPQUOTA)
+			xopts != XFS_QUOTA_GDQ_ENFD;
+		else
+			; // fixme OTHERQUOTA
 		err = xfs_onoff((char *)dev, type, flags, roothack, &xopts);
 	}
 	else if (strcmp(xarg, "delete") == 0) {
-		xopts |= (type == USRQUOTA) ? XFS_USER_QUOTA : XFS_GROUP_QUOTA;
+		if (type == USRQUOTA)
+			xopts != XFS_USER_QUOTA;
+		else if (type == GRPQUOTA)
+			xopts != XFS_GROUP_QUOTA;
+		else
+			; // fixme OTHERQUOTA
 		err = xfs_delete((char *)dev, type, flags, roothack, &xopts);
 	}
 	else
diff -NurBP --minimal quota-tools/quotaops.c quota-tools-context-0.35/quotaops.c
--- quota-tools/quotaops.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quotaops.c	Tue Feb 11 04:18:41 2003
@@ -128,6 +128,15 @@
 					return (struct dquot *)NULL;
 				}
 				break;
+			case CTXQUOTA:
+    	    	    	    	// fixme OTHERQUOTA
+/*				euid = geteuid();
+				if (euid != id && euid != 0) {
+					uid2user(id, name);
+					die(1, _("%s (uid %d): Permission denied\n"),  name, id);
+				}
+*/
+				break;
 			default:
 				break;
 		}
diff -NurBP --minimal quota-tools/quotastats.c quota-tools-context-0.35/quotastats.c
--- quota-tools/quotastats.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quotastats.c	Tue Feb 11 04:18:41 2003
@@ -109,7 +109,7 @@
 	printf(_("Number of dquot cache hits: %ld\n"), (long)dqstats->cache_hits);
 	printf(_("Number of allocated dquots: %ld\n"), (long)dqstats->allocated_dquots);
 	printf(_("Number of free dquots: %ld\n"), (long)dqstats->free_dquots);
-	printf(_("Number of in use dquot entries (user/group): %ld\n"),
+	printf(_("Number of in use dquot entries: %ld\n"),
 		(long)(dqstats->allocated_dquots - dqstats->free_dquots));
 	return 0;
 }
diff -NurBP --minimal quota-tools/quotasys.c quota-tools-context-0.35/quotasys.c
--- quota-tools/quotasys.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quotasys.c	Tue Feb 11 04:45:12 2003
@@ -93,14 +93,32 @@
 }
 
 /*
+ *	Convert other to xid
+ */
+int other2xid(char *name)
+{
+	int ret;
+	char *errch;
+	
+	ret = strtol(name, &errch, 0);
+	if (!*errch)		/* Is name number */
+		return ret;
+	errstr(_("Context %s doesn't exist.\n"), name);
+	exit(1);
+    	return -1;
+}
+
+/*
  *	Convert name to id
  */
 int name2id(char *name, int qtype)
 {
 	if (qtype == USRQUOTA)
 		return user2uid(name);
-	else
+	else if (qtype == GRPQUOTA)
 		return group2gid(name);
+	else
+	    	return other2xid(name);   // fixme CONTEXT
 }
 
 /*
@@ -136,14 +154,25 @@
 }
 
 /*
+ *	Convert xid to other
+ */
+int xid2other(int id, char *buf)
+{
+	snprintf(buf, MAXNAMELEN, "#%u", (uint) id);
+	return 1;
+}
+
+/*
  *	Convert id to user/groupname
  */
 int id2name(int id, int qtype, char *buf)
 {
 	if (qtype == USRQUOTA)
 		return uid2user(id, buf);
-	else
+	else if (qtype == GRPQUOTA)
 		return gid2group(id, buf);
+    	else 
+	    	return xid2other(id, buf);   // fixme OTHERQUOTA
 }
 
 /*
@@ -371,6 +400,7 @@
 		else if (type == GRPQUOTA && (sbflags & XFS_QUOTA_GDQ_ACCT))
 			ret = 1;
 #endif /* XFS_ROOTHACK */
+		 // fixme OTHERQUOTA
 	}
 	free((char *)dev);
 	return ret;
@@ -393,6 +423,8 @@
 		return 1;
 	if ((type == GRPQUOTA) && hasmntopt(mnt, MNTOPT_GRPQUOTA))
 		return 1;
+	if ((type == CTXQUOTA) && hasmntopt(mnt, MNTOPT_CTXQUOTA))
+		return 1;
 	if ((type == USRQUOTA) && hasmntopt(mnt, MNTOPT_QUOTA))
 		return 1;
 	return 0;
@@ -446,6 +478,10 @@
 		if (*(pathname = option + strlen(MNTOPT_GRPQUOTA)) == '=')
 			has_quota_file_definition = 1;
 	}
+	else if (type == CTXQUOTA && (option = hasmntopt(mnt, MNTOPT_CTXQUOTA))) {
+		if (*(pathname = option + strlen(MNTOPT_CTXQUOTA)) == '=')
+			has_quota_file_definition = 1;
+	}
 	else if (type == USRQUOTA && (option = hasmntopt(mnt, MNTOPT_QUOTA))) {
 		if (*(pathname = option + strlen(MNTOPT_QUOTA)) == '=')
 			has_quota_file_definition = 1;
@@ -625,7 +661,14 @@
 static int v1_kern_quota_on(const char *dev, int type)
 {
 	char tmp[1024];		/* Just temporary buffer */
-	qid_t id = (type == USRQUOTA) ? getuid() : getgid();
+	qid_t id;
+	
+	if (type == USRQUOTA) 
+	    	id = getuid();
+	else if (type == GRPQUOTA)
+	    	id = getgid();
+	else
+	    	id = 0;  // fixme OTHERQUOTA
 
 	if (!quotactl(QCMD(Q_V1_GETQUOTA, type), dev, id, tmp))	/* OK? */
 		return 1;
@@ -636,7 +679,14 @@
 static int v2_kern_quota_on(const char *dev, int type)
 {
 	char tmp[1024];		/* Just temporary buffer */
-	qid_t id = (type == USRQUOTA) ? getuid() : getgid();
+	qid_t id;
+	
+	if (type == USRQUOTA) 
+	    	id = getuid();
+	else if (type == GRPQUOTA)
+	    	id = getgid();
+	else
+	    	id = 0;  // fixme OTHERQUOTA
 
 	if (!quotactl(QCMD(Q_V2_GETQUOTA, type), dev, id, tmp))	/* OK? */
 		return 1;
@@ -653,6 +703,7 @@
 			return 1;
 		if (type == GRPQUOTA && (info.qs_flags & XFS_QUOTA_GDQ_ACCT))
 			return 1;
+		// fixme OTHERQUOTA
 	}
 	return 0;
 }
diff -NurBP --minimal quota-tools/quotasys.h quota-tools-context-0.35/quotasys.h
--- quota-tools/quotasys.h	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/quotasys.h	Tue Feb 11 04:18:41 2003
@@ -46,6 +46,9 @@
 /* Convert groupname to gid */
 gid_t group2gid(char *);
 
+/* Convert other to xid */
+int other2xid(char *);
+
 /* Convert user/groupname to id */
 int name2id(char *name, int qtype);
 
@@ -55,6 +58,9 @@
 /* Convert gid to groupname */
 int gid2group(gid_t, char *);
 
+/* Convert xid to other */
+int xid2other(int, char *);
+
 /* Convert id to user/group name */
 int id2name(int id, int qtype, char *buf);
 
diff -NurBP --minimal quota-tools/repquota.c quota-tools-context-0.35/repquota.c
--- quota-tools/repquota.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/repquota.c	Tue Feb 11 04:18:41 2003
@@ -21,17 +21,18 @@
 #include "quotasys.h"
 #include "quotaio.h"
 
-#define PRINTNAMELEN 9	/* Number of characters to be reserved for name on screen */
+#define PRINTNAMELEN 14	/* Number of characters to be reserved for name on screen */
 #define MAX_CACHE_DQUOTS 1024	/* Number of dquots in cache */
 
 #define FL_USER 1
 #define FL_GROUP 2
-#define FL_VERBOSE 4
+#define FL_CONTEXT 4
 #define FL_ALL 8
 #define FL_TRUNCNAMES 16
 #define FL_SHORTNUMS 32
 #define FL_NONAME 64
 #define FL_NOCACHE 128	/* Don't cache dquots before resolving */
+#define FL_VERBOSE 256
 
 int flags, fmt = -1;
 char **mnt;
@@ -42,7 +43,7 @@
 
 static void usage(void)
 {
-	errstr(_("Utility for reporting quotas.\nUsage:\n%s [-vugs] [-c|C] [-t|n] [-F quotaformat] (-a | mntpoint)\n"), progname);
+	errstr(_("Utility for reporting quotas.\nUsage:\n%s [-vugxs] [-c|C] [-t|n] [-F quotaformat] (-a | mntpoint)\n"), progname);
 	fprintf(stderr, _("Bugs to %s\n"), MY_EMAIL);
 	exit(1);
 }
@@ -52,7 +53,7 @@
 	int ret;
 	int cache_specified = 0;
 
-	while ((ret = getopt(argcnt, argstr, "VavughtsncCF:")) != -1) {
+	while ((ret = getopt(argcnt, argstr, "VavugxhtsncCF:")) != -1) {
 		switch (ret) {
 			case '?':
 			case 'h':
@@ -66,6 +67,9 @@
 			case 'g':
 				flags |= FL_GROUP;
 				break;
+			case 'x':
+				flags |= FL_CONTEXT;
+				break;
 			case 'v':
 				flags |= FL_VERBOSE;
 				break;
@@ -108,7 +112,7 @@
 		fputs(_("Specified both -n and -t but only one of them can be used.\n"), stderr);
 		exit(1);
 	}
-	if (!(flags & (FL_USER | FL_GROUP)))
+	if (!(flags & (FL_USER | FL_GROUP | FL_CONTEXT)))
 		flags |= FL_USER;
 	if (!(flags & FL_ALL)) {
 		mnt = argstr + optind;
@@ -180,7 +184,7 @@
 		}
 		endpwent();
 	}
-	else {
+	else if (type == GRPQUOTA) {
 		struct group *grent;
 
 		setgrent();
@@ -192,10 +196,14 @@
 			}
 		}
 		endgrent();
+	} else {
+	    	// fixme OTHERQUOTA
 	}
 	for (i = 0; i < cached_dquots; i++)
 		if (!(dquot_cache[i].dq_flags & DQ_PRINTED)) {
-			sprintf(namebuf, "#%u", dquot_cache[i].dq_id);
+			sprintf(namebuf, "#%-6u %u", 
+			    dquot_cache[i].dq_id & ((1 << 16)-1), 
+			    dquot_cache[i].dq_id >> 16);
 			print(dquot_cache+i, namebuf);
 		}
 	cached_dquots = 0;
@@ -206,7 +214,9 @@
 	if (flags & FL_NONAME) {
 		char namebuf[MAXNAMELEN];
 
-		sprintf(namebuf, "#%u", dquot->dq_id);
+		sprintf(namebuf, "#%-6u %u",
+		    dquot->dq_id & ((1 << 16)-1),
+		    dquot->dq_id >> 16);
 		print(dquot, namebuf);
 	}
 	else if (name || flags & FL_NOCACHE) {
@@ -235,8 +245,9 @@
 	time2str(h->qh_info.dqi_igrace, igbuf, TF_ROUND);
 	printf(_("Block grace time: %s; Inode grace time: %s\n"), bgbuf, igbuf);
 	printf(_("                        Block limits                File limits\n"));
-	printf(_("%-9s       used    soft    hard  grace    used  soft  hard  grace\n"), (type == USRQUOTA)?_("User"):_("Group"));
-	printf("----------------------------------------------------------------------\n");
+	printf(_("%-14s       used    soft    hard  grace    used  soft  hard  grace\n"), 
+	    	(type == USRQUOTA)?_("User    CTX"):((type == GRPQUOTA)?_("Group   CTX"):_("Context")));
+	printf("---------------------------------------------------------------------------\n");
 
 	if (h->qh_ops->scan_dquots(h, output) < 0)
 		return;
@@ -272,9 +283,10 @@
 
 	if (flags & FL_USER)
 		report(USRQUOTA);
-
 	if (flags & FL_GROUP)
 		report(GRPQUOTA);
+	if (flags & FL_CONTEXT)
+		report(CTXQUOTA);
 
 	return 0;
 }
diff -NurBP --minimal quota-tools/rquota_server.c quota-tools-context-0.35/rquota_server.c
--- quota-tools/rquota_server.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/rquota_server.c	Tue Feb 11 04:18:41 2003
@@ -226,6 +226,12 @@
 			result.status = Q_EPERM;
 			return (&result);
 		}
+		
+		if (type == CTXQUOTA && unix_cred->aup_uid && unix_cred->aup_uid != id) {
+		    	// fixme CONTEXT
+			result.status = Q_EPERM;
+			return (&result);
+		}
 	}
 	else {
 		arguments.args = (getquota_args *) argp;
diff -NurBP --minimal quota-tools/set_limits_example.c quota-tools-context-0.35/set_limits_example.c
--- quota-tools/set_limits_example.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/set_limits_example.c	Tue Feb 11 04:18:41 2003
@@ -38,14 +38,37 @@
 		}
 		else {
 			errstr(
-				_("copy_group_quota_limits: Failed to set groupquota for uid %ld : %s\n"),
+				_("copy_group_quota_limits: Failed to set groupquota for gid %ld : %s\n"),
 				to, strerror(errno));
 			return (1);
 		}
 	}
 	else {
 		errstr(
-			_("copy_group_quota_limits: Failed to get groupquota for uid %ld : %s\n"),
+			_("copy_group_quota_limits: Failed to get groupquota for gid %ld : %s\n"),
+			from, strerror(errno));
+		return (1);
+	}
+}
+
+int copy_context_quota_limits(const char *block_device, uid_t from, uid_t to)
+{
+	struct dqblk dq;
+
+	if (quotactl(QCMD(Q_GETQUOTA, CTXQUOTA), block_device, from, (caddr_t) & dq) == 0) {
+		if (quotactl(QCMD(Q_SETQLIM, CTXQUOTA), block_device, to, (caddr_t) & dq) == 0) {
+			return (0);
+		}
+		else {
+			errstr(
+				_("copy_context_quota_limits: Failed to set contextquota for uid %ld : %s\n"),
+				to, strerror(errno));
+			return (1);
+		}
+	}
+	else {
+		errstr(
+			_("copy_context_quota_limits: Failed to get contextquota for uid %ld : %s\n"),
 			from, strerror(errno));
 		return (1);
 	}
diff -NurBP --minimal quota-tools/setquota.c quota-tools-context-0.35/setquota.c
--- quota-tools/setquota.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/setquota.c	Tue Feb 11 04:41:10 2003
@@ -23,11 +23,12 @@
 
 #define FL_USER 1
 #define FL_GROUP 2
-#define FL_RPC 4
+#define FL_CONTEXT 4
 #define FL_ALL 8
 #define FL_PROTO 16
 #define FL_GRACE 32
 #define FL_INDIVIDUAL_GRACE 64
+#define FL_RPC 128
 
 int flags, fmt = -1;
 char **mnt;
@@ -78,6 +79,8 @@
 		return USRQUOTA;
 	if (flags & FL_GROUP)
 		return GRPQUOTA;
+	if (flags & FL_CONTEXT)
+		return CTXQUOTA;
 	return -1;
 }
 
@@ -88,9 +91,9 @@
 	char *protoname = NULL;
 
 #ifdef RPC_SETQUOTA
-	char *opts = "igp:urVF:taT";
+	char *opts = "igp:uxrVF:taT";
 #else
-	char *opts = "igp:uVF:taT";
+	char *opts = "igp:uxVF:taT";
 #endif
 
 	while ((ret = getopt(argcnt, argstr, opts)) != -1) {
@@ -104,6 +107,9 @@
 		  case 'u':
 			  flags |= FL_USER;
 			  break;
+		  case 'x':
+			  flags |= FL_CONTEXT;
+			  break;
 		  case 'p':
 			  flags |= FL_PROTO;
 			  protoname = optarg;
@@ -129,8 +135,9 @@
 			  break;
 		}
 	}
-	if (flags & FL_USER && flags & FL_GROUP) {
-		fputs(_("Group and user quotas can't be used together.\n"), stderr);
+	if ((flags & FL_USER && (flags & (FL_GROUP | FL_CONTEXT))) ||
+	    (flags & FL_GROUP && flags & FL_CONTEXT)) {
+		fputs(_("Different quotas can't be used together.\n"), stderr);
 		usage();
 	}
 	if (flags & FL_PROTO && flags & FL_GRACE) {
@@ -150,7 +157,7 @@
 		fputs(_("Bad number of arguments.\n"), stderr);
 		usage();
 	}
-	if (!(flags & (FL_USER | FL_GROUP)))
+	if (!(flags & (FL_USER | FL_GROUP | FL_CONTEXT)))
 		flags |= FL_USER;
 	if (!(flags & FL_GRACE)) {
 		id = name2id(argstr[optind++], flag2type(flags));
diff -NurBP --minimal quota-tools/warnquota.c quota-tools-context-0.35/warnquota.c
--- quota-tools/warnquota.c	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/warnquota.c	Tue Feb 11 04:18:42 2003
@@ -64,6 +64,16 @@
 			  "the group.\n\n" \
                           "For additional assistance, please contact us at %s\nor via " \
                           "phone at %s.\n")
+#define DEF_CONTEXT_MESSAGE	_("Hi,\n\nWe noticed that the context %s violates the quotasystem\n" \
+                          "used on this system. We have found the following violations:\n\n")
+#define DEF_CONTEXT_SIGNATURE	_("\nPlease cleanup the context data before the grace period expires.\n" \
+	                  "\nBasically, this means that the system thinks the context is using more\n" \
+	                  "disk space on the above partition(s) than it is allowed. If you do not\n" \
+	                  "delete files and get below context quota before the grace period expires,\n" \
+	                  "the system will prevent members of the context from creating new files \n" \
+			  "within the context.\n\n" \
+                          "For additional assistance, please contact us at %s\nor via " \
+                          "phone at %s.\n")
 
 #define SHELL "/bin/sh"
 #define QUOTATAB "/etc/quotatab"
@@ -75,6 +85,7 @@
 
 #define FL_USER 1
 #define FL_GROUP 2
+#define FL_CONTEXT 4
 
 struct usage {
 	char *devicename;
@@ -93,6 +104,8 @@
 	char *user_signature;
 	char *group_message;
 	char *group_signature;
+	char *context_message;
+	char *context_signature;
 };
 
 struct offenderlist {
@@ -222,11 +235,11 @@
 	int cnt, status;
 	char timebuf[MAXTIMELEN];
 	struct util_dqblk *dqb;
-	char *to;
+	char *to = NULL;
 
 	if (offender->offender_type == USRQUOTA)
 		to = offender->offender_name;
-	else {
+	else if (offender->offender_type == GRPQUOTA) {
 		struct adminstable *admin;
 
 		if (!(admin = bsearch(offender->offender_name, adminstable, adminscnt, sizeof(struct adminstable), admin_name_cmp))) {
@@ -234,6 +247,8 @@
 			return -1;
 		}
 		to = admin->adminname;
+	} else {
+	    	/* to = "root" */; // fixme OTHERQUOTA
 	}
 	if (!(fp = run_mailer(config->mail_cmd)))
 		return -1;
@@ -248,11 +263,13 @@
 			fputs(config->user_message, fp);
 		else
 			fputs(DEF_USER_MESSAGE, fp);
-	else
+	else if (offender->offender_type == GRPQUOTA)
 		if (config->group_message)
 			fprintf(fp, config->group_message, offender->offender_name);
 		else
 			fprintf(fp, DEF_GROUP_MESSAGE, offender->offender_name);
+    	else 
+	    	/* fprintf(fp, DEF_CONTEXT_MESSAGE, offender->offender_id)*/; // fixme OTHERQUOTA
 
 	for (lptr = offender->usage; lptr; lptr = lptr->next) {
 		dqb = &lptr->dq_dqb;
@@ -290,11 +307,13 @@
 			fputs(config->user_signature, fp);
 		else
 			fprintf(fp, DEF_USER_SIGNATURE, config->support, config->phone);
-	else
+	else if (offender->offender_type == GRPQUOTA)
 		if (config->group_signature)
 			fputs(config->group_signature, fp);
 		else
 			fprintf(fp, DEF_GROUP_SIGNATURE, config->support, config->phone);
+    	else 
+	    	/* fprintf(fp, DEF_CONTEXT_SIGNATURE, config->support, config->phone)*/; // fixme OTHERQUOTA
 	fclose(fp);
 	if (wait(&status) < 0)	/* Wait for mailer */
 		errstr(_("Can't wait for mailer: %s\n"), strerror(errno));
@@ -491,6 +510,14 @@
 				config->group_signature = sstrdup(value);
 				create_eoln(config->group_signature);
 			}
+			else if (!strcmp(var, "CONTEXT_MESSAGE")) {
+				config->context_message = sstrdup(value);
+				create_eoln(config->context_message);
+			}
+			else if (!strcmp(var, "CONTEXT_SIGNATURE")) {
+				config->context_signature = sstrdup(value);
+				create_eoln(config->context_signature);
+			}
 			else	/* not matched at all */
 				errstr(_("Error in config file (line %d), ignoring\n"), line);
 		}
@@ -591,6 +618,13 @@
 			handles[i]->qh_ops->scan_dquots(handles[i], check_offence);
 		dispose_handle_list(handles);
 	}
+	if (flags & FL_CONTEXT) {
+    	    	// fixme OTHERQUOTA
+		handles = create_handle_list(0, NULL, CTXQUOTA, -1, IOI_LOCALONLY | IOI_READONLY | IOI_OPENFILE);
+		for (i = 0; handles[i]; i++)
+			handles[i]->qh_ops->scan_dquots(handles[i], check_offence);
+		dispose_handle_list(handles);
+	}
 	if (mail_to_offenders(&config) < 0)
 		exit(1);
 }
@@ -598,14 +632,14 @@
 /* Print usage information */
 static void usage(void)
 {
-	errstr(_("Usage:\n  warnquota [-ug] [-F quotaformat] [-c configfile] [-q quotatabfile]\n"));
+	errstr(_("Usage:\n  warnquota [-ugx] [-F quotaformat] [-c configfile] [-q quotatabfile]\n"));
 }
  
 static void parse_options(int argcnt, char **argstr)
 {
 	int ret;
  
-	while ((ret = getopt(argcnt, argstr, "ugVF:hc:q:a:")) != -1) {
+	while ((ret = getopt(argcnt, argstr, "ugxVF:hc:q:a:")) != -1) {
 		switch (ret) {
 		  case '?':
 		  case 'h':
@@ -632,9 +666,12 @@
 		  case 'g':
 			flags |= FL_GROUP;
 			break;
+		  case 'x':
+			flags |= FL_CONTEXT;
+			break;
 		}
 	}
-	if (!(flags & FL_USER) && !(flags & FL_GROUP))
+	if (!(flags & FL_USER) && !(flags & FL_GROUP) && !(flags & FL_CONTEXT))
 		flags |= FL_USER;
 }
  
diff -NurBP --minimal quota-tools/warnquota.conf quota-tools-context-0.35/warnquota.conf
--- quota-tools/warnquota.conf	Tue Feb 11 04:18:12 2003
+++ quota-tools-context-0.35/warnquota.conf	Tue Feb 11 04:18:42 2003
@@ -26,6 +26,13 @@
 # Text in the end of the mail to the group (if not specified, default text using SUPPORT
 # and PHONE is created).
 GROUP_SIGNATURE	= See you!|			Your admin|
+# Following text is used for mails about contexts exceeding quotas
+# It should contain string %s exactly once - it will be substituted for a context
+CONTEXT_MESSAGE	= Hello, the context '%s' uses too much space.|\
+I chose you to do the cleanup.|Delete context files on following filesystems:|
+# Text in the end of the mail to the group (if not specified, default text using SUPPORT
+# and PHONE is created).
+CONTEXT_SIGNATURE	= See you!|			Your admin|
 #
 # end of example warnquota.conf file
 #

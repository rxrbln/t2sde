# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../pekwm/gcc41.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

diff -Nur pekwm-0.1.3-orig/src/FrameWidget.hh pekwm-0.1.3/src/FrameWidget.hh
--- pekwm-0.1.3-orig/src/FrameWidget.hh	2003-06-05 19:12:14.000000000 +0000
+++ pekwm-0.1.3/src/FrameWidget.hh	2006-04-03 12:10:11.537071250 +0000
@@ -78,49 +78,49 @@
 
 	// border inlines
 	inline unsigned int
-	FrameWidget::borderTop(void) const {
+	borderTop(void) const {
 		return (_border ? (_focused
 					 ? _theme->getWinFocusedBorder()[BORDER_TOP]->getHeight()
 					 : _theme->getWinUnfocusedBorder()[BORDER_TOP]->getHeight()) : 0);
 	}
 	inline unsigned int
-	FrameWidget::borderTopLeft(void) const {
+	borderTopLeft(void) const {
 		return (_border ? (_focused
 					 ? _theme->getWinFocusedBorder()[BORDER_TOP_LEFT]->getWidth()
 					 : _theme->getWinUnfocusedBorder()[BORDER_TOP_LEFT]->getWidth()) : 0);
 	}
 	inline unsigned int
-	FrameWidget::borderTopRight(void) const {
+	borderTopRight(void) const {
 		return (_border ? (_focused
 					 ? _theme->getWinFocusedBorder()[BORDER_TOP_RIGHT]->getWidth()
 					 : _theme->getWinUnfocusedBorder()[BORDER_TOP_RIGHT]->getWidth()) : 0);
 	}
 	inline unsigned int
-	FrameWidget::borderBottom(void) const {
+	borderBottom(void) const {
 		return (_border ? (_focused
 					 ? _theme->getWinFocusedBorder()[BORDER_BOTTOM]->getHeight()
 					 : _theme->getWinUnfocusedBorder()[BORDER_BOTTOM]->getHeight()) : 0);
 	}
 	inline unsigned int
-	FrameWidget::borderBottomLeft(void) const {
+	borderBottomLeft(void) const {
 		return (_border ? (_focused
 					 ? _theme->getWinFocusedBorder()[BORDER_BOTTOM_LEFT]->getWidth()
 					 : _theme->getWinUnfocusedBorder()[BORDER_BOTTOM_LEFT]->getWidth()) : 0);
 	}
 	inline unsigned int
-	FrameWidget::borderBottomRight(void) const {
+	borderBottomRight(void) const {
 		return (_border ? (_focused
 					 ? _theme->getWinFocusedBorder()[BORDER_BOTTOM_RIGHT]->getWidth()
 					 : _theme->getWinUnfocusedBorder()[BORDER_BOTTOM_RIGHT]->getWidth()) : 0);
 	}
 	inline unsigned int
-	FrameWidget::borderLeft(void) const {
+	borderLeft(void) const {
 		return (_border ? (_focused
 					 ? _theme->getWinFocusedBorder()[BORDER_LEFT]->getWidth()
 					 : _theme->getWinUnfocusedBorder()[BORDER_LEFT]->getWidth()) : 0);
 	}
 	inline unsigned int
-	FrameWidget::borderRight(void) const {
+	borderRight(void) const {
 		return (_border ? (_focused
 					 ? _theme->getWinFocusedBorder()[BORDER_RIGHT]->getWidth()
 					 : _theme->getWinUnfocusedBorder()[BORDER_RIGHT]->getWidth()) : 0);

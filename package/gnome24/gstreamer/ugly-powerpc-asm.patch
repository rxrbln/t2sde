
Somehow some PowerPC expert manage to write uncompileable __asm__ inline code.
This does compile - but is unintentional. I do not know if it does the right
thing (and need to do some leasons in PowerPC assempbly and GCC inline
assembly specifically).

  - Rene Rebe <rene@rocklinux.org>

--- gstreamer-0.6.5-orig/gst/gstarch.h	2003-09-23 02:12:34.000000000 +0200
+++ gstreamer-0.6.5-fixed/gst/gstarch.h	2004-04-12 00:41:19.000000000 +0200
@@ -46,11 +46,11 @@
 #elif defined (HAVE_CPU_PPC) && defined(__GNUC__)
 
 #define GST_ARCH_SET_SP(stackpointer) \
-    __asm__("lwz r1,%0" : : "m"(stackpointer) )
+    __asm__("lwz 1,%0" : : "m"(stackpointer) )
   
 #define GST_ARCH_CALL(target) \
-    __asm__( "mr r0,%0\n\t" \
-             "mtlr r0\n\t" \
+    __asm__( "mr %0,%0\n\t" \
+             "mtlr %0\n\t" \
              "blrl" : : "r"(target) : "r0" );
   
 struct minimal_ppc_stackframe {

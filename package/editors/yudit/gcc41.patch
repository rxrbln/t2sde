# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../yudit/gcc41.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

diff -Nur yudit-2.7.8-orig/stoolkit/SBMap.h yudit-2.7.8/stoolkit/SBMap.h
--- yudit-2.7.8-orig/stoolkit/SBMap.h	2005-03-21 03:39:55.000000000 +0000
+++ yudit-2.7.8/stoolkit/SBMap.h	2006-04-03 00:37:55.561235000 +0000
@@ -167,7 +167,7 @@
 
   void buildStateMachine ();
   int  serialize (SString* fd, SFileFormat format, int last=0);
-  int SBMapItem::getSerializeSize ();
+  int getSerializeSize ();
 
 
   // Get rid of the state machine.
@@ -314,8 +314,8 @@
     return (unsigned int) maps[mapIndex]->outWordSize;
   }
 
-  bool SBMap::makeUnicodeMap ();
-  bool SBMap::makeStraightMap ();
+  bool makeUnicodeMap ();
+  bool makeStraightMap ();
 
   // Return max index
   int getSize (int index=-1);
diff -Nur yudit-2.7.8-orig/stoolkit/SIO.h yudit-2.7.8/stoolkit/SIO.h
--- yudit-2.7.8-orig/stoolkit/SIO.h	2005-03-21 03:39:55.000000000 +0000
+++ yudit-2.7.8/stoolkit/SIO.h	2006-04-03 00:25:20.438042750 +0000
@@ -147,7 +147,7 @@
   const SInputStream& getInputStream();
   const SOutputStream& getOutputStream();
 private:
-  void SSocket::openSocket(SOutputStream* o);
+  void openSocket(SOutputStream* o);
   unsigned int address[6]; // Four is used now.
   SString host;
   int port;
diff -Nur yudit-2.7.8-orig/stoolkit/STextData.h yudit-2.7.8/stoolkit/STextData.h
--- yudit-2.7.8-orig/stoolkit/STextData.h	2005-03-21 03:39:56.000000000 +0000
+++ yudit-2.7.8/stoolkit/STextData.h	2006-04-03 00:41:17.085829500 +0000
@@ -132,8 +132,8 @@
 
   void setLineBreaks (unsigned int line, const SV_UCS4& breaks);
 
-  bool STextData::getInitialLR() const;
-  void STextData::setInitialLR(bool lr);
+  bool getInitialLR() const;
+  void setInitialLR(bool lr);
 
 private:
   SS_Embedding         embedding;
diff -Nur yudit-2.7.8-orig/swidget/SDialog.h yudit-2.7.8/swidget/SDialog.h
--- yudit-2.7.8-orig/swidget/SDialog.h	2005-03-21 03:39:56.000000000 +0000
+++ yudit-2.7.8/swidget/SDialog.h	2006-04-03 00:55:25.482851000 +0000
@@ -39,7 +39,7 @@
 protected:
   virtual void keyPressed (SWindow * w, SKey key, const SString& s,
           bool ctrl, bool shift, bool meta);
-  virtual void SDialog::buttonPressed (void* source, const SAccelerator* acc);
+  virtual void buttonPressed (void* source, const SAccelerator* acc);
   virtual bool close (SPanel* comp);
   SType    type;
   SPanel*  dialogPanel;
diff -Nur yudit-2.7.8-orig/swindow/SFontTTF.h yudit-2.7.8/swindow/SFontTTF.h
--- yudit-2.7.8-orig/swindow/SFontTTF.h	2005-03-21 03:39:57.000000000 +0000
+++ yudit-2.7.8/swindow/SFontTTF.h	2006-04-03 00:49:14.127642750 +0000
@@ -121,7 +121,7 @@
     const SS_GlyphIndex* chars, unsigned int liglen, SS_GlyphIndex* out,
     unsigned int substtype = 4);
 
-  bool SFontTTF::hasOTFLigatures();
+  bool hasOTFLigatures();
 
   void getOTFMarkToBase (SS_GlyphIndex baseGlyph, 
        SS_GlyphIndex markGlyph, int* ix, int* iy);
diff -Nur yudit-2.7.8-orig/swindow/SImage.h yudit-2.7.8/swindow/SImage.h
--- yudit-2.7.8-orig/swindow/SImage.h	2005-03-21 03:39:57.000000000 +0000
+++ yudit-2.7.8/swindow/SImage.h	2006-04-03 00:43:51.951508000 +0000
@@ -42,7 +42,7 @@
        int origox, int origoy, 
        unsigned int width, unsigned int height);
   virtual ~SImage();
-  const SUniqueID& SImage::getID() const;
+  const SUniqueID& getID() const;
   void compress();
   /* After fill, return the shade of white  */
   unsigned int getShades () const;
@@ -53,7 +53,7 @@
   void setOrigoX (int x);
   void setOrigoY (int y);
   SS_WORD32 getShade (int x, int y) const;
-  virtual SObject* SImage::clone () const;
+  virtual SObject* clone () const;
 
   /* USed by cache device to indicate the offset */
   int  px;
diff -Nur yudit-2.7.8-orig/swindow/sx11/SX11Window.h yudit-2.7.8/swindow/sx11/SX11Window.h
--- yudit-2.7.8-orig/swindow/sx11/SX11Window.h	2005-03-22 04:59:20.000000000 +0000
+++ yudit-2.7.8/swindow/sx11/SX11Window.h	2006-04-03 00:46:27.769246000 +0000
@@ -138,9 +138,9 @@
 
 private:
   SBinHashtable <SAcceleratorListener*> accelerators;
-  void SX11Window::createShadedPixmap (const SImage& im, Pixmap* p, Pixmap* m);
-  void SX11Window::createColoredPixmap (const SImage& im, Pixmap* p, Pixmap* m);
-  void SX11Window::createMaskedPixmap (const SImage& im, Pixmap* p, Pixmap* m);
+  void createShadedPixmap (const SImage& im, Pixmap* p, Pixmap* m);
+  void createColoredPixmap (const SImage& im, Pixmap* p, Pixmap* m);
+  void createMaskedPixmap (const SImage& im, Pixmap* p, Pixmap* m);
 
   SString         name;
   SXInputMethod inputMethod;

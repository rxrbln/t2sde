# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../nvi/errno.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# Copyright (C) 1998 - 2003 ROCK Linux Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- ./ex/tag.h.orig	1995-01-31 18:59:16.000000000 +0100
+++ ./ex/tag.h	2002-10-12 16:45:16.000000000 +0200
@@ -38,7 +38,7 @@
 struct _tagf {				/* Tag file. */
 	TAILQ_ENTRY(_tagf) q;		/* Linked list of tag files. */
 	char	*name;			/* Tag file name. */
-	int	 errno;			/* Error. */
+	int	 errnum;		/* Error. */
 
 #define	TAGF_ERR	0x01		/* Error occurred. */
 #define	TAGF_ERR_WARN	0x02		/* Error reported. */
--- ./ex/ex_tag.c.orig	2002-10-12 16:46:54.000000000 +0200
+++ ./ex/ex_tag.c	2002-10-12 16:47:21.000000000 +0200
@@ -727,7 +727,7 @@
 				if (F_ISSET(tfp, TAGF_ERR) &&
 				    !F_ISSET(tfp, TAGF_ERR_WARN)) {
 					p = msg_print(sp, tfp->name, &nf1);
-					errno = tfp->errno;
+					errno = tfp->errnum;
 					msgq(sp, M_SYSERR, "%s", p);
 					if (nf1)
 						FREE_SPACE(sp, p, 0);
@@ -815,7 +815,7 @@
 	char *endp, *back, *front, *map, *p;
 
 	if ((fd = open(tfp->name, O_RDONLY, 0)) < 0) {
-		tfp->errno = errno;
+		tfp->errnum = errno;
 		return (1);
 	}
 
@@ -830,7 +830,7 @@
 	 */
 	if (fstat(fd, &sb) || (map = mmap(NULL, (size_t)sb.st_size,
 	    PROT_READ, MAP_PRIVATE, fd, (off_t)0)) == (caddr_t)-1) {
-		tfp->errno = errno;
+		tfp->errnum = errno;
 		(void)close(fd);
 		return (1);
 	}
--- ./PORT/db.1.85/hash/hash.h.orig	1994-06-24 17:12:29.000000000 +0200
+++ ./PORT/db.1.85/hash/hash.h	2002-10-12 16:41:21.000000000 +0200
@@ -103,7 +103,7 @@
 	BUFHEAD 	*cpage;		/* Current page */
 	int		cbucket;	/* Current bucket */
 	int		cndx;		/* Index of next item on cpage */
-	int		errno;		/* Error Number -- for DBM 
+	int		errnum;		/* Error Number -- for DBM 
 					 * compatability */
 	int		new_file;	/* Indicates if fd is backing store 
 					 * or no */
--- ./PORT/db.1.85/hash/hash.c.orig	2002-10-12 16:27:14.000000000 +0200
+++ ./PORT/db.1.85/hash/hash.c	2002-10-12 16:42:30.000000000 +0200
@@ -505,7 +505,7 @@
 	else
 		if (wsize != sizeof(HASHHDR)) {
 			errno = EFTYPE;
-			hashp->errno = errno;
+			hashp->errnum = errno;
 			return (-1);
 		}
 	for (i = 0; i < NCACHED; i++)
@@ -536,7 +536,7 @@
 
 	hashp = (HTAB *)dbp->internal;
 	if (flag) {
-		hashp->errno = errno = EINVAL;
+		hashp->errnum = errno = EINVAL;
 		return (ERROR);
 	}
 	return (hash_access(hashp, HASH_GET, (DBT *)key, data));
@@ -553,11 +553,11 @@
 
 	hashp = (HTAB *)dbp->internal;
 	if (flag && flag != R_NOOVERWRITE) {
-		hashp->errno = errno = EINVAL;
+		hashp->errnum = errno = EINVAL;
 		return (ERROR);
 	}
 	if ((hashp->flags & O_ACCMODE) == O_RDONLY) {
-		hashp->errno = errno = EPERM;
+		hashp->errnum = errno = EPERM;
 		return (ERROR);
 	}
 	return (hash_access(hashp, flag == R_NOOVERWRITE ?
@@ -574,11 +574,11 @@
 
 	hashp = (HTAB *)dbp->internal;
 	if (flag && flag != R_CURSOR) {
-		hashp->errno = errno = EINVAL;
+		hashp->errnum = errno = EINVAL;
 		return (ERROR);
 	}
 	if ((hashp->flags & O_ACCMODE) == O_RDONLY) {
-		hashp->errno = errno = EPERM;
+		hashp->errnum = errno = EPERM;
 		return (ERROR);
 	}
 	return (hash_access(hashp, HASH_DELETE, (DBT *)key, NULL));
@@ -729,7 +729,7 @@
 
 	hashp = (HTAB *)dbp->internal;
 	if (flag && flag != R_FIRST && flag != R_NEXT) {
-		hashp->errno = errno = EINVAL;
+		hashp->errnum = errno = EINVAL;
 		return (ERROR);
 	}
 #ifdef HASH_STATISTICS
--- ./PORT/db.1.85/hash/ndbm.c.orig	2002-10-12 19:48:03.000000000 +0200
+++ ./PORT/db.1.85/hash/ndbm.c	2002-10-12 19:48:23.000000000 +0200
@@ -180,7 +180,7 @@
 	HTAB *hp;
 
 	hp = (HTAB *)db->internal;
-	return (hp->errno);
+	return (hp->errnum);
 }
 
 extern int
@@ -190,7 +190,7 @@
 	HTAB *hp;
 
 	hp = (HTAB *)db->internal;
-	hp->errno = 0;
+	hp->errnum = 0;
 	return (0);
 }
 

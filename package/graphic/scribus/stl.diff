# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../scribus/stl.diff
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- scribus-1.3.2/scribus/util.h_orig	2006-02-03 22:26:37.000000000 +0100
+++ scribus-1.3.2/scribus/util.h	2006-02-03 22:27:22.000000000 +0100
@@ -18,6 +18,8 @@
 #include <qpoint.h>
 #include <qdom.h>
 
+#include <vector>
+
 #include "fpoint.h"
 #include "fpointarray.h"
 #include "pagestructs.h"
--- scribus-1.3.2/scribus/mspinbox.cpp_orig	2006-02-04 11:57:53.000000000 +0100
+++ scribus-1.3.2/scribus/mspinbox.cpp	2006-02-04 12:02:14.000000000 +0100
@@ -205,12 +205,12 @@
 	//Get the index of our suffix
 	int toConvertToIndex=unitIndexFromString(su);
 	//Add in the fparser constants using our unit strings, and the conversion factors.
-	fp.AddConstant(strPT, value2value(1.0, SC_PT, toConvertToIndex));
-	fp.AddConstant(strMM, value2value(1.0, SC_MM, toConvertToIndex));
-	fp.AddConstant(strIN, value2value(1.0, SC_IN, toConvertToIndex));
-	fp.AddConstant(strP, value2value(1.0, SC_P, toConvertToIndex));
-	fp.AddConstant(strCM, value2value(1.0, SC_CM, toConvertToIndex));
-	fp.AddConstant(strC, value2value(1.0, SC_C, toConvertToIndex));
+	fp.AddConstant(strPT.ascii(), value2value(1.0, SC_PT, toConvertToIndex));
+	fp.AddConstant(strMM.ascii(), value2value(1.0, SC_MM, toConvertToIndex));
+	fp.AddConstant(strIN.ascii(), value2value(1.0, SC_IN, toConvertToIndex));
+	fp.AddConstant(strP.ascii(), value2value(1.0, SC_P, toConvertToIndex));
+	fp.AddConstant(strCM.ascii(), value2value(1.0, SC_CM, toConvertToIndex));
+	fp.AddConstant(strC.ascii(), value2value(1.0, SC_C, toConvertToIndex));
 
 	int ret = fp.Parse(ts.latin1(), "", true);
 	if (ret >= 0)
@@ -389,7 +389,7 @@
 	QMap<QString, double>::Iterator it=functionParserConstants.begin();
 	while(it!=itend)
 	{
-		fp.AddConstant(it.key(), it.data());
+		fp.AddConstant(it.key().ascii(), it.data());
 		++it;
 	}
 }

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../ploticus/official-fixes.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Well - some people have strange release policies - placing to be replaced
files online ... :-(

  - Rene Rebe <rene@exactcode.de>

diff -urN pl231src/prefabs/processdata.pl pl231src-patched/prefabs/processdata.pl
--- pl231src/prefabs/processdata.pl	2003-10-22 20:09:23.000000000 +0200
+++ pl231src-patched/prefabs/processdata.pl	2005-03-08 19:31:39.000000000 +0100
@@ -1,6 +1,7 @@
 #musthave action 
 
 #setifnotgiven data = "-"
+#setifnotgiven inlinedata = ""
 
 #include $chunk_read
 
diff -urN pl231src/src/proc_processdata.c pl231src-patched/src/proc_processdata.c
--- pl231src/src/proc_processdata.c	2005-01-26 17:47:26.000000000 +0100
+++ pl231src-patched/src/proc_processdata.c	2005-03-08 19:31:52.000000000 +0100
@@ -602,9 +602,9 @@
 		if( n > 1 ) setfloatvar( "SD", sqrt( ( accum[1] - (accum[0]*accum[0]/(double)n )) / ((double)n-1.0) ) );
 		else setcharvar( "SD", "n/a" ); 
 		setfloatvar( "MAX", max );
-		if( nfld > 1 ) setcharvar( "MAX_ID", breakbuf[0] );
+		if( tagfld >= 0 ) setcharvar( "MAX_ID", breakbuf[0] );
 		setfloatvar( "MIN", min );
-		if( nfld > 1 ) setcharvar( "MIN_ID", breakbuf[1] );
+		if( tagfld >= 0 ) setcharvar( "MIN_ID", breakbuf[1] );
 		}
 	return( 0 );
 	}
diff -urN pl231src-ori/src/autorange.c pl231src/src/autorange.c
--- pl231src-ori/src/autorange.c	2005-01-28 21:45:59.000000000 +0100
+++ pl231src/src/autorange.c	2005-04-19 17:12:06.000000000 +0200
@@ -45,10 +45,9 @@
 
 /* see what scaletype is being used.. */
 Egetunits( axis, unittyp );
-/* for linear, default to automatic determination of reasonable endpoints.. */
 if( strcmp( unittyp, "linear" )==0 ) strcpy( nearest, "auto" );
-/* for date, time, and other types, default to exact endpoints.. */
-else strcpy( nearest, "exact" );
+else if ( GL_smemberi( unittyp, "date time datetime" )) strcpy( nearest, "datematic" );
+else strcpy( nearest, "exact" ); /* categories? */
 
 margin = 0.0;
 strcpy( dfield, "" );
@@ -110,7 +109,7 @@
 /* ----------------- */
 
 /* override.. */
-if( stricmp( nearest, "day" )==0 && stricmp( unittyp, "date" )==0 ) strcpy( nearest, "exact" );
+/* if( stricmp( nearest, "day" )==0 && stricmp( unittyp, "date" )==0 ) strcpy( nearest, "exact" ); */ /* removed scg 4/19/05 */
 
 /* find data min and max.. */
 
@@ -190,8 +189,8 @@
 
 /* degenerate case.. all data the same (bad if it happens to lie on inc boundary, eg: 0) - added scg 9/21/01 */
 if( min == max ) {
-	min = min - 1.0;
-	max = max + 1.0;
+	/* min = min - 1.0; max = max + 1.0; */
+	min -= (min*0.2); max += (max*0.2);  /* changed to work better w/ small magnitude values - scg 3/3/05 */
 	}
 
 
@@ -208,7 +207,8 @@
 
 /******* handle nearest=  ***********/
 
-if( GL_slmember( nearest, "dat*matic" ) || ( stricmp( nearest, "exact" )==0 && GL_smember( unittyp, "datetime time" )) ) {
+if( GL_slmember( nearest, "dat*matic" ) ) {
+	/* || ( stricmp( nearest, "exact" )==0 && GL_smember( unittyp, "datetime time" )) ) { */ /* removed scg 4/19/05 */
 	char foo1[40], foo2[40], foo3[40], foo4[40], foo5[40], foo6[40];
 	double dfoo1, dfoo2;
 	/* get an automatic reasonable "nearest" value.. */

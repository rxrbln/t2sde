# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../pixieplus/imagemagick.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---
diff -urN pixieplus.orig/kdenonbeta/pixieplus/app/blob-private.h pixieplus/kdenonbeta/pixieplus/app/blob-private.h
--- pixieplus.orig/kdenonbeta/pixieplus/app/blob-private.h	1970-01-01 01:00:00.000000000 +0100
+++ pixieplus/kdenonbeta/pixieplus/app/blob-private.h	2005-03-29 14:48:11.333527424 +0200
@@ -0,0 +1,102 @@
+/*
+  Copyright 1999-2005 ImageMagick Studio LLC, a non-profit organization
+  dedicated to making software imaging solutions freely available.
+  
+  You may not use this file except in compliance with the License.
+  obtain a copy of the License at
+  
+    http://www.imagemagick.org/www/Copyright.html
+  
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+
+  ImageMagick Binary Large OBjects private methods.
+*/
+#ifndef _MAGICK_BLOB_PRIVATE_H
+#define _MAGICK_BLOB_PRIVATE_H
+
+#if defined(__cplusplus) || defined(c_plusplus)
+extern "C" {
+#endif
+
+#include "magick/image.h"
+#include "magick/stream.h"
+
+#if !defined(MagickMaxBufferSize)
+#define MagickMaxBufferSize  0x3c005UL
+#endif
+
+typedef enum
+{
+  UndefinedBlobMode,
+  ReadBlobMode,
+  ReadBinaryBlobMode,
+  WriteBlobMode,
+  WriteBinaryBlobMode,
+  IOBinaryBlobMode
+} BlobMode;
+
+typedef int
+  *(*BlobFifo)(const Image *,const void *,const size_t);
+
+typedef struct _BlobInfo
+  BlobInfo;
+
+extern MagickExport BlobInfo
+  *CloneBlobInfo(const BlobInfo *),
+  *ReferenceBlob(BlobInfo *);
+
+extern MagickExport char
+  *ReadBlobString(Image *,char *);
+
+extern MagickExport int
+  EOFBlob(const Image *),
+  ReadBlobByte(Image *),
+  SyncBlob(Image *);
+
+extern MagickExport  MagickBooleanType
+  OpenBlob(const ImageInfo *,Image *,const BlobMode,ExceptionInfo *),
+  UnmapBlob(void *,const size_t);
+
+extern MagickExport MagickOffsetType
+  SeekBlob(Image *,const MagickOffsetType,const int),
+  TellBlob(const Image *image);
+
+extern MagickExport ssize_t
+  ReadBlob(Image *,const size_t,unsigned char *),
+  WriteBlob(Image *,const size_t,const unsigned char *),
+  WriteBlobByte(Image *,const unsigned char),
+  WriteBlobLSBLong(Image *,const unsigned long),
+  WriteBlobLSBShort(Image *,const unsigned short),
+  WriteBlobMSBLong(Image *,const unsigned long),
+  WriteBlobMSBShort(Image *,const unsigned short),
+  WriteBlobString(Image *,const char *);
+
+extern MagickExport unsigned char
+  *DetachBlob(BlobInfo *),
+  *ImageToBlob(const ImageInfo *,Image *,size_t *,ExceptionInfo *),
+  *MapBlob(int,const MapMode,const MagickOffsetType,const size_t);
+
+extern MagickExport unsigned long
+  ReadBlobLSBLong(Image *),
+  ReadBlobMSBLong(Image *);
+
+extern MagickExport unsigned short
+  ReadBlobLSBShort(Image *),
+  ReadBlobMSBShort(Image *);
+
+extern MagickExport void
+  AttachBlob(BlobInfo *,const void *,const size_t),
+  CloseBlob(Image *),
+  GetBlobInfo(BlobInfo *),
+  MSBOrderLong(unsigned char *,const size_t),
+  MSBOrderShort(unsigned char *,const size_t);
+
+#if defined(__cplusplus) || defined(c_plusplus)
+}
+#endif
+
+#endif
diff -urN pixieplus.orig/kdenonbeta/pixieplus/app/compressedgif.cpp pixieplus/kdenonbeta/pixieplus/app/compressedgif.cpp
--- pixieplus.orig/kdenonbeta/pixieplus/app/compressedgif.cpp	2005-03-29 14:47:27.297221960 +0200
+++ pixieplus/kdenonbeta/pixieplus/app/compressedgif.cpp	2005-03-29 14:49:30.962421992 +0200
@@ -9,6 +9,10 @@
 #include <magick/api.h>
 #include <assert.h>
 
+#include "blob-private.h"
+#include "image-private.h"
+#include "exception-private.h"
+
 #ifndef False
 #define False 0
 #endif
diff -urN pixieplus.orig/kdenonbeta/pixieplus/app/exception-private.h pixieplus/kdenonbeta/pixieplus/app/exception-private.h
--- pixieplus.orig/kdenonbeta/pixieplus/app/exception-private.h	1970-01-01 01:00:00.000000000 +0100
+++ pixieplus/kdenonbeta/pixieplus/app/exception-private.h	2005-03-29 14:48:34.611988560 +0200
@@ -0,0 +1,92 @@
+/*
+  Copyright 1999-2005 ImageMagick Studio LLC, a non-profit organization
+  dedicated to making software imaging solutions freely available.
+  
+  You may not use this file except in compliance with the License.
+  obtain a copy of the License at
+  
+    http://www.imagemagick.org/www/Copyright.html
+  
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+
+  ImageMagick private exception methods.
+*/
+#ifndef _MAGICK_EXCEPTION_PRIVATE_H
+#define _MAGICK_EXCEPTION_PRIVATE_H
+
+#if defined(__cplusplus) || defined(c_plusplus)
+extern "C" {
+#endif
+
+#include "magick/log.h"
+
+#define ThrowBinaryException(severity,tag,context) \
+{ \
+  if (image != (Image *) NULL) \
+    (void) ThrowMagickException(&image->exception,GetMagickModule(),severity, \
+      tag,"`%s'",context); \
+  return(MagickFalse); \
+}
+#define ThrowFileException(exception,severity,tag,context) \
+  (void) ThrowMagickException(exception,GetMagickModule(),severity,tag, \
+    "`%s': %s",context,strerror(errno));
+#define ThrowImageException(severity,tag) \
+{ \
+  (void) ThrowMagickException(exception,GetMagickModule(),severity,tag, \
+    "`%s'",image->filename); \
+  return((Image *) NULL); \
+}
+#define ThrowMagickFatalException(severity,tag,context) \
+{ \
+  ExceptionInfo \
+    exception; \
+ \
+  GetExceptionInfo(&exception); \
+  (void) ThrowMagickException(&exception,GetMagickModule(),severity,tag, \
+    "`%s'",context); \
+  CatchException(&exception); \
+  DestroyExceptionInfo(&exception); \
+}
+#define ThrowReaderException(severity,tag) \
+{ \
+  (void) ThrowMagickException(exception,GetMagickModule(),severity,tag, \
+    "`%s'",image_info->filename); \
+  if ((image) != (Image *) NULL) \
+    { \
+      CloseBlob(image); \
+      image=DestroyImageList(image); \
+    } \
+  return((Image *) NULL); \
+}
+#define ThrowWriterException(severity,tag) \
+{ \
+  assert(image != (Image *) NULL); \
+  (void) ThrowMagickException(&image->exception,GetMagickModule(),severity, \
+    tag,"`%s'",image->filename); \
+  if (image_info->adjoin != MagickFalse) \
+    while (image->previous != (Image *) NULL) \
+      image=image->previous; \
+  CloseBlob(image); \
+  return(MagickFalse); \
+}
+#define ThrowXWindowException(severity,tag,context) \
+{ \
+  ExceptionInfo \
+    exception; \
+ \
+  GetExceptionInfo(&exception); \
+  (void) ThrowMagickException(&exception,GetMagickModule(),severity,tag, \
+    "`%s'",context); \
+  CatchException(&exception); \
+  DestroyExceptionInfo(&exception); \
+}
+
+#if defined(__cplusplus) || defined(c_plusplus)
+}
+#endif
+
+#endif
diff -urN pixieplus.orig/kdenonbeta/pixieplus/app/image-private.h pixieplus/kdenonbeta/pixieplus/app/image-private.h
--- pixieplus.orig/kdenonbeta/pixieplus/app/image-private.h	1970-01-01 01:00:00.000000000 +0100
+++ pixieplus/kdenonbeta/pixieplus/app/image-private.h	2005-03-29 14:48:40.193140096 +0200
@@ -0,0 +1,50 @@
+/*
+  Copyright 1999-2005 ImageMagick Studio LLC, a non-profit organization
+  dedicated to making software imaging solutions freely available.
+  
+  You may not use this file except in compliance with the License.
+  obtain a copy of the License at
+  
+    http://www.imagemagick.org/www/Copyright.html
+  
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+
+  ImageMagick private image methods.
+*/
+#ifndef _MAGICK_IMAGE_PRIVATE_H
+#define _MAGICK_IMAGE_PRIVATE_H
+
+#if defined(__cplusplus) || defined(c_plusplus)
+extern "C" {
+#endif
+
+extern MagickExport const char
+  *BackgroundColor,
+  *BorderColor,
+  *DefaultTileFrame,
+  *DefaultTileGeometry,
+  *DefaultTileLabel,
+  *ForegroundColor,
+  *MatteColor,
+  *LoadImageTag,
+  *LoadImagesTag,
+  *PSDensityGeometry,
+  *PSPageGeometry,
+  *SaveImageTag,
+  *SaveImagesTag;
+
+extern MagickExport const double
+  DefaultResolution;
+
+extern MagickExport const unsigned long
+  UndefinedCompressionQuality;
+
+#if defined(__cplusplus) || defined(c_plusplus)
+}
+#endif
+
+#endif

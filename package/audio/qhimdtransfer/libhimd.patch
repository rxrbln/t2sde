# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../qhimdtransfer/libhimd.patch
# Copyright (C) 2017 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

fix to acutally use the last avialble index file.

	- Ren√© Rebe <rene@exactcode.de>

diff --git a/libhimd/himd.c b/libhimd/himd.c
index 9695ed5..c0c6e51 100644
--- a/libhimd/himd.c
+++ b/libhimd/himd.c
@@ -87,39 +87,38 @@ static int scanforatdata(GDir * dir)
 static int scanfortif(GDir * dir, int* oldnum, int *newnum)
 {
     const char * hmafile;
-    int found_unused=FALSE, found_used=FALSE;
+    int found_unused=-1, found_used=-1;
     int old_datanum, new_datanum;
 
     while((hmafile = g_dir_read_name(dir)) != NULL)
     {
 	// Look for old version
-	if(!found_unused)
-	    {
-		if(g_ascii_strncasecmp(hmafile,"_rkidx0",7) == 0 &&
-		   strlen(hmafile) == 12 &&
-		   isxdigit(hmafile[7]) &&
-		   g_ascii_strncasecmp(hmafile+8,".hma",4) == 0)
-		    {
-			sscanf(hmafile+7,"%x",&old_datanum);
+	if(g_ascii_strncasecmp(hmafile,"_rkidx0",7) == 0 &&
+	   strlen(hmafile) == 12 &&
+	   isxdigit(hmafile[7]) &&
+	   g_ascii_strncasecmp(hmafile+8,".hma",4) == 0)
+	{
+		sscanf(hmafile+7,"%x",&old_datanum);
+		if (old_datanum > found_unused) {
 			*oldnum = old_datanum;
-			found_unused = TRUE;
-		    }
-	    }
+			found_unused = old_datanum;
+		}
+	}
 	// Look for current version
-	if(!found_used)
-	    {
-		if(g_ascii_strncasecmp(hmafile,"trkidx0",7) == 0 &&
-		   strlen(hmafile) == 12 &&
-		   isxdigit(hmafile[7]) &&
-		   g_ascii_strncasecmp(hmafile+8,".hma",4) == 0)
-		    {
-			sscanf(hmafile+7,"%x",&new_datanum);
+	if(g_ascii_strncasecmp(hmafile,"trkidx0",7) == 0 &&
+	   strlen(hmafile) == 12 &&
+	   isxdigit(hmafile[7]) &&
+	   g_ascii_strncasecmp(hmafile+8,".hma",4) == 0)
+	{
+		sscanf(hmafile+7,"%x",&new_datanum);
+		if (new_datanum > found_unused) {
 			*newnum = new_datanum;
-			found_used = TRUE;
-		    }
-	    }
+			found_used = new_datanum;
+		}
+	}
     }
-    return (FALSE || found_unused || found_used);
+
+    return (FALSE || found_unused >= 0 || found_used >= 0);
 }
 
 static void nong_inplace_ascii_down(gchar * string)

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../rezound/gcc41.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- rezound-0.12.2beta/src/misc/CNestedDataFile/anytype.h.vanilla	2006-03-04 19:55:28.559323250 +0100
+++ rezound-0.12.2beta/src/misc/CNestedDataFile/anytype.h	2006-03-04 20:08:36.228549500 +0100
@@ -93,6 +93,7 @@
 // I really wished that I didn't have to explicitly use 'vector' in the definition; I'd have like to use any container with an iterator interface
 #include <CMutex.h>
 #include <CNestedDataFile/CNestedDataFile.h>
+extern int cfg_parse();
 template<class Type> static const vector<Type> &string_to_anytype(const string &str,vector<Type> &ret)
 {
 	// This function has to parse '{' ..., ... '}' where the ... can contain nested array
--- rezound-0.12.2beta/src/frontend_fox/CMetersWindow.cpp.vanilla	2006-03-05 15:37:25.240988250 +0100
+++ rezound-0.12.2beta/src/frontend_fox/CMetersWindow.cpp	2006-03-05 15:40:24.508191750 +0100
@@ -82,7 +82,7 @@
 {
 	FXDECLARE(CLevelMeter);
 public:
-	CLevelMeter::CLevelMeter(FXComposite *parent) :
+	CLevelMeter(FXComposite *parent) :
 		FXHorizontalFrame(parent,LAYOUT_FILL_X|LAYOUT_FIX_HEIGHT|LAYOUT_TOP | FRAME_NONE,0,0,0,0, 0,0,0,0, 0,0),
 		statusFont(getApp()->getNormalFont()),
 		canvas(new FXCanvas(this,this,ID_CANVAS,FRAME_NONE | LAYOUT_FILL_X|LAYOUT_FILL_Y)),
@@ -121,7 +121,7 @@
 
 	}
 
-	CLevelMeter::~CLevelMeter()
+	~CLevelMeter()
 	{
 		delete statusFont;
 	}
@@ -133,7 +133,7 @@
 		setHeight(max(statusFont->getFontHeight(),MIN_METER_HEIGHT)); // make meter only as tall as necessary (also with a defined minimum)
 	}
 
-	long CLevelMeter::onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		FXDCWindow dc(canvas);
 
@@ -327,7 +327,7 @@
 {
 	FXDECLARE(CBalanceMeter);
 public:
-	CBalanceMeter::CBalanceMeter(FXComposite *parent) :
+	CBalanceMeter(FXComposite *parent) :
 		FXHorizontalFrame(parent,LAYOUT_FILL_X|LAYOUT_FIX_HEIGHT | FRAME_NONE, 0,0,0,0, 0,0,0,0, 0,0),
 		statusFont(getApp()->getNormalFont()),
 		leftLabel(new FXLabel(this,"-1.0")),
@@ -361,7 +361,7 @@
 
 	}
 
-	CBalanceMeter::~CBalanceMeter()
+	~CBalanceMeter()
 	{
 		delete statusFont;
 	}
@@ -372,7 +372,7 @@
 		setHeight(max(statusFont->getFontHeight(),MIN_METER_HEIGHT)); // make meter only as tall as necessary (also with a defined minimum)
 	}
 
-	long CBalanceMeter::onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		FXDCWindow dc(canvas);
 
@@ -478,7 +478,7 @@
 {
 	FXDECLARE(CStereoPhaseMeter);
 public:
-	CStereoPhaseMeter::CStereoPhaseMeter(FXComposite *parent,sample_t *_samplingBuffer,size_t _samplingNFrames,unsigned _samplingNChannels,unsigned _samplingLeftChannel,unsigned _samplingRightChannel) :
+	CStereoPhaseMeter(FXComposite *parent,sample_t *_samplingBuffer,size_t _samplingNFrames,unsigned _samplingNChannels,unsigned _samplingLeftChannel,unsigned _samplingRightChannel) :
 		FXHorizontalFrame(parent,LAYOUT_RIGHT|LAYOUT_FIX_WIDTH|LAYOUT_FILL_Y, 0,0,0,0, 0,0,0,0, 0,0),
 		canvasFrame(new FXVerticalFrame(this,LAYOUT_FILL_X|LAYOUT_FILL_Y|FRAME_SUNKEN|FRAME_THICK,0,0,0,0, 2,2,2,2, 0,1)),
 			canvas(new FXBackBufferedCanvas(canvasFrame,this,ID_CANVAS,LAYOUT_FILL_X|LAYOUT_FILL_Y)),
@@ -519,19 +519,19 @@
 		statusFont=new FXFont(getApp(),d);
 	}
 
-	CStereoPhaseMeter::~CStereoPhaseMeter()
+	~CStereoPhaseMeter()
 	{
 		delete statusFont;
 	}
 
-	long CStereoPhaseMeter::onZoomDial(FXObject *sender,FXSelector sel,void *ptr)
+	long onZoomDial(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		zoom=((float)zoomDial->getValue())/100.0f;
 		canvas->update(); // not really necessary since we're doing it several times a second anyway
 		return 1;
 	}
 
-	long CStereoPhaseMeter::onResize(FXObject *sender,FXSelector sel,void *ptr)
+	long onResize(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		// make square
 		resize(getHeight()+getHSpacing()+zoomDial->getWidth(),getHeight());
@@ -540,7 +540,7 @@
 		return 1;
 	}
 
-	long CStereoPhaseMeter::onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		FXColor *data=(FXColor *)canvas->getBackBufferData();
 
@@ -730,7 +730,7 @@
 {
 	FXDECLARE(CAnalyzer);
 public:
-	CAnalyzer::CAnalyzer(FXComposite *parent) :
+	CAnalyzer(FXComposite *parent) :
 		FXHorizontalFrame(parent,LAYOUT_RIGHT|LAYOUT_FILL_Y, 0,0,0,0, 0,0,0,0, 0,0),
 		canvasFrame(new FXVerticalFrame(this,LAYOUT_FIX_WIDTH|LAYOUT_FILL_Y|FRAME_SUNKEN|FRAME_THICK,0,0,0,0, 2,2,2,2, 0,1)),
 			canvas(new FXBackBufferedCanvas(canvasFrame,this,ID_CANVAS,LAYOUT_FILL_X|LAYOUT_FILL_Y)),
@@ -763,25 +763,25 @@
 		canvasFrame->setWidth(150);
 	}
 
-	CAnalyzer::~CAnalyzer()
+	~CAnalyzer()
 	{
 		delete statusFont;
 	}
 
-	long CAnalyzer::onZoomDial(FXObject *sender,FXSelector sel,void *ptr)
+	long onZoomDial(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		zoom=zoomDial->getValue();
 		canvas->update(); // not really necessary since we're doing it several times a second anyway
 		return 1;
 	}
 
-	long CAnalyzer::onZoomDialDefault(FXObject *sender,FXSelector sel,void *ptr)
+	long onZoomDialDefault(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		zoomDial->setValue(25);
 		return onZoomDial(sender,sel,ptr);
 	}
 
-	long CAnalyzer::onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		FXDC &dc=*((FXDC*)ptr); // back buffered canvases send the DC to draw onto in ptr
 
@@ -865,19 +865,19 @@
 		return 1;
 	}
 
-	long CAnalyzer::onCanvasEnter(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasEnter(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		drawBarFreq=true;
 		return onCanvasMotion(sender,sel,ptr);
 	}
 
-	long CAnalyzer::onCanvasLeave(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasLeave(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		drawBarFreq=false;
 		return onCanvasMotion(sender,sel,ptr);
 	}
 
-	long CAnalyzer::onCanvasMotion(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasMotion(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		barFreqIndex=((FXEvent *)ptr)->win_x/ANALYZER_BAR_WIDTH;
 		return 1;
--- rezound-0.12.2beta/src/frontend_fox/FileActionDialogs.h.vanilla	2006-03-05 15:35:42.134544500 +0100
+++ rezound-0.12.2beta/src/frontend_fox/FileActionDialogs.h	2006-03-05 15:36:12.788460250 +0100
@@ -87,7 +87,7 @@
 	long onDetectDeviceButton(FXObject *object,FXSelector sel,void *ptr);
 
 protected:
-	CBurnToCDDialog::CBurnToCDDialog() {}
+	CBurnToCDDialog() {}
 
 	const string getExplanation() const;
 };
@@ -111,7 +111,7 @@
 	long onRemoveButton(FXObject *object,FXSelector sel,void *ptr);
 
 protected:
-	CRunMacroDialog::CRunMacroDialog() {}
+	CRunMacroDialog() {}
 
 };
 

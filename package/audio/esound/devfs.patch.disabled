# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../esound/devfs.patch.disabled
# Copyright (C) 2004 - 2005 The T2 SDE Project
# Copyright (C) 1998 - 2003 ROCK Linux Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- ./docs/html/miscellaneous.html.orig	Wed Mar 21 14:32:34 2001
+++ ./docs/html/miscellaneous.html	Wed Mar 21 14:32:34 2001
@@ -138,7 +138,7 @@
 
 	added network support
 
-	optional /dev/dsp fallback for stream play and record
+	optional /dev/sound/dsp fallback for stream play and record
 
 	other forgotten features and bug fixes
 
--- ./docs/html/planned-development.html.orig	Wed Mar 21 14:32:34 2001
+++ ./docs/html/planned-development.html	Wed Mar 21 14:32:34 2001
@@ -69,7 +69,7 @@
 ></H1
 ><P
 >	Porting of more sound playing applications.  For sound programs that
-	send their output to /dev/dsp, this is usually a trivial process.
+	send their output to /dev/sound/dsp, this is usually a trivial process.
 	Anyone willing to lend a hand in this effort will be duly appreciated.
       </P
 ></DIV
--- ./docs/esound.sgml.orig	Wed Mar 21 14:32:33 2001
+++ ./docs/esound.sgml	Wed Mar 21 14:32:33 2001
@@ -543,7 +543,7 @@
 
 	added network support
 
-	optional /dev/dsp fallback for stream play and record
+	optional /dev/sound/dsp fallback for stream play and record
 
 	other forgotten features and bug fixes
 
@@ -586,7 +586,7 @@
 
       <para>
 	Porting of more sound playing applications.  For sound programs that
-	send their output to /dev/dsp, this is usually a trivial process.
+	send their output to /dev/sound/dsp, this is usually a trivial process.
 	Anyone willing to lend a hand in this effort will be duly appreciated.
       </para>
 
--- ./AUTHORS.orig	Wed Mar 21 14:32:28 2001
+++ ./AUTHORS	Wed Mar 21 14:32:28 2001
@@ -51,7 +51,7 @@
     Jimmy Olsen <jo@hrp.no>: hpux driver fixes
 
     Manish Singh <yosh@gimp.org>: misc autoconf hackery, the magic
-    /dev/dsp to esd rerouter.
+    /dev/sound/dsp to esd rerouter.
 
     Philippe Defert: aix driver fixes
 
--- ./ChangeLog.orig	Wed Mar 21 14:32:28 2001
+++ ./ChangeLog	Wed Mar 21 14:32:28 2001
@@ -93,7 +93,7 @@
 
 1999-10-11  Drazen Kacar  <dave@srce.hr>
 
-	* audio_solaris.c: Don't spit warnings if /dev/audio doesn't
+	* audio_solaris.c: Don't spit warnings if /dev/sound/audio doesn't
 	exist. User probably knows he doesn't have a sound card.
 
 1999-10-06  Russell Steinthal  <rms39@columbia.edu>
@@ -345,8 +345,8 @@
 
 Mon Jan 25 03:16:30 PST 1999 Manish Singh <yosh@gimp.org>
 
-	* esddsp.c: added a /dev/mixer wrapper. Set ESDDSP_MIXER=1 to
-	for all /dev/mixer access to be trapped. It will save and load
+	* esddsp.c: added a /dev/sound/mixer wrapper. Set ESDDSP_MIXER=1 to
+	for all /dev/sound/mixer access to be trapped. It will save and load
 	the mixer settings in ~/.esddsp.{name}.
 
 1999-01-25  Yo Ric Dude  <ericmit@ix.netcom.com>
@@ -670,7 +670,7 @@
 
 	* esddsp.c: somewhat of a rewrite. We only try to use esound
 	if an open() fails. This lets the no esound case fall back to
-	/dev/dsp, and also doesn't do a strcmp on every call to open.
+	/dev/sound/dsp, and also doesn't do a strcmp on every call to open.
 	Got rid of the varargs junk in ioctl, I've never seen an ioctl
 	with more than one extra arg anyway (please tell me if I'm wrong).
 	Reworked the code, so we're not so x11amp specific, i.e. the
@@ -702,7 +702,7 @@
 1998-10-17  Yo Ric Dude  <ericmit@ix.netcom.com>
 
 	* esddsp.c: added Yosh's slick trick for transparently
-	rerouting /dev/dsp to esd.  Only tested with Linux and
+	rerouting /dev/sound/dsp to esd.  Only tested with Linux and
 	x11amp.  Directions are in the source file for the brave.
 
 Sat Oct 17 02:20:42 PDT 1998 Manish Singh <yosh@gimp.org>
@@ -1112,7 +1112,7 @@
 1998-05-24  Yo 'Ric Dude  <ericmit@ix.netcom.com>
 
 	* clients.c, esd.c, esdlib.c: 
-	added ability to free and reclaim /dev/dsp for use by other
+	added ability to free and reclaim /dev/sound/dsp for use by other
 	programs, without invalidating any sample references within
 	the daemon.  sound output is consumed by daemon, and ignored
  	until the daemon is resumed.  created esd_lock() and esd_unlock() 
@@ -1154,7 +1154,7 @@
 Sat Apr 25 03:03:11 1998  Yo 'Ric Dude  <ericmit@ix.netcom.com>
 
 	* TODO, audio.c, clients.c, esd.h, esdcat.c, esdlib.c, esdrec.c:
-	added the /dev/dsp fallback feature to client lib
+	added the /dev/sound/dsp fallback feature to client lib
 
 Sat Apr 18 23:57:15 1998  Yo 'Ric Dude  <ericmit@ix.netcom.com>
 
--- ./NEWS.orig	Wed Mar 21 14:32:28 2001
+++ ./NEWS	Wed Mar 21 14:32:29 2001
@@ -11,7 +11,7 @@
 New Stuff in EsounD version 0.2:
 
 o  esd_play_stream_fallback, esd_record_stream_fallback 
-	- if default esd is not available, revert to /dev/dsp
+	- if default esd is not available, revert to /dev/sound/dsp
 	for playback/record
 
 o  esd_open_sound
--- ./esddsp.in.orig	Wed Mar 21 14:32:29 2001
+++ ./esddsp.in	Wed Mar 21 14:32:29 2001
@@ -87,7 +87,7 @@
     echo "command line:  $@"
 fi
 
-# setup esd to hijack calls made to /dev/dsp
+# setup esd to hijack calls made to /dev/sound/dsp
 prefix=@prefix@
 exec_prefix=@exec_prefix@
 libdir=@libdir@
--- ./esddsp.c.orig	Wed Mar 21 14:32:30 2001
+++ ./esddsp.c	Wed Mar 21 14:32:30 2001
@@ -183,7 +183,7 @@
   mode = va_arg (args, mode_t);
   va_end (args);
 
-  if (!strcmp (pathname, "/dev/dsp"))
+  if (!strcmp (pathname, "/dev/sound/dsp"))
     {
       if (!getenv ("ESPEAKER"))
 	{
@@ -194,13 +194,13 @@
 	    return ret;
 	}
 
-      DPRINTF ("hijacking /dev/dsp open, and taking it to esd...\n");
+      DPRINTF ("hijacking /dev/sound/dsp open, and taking it to esd...\n");
       settings = done = 0;
       return (sndfd = esd_open_sound (NULL));
     }
-  else if (use_mixer && !strcmp (pathname, "/dev/mixer"))
+  else if (use_mixer && !strcmp (pathname, "/dev/sound/mixer"))
     {
-      DPRINTF ("hijacking /dev/mixer open, and taking it to esd...\n");
+      DPRINTF ("hijacking /dev/sound/mixer open, and taking it to esd...\n");
       return (mixfd = (*func) (mixer, O_RDWR | O_CREAT, S_IRUSR | S_IWUSR));
     }
   else
@@ -215,7 +215,7 @@
 
   int *arg = (int *) argp;
 
-  DPRINTF ("hijacking /dev/dsp ioctl, and sending it to esd "
+  DPRINTF ("hijacking /dev/sound/dsp ioctl, and sending it to esd "
 	   "(%d : %x - %p)\n", fd, request, argp);
   
   switch (request)
@@ -262,7 +262,7 @@
 
 
     default:
-      DPRINTF ("unhandled /dev/dsp ioctl (%x - %p)\n", request, argp);
+      DPRINTF ("unhandled /dev/sound/dsp ioctl (%x - %p)\n", request, argp);
       break;
     }
 
@@ -310,7 +310,7 @@
 
   int *arg = (int *) argp;
 
-  DPRINTF ("hijacking /dev/mixer ioctl, and sending it to esd "
+  DPRINTF ("hijacking /dev/sound/mixer ioctl, and sending it to esd "
 	   "(%d : %x - %p)\n", fd, request, argp);
 
   switch (request)
@@ -369,7 +369,7 @@
       break;
 
     default:
-      DPRINTF ("unhandled /dev/mixer ioctl (%x - %p)\n", request, argp);
+      DPRINTF ("unhandled /dev/sound/mixer ioctl (%x - %p)\n", request, argp);
       break;
     }
 
--- ./esdlib.c.orig	Wed Mar 21 14:32:30 2001
+++ ./esdlib.c	Wed Mar 21 14:32:30 2001
@@ -814,7 +814,7 @@
     if ( host )
 	return -1;
 
-    /* go for /dev/dsp */
+    /* go for /dev/sound/dsp */
     esd_audio_format = format;
     esd_audio_rate = rate;
     socket_out = esd_audio_open();
@@ -1079,7 +1079,7 @@
     if ( host )
 	return -1;
 
-    /* go for /dev/dsp */
+    /* go for /dev/sound/dsp */
     esd_audio_format = format;
     esd_audio_rate = rate;
     socket_out = esd_audio_open();
--- ./audio.c.orig	Wed Mar 21 14:32:30 2001
+++ ./audio.c	Wed Mar 21 14:32:30 2001
@@ -12,9 +12,9 @@
 /* globals */
 esd_format_t esd_audio_format = ESD_BITS16 | ESD_STEREO;
 int esd_audio_rate = ESD_DEFAULT_RATE;
-char *esd_audio_device = NULL; /* aux device spec: /dev/dsp2, lineout, etc. */
+char *esd_audio_device = NULL; /* aux device spec: /dev/sound/dsp2, lineout, etc. */
 
-/* the audio device, /dev/dsp, file descriptor */
+/* the audio device, /dev/sound/dsp, file descriptor */
 static int esd_audio_fd = -1;
 
 /*******************************************************************/
--- ./audio_hpux.c.orig	Wed Mar 21 14:32:31 2001
+++ ./audio_hpux.c	Wed Mar 21 14:32:31 2001
@@ -10,7 +10,7 @@
 #define ARCH_esd_audio_open
 int esd_audio_open()
 {
-    const char *device = "/dev/audio";
+    const char *device = "/dev/sound/audio";
 
     int afd = -1;
     int mode = O_WRONLY;
--- ./audio_oss.c.orig	Wed Mar 21 14:32:31 2001
+++ ./audio_oss.c	Wed Mar 21 14:32:31 2001
@@ -19,7 +19,7 @@
 #define ARCH_esd_audio_devices
 const char *esd_audio_devices()
 {
-    return "/dev/dsp, /dev/dsp2, etc.";
+    return "/dev/sound/dsp, /dev/sound/dsp2, etc.";
 }
 
 
@@ -38,7 +38,7 @@
     mode |= O_NONBLOCK;
 
     /* open the sound device */
-    device = esd_audio_device ? esd_audio_device : "/dev/dsp";
+    device = esd_audio_device ? esd_audio_device : "/dev/sound/dsp";
     if ((afd = open(device, mode, 0)) == -1)
     {   /* Opening device failed */
         perror(device);
--- ./audio_mklinux.c.orig	Wed Mar 21 14:32:31 2001
+++ ./audio_mklinux.c	Wed Mar 21 14:32:31 2001
@@ -11,7 +11,7 @@
 #define ARCH_esd_audio_open
 int esd_audio_open()
 {
-    const char *device = "/dev/dsp";
+    const char *device = "/dev/sound/dsp";
 
     int afd = -1, value = 0, test = 0;
     int mode = O_WRONLY;
--- ./audio_solaris.c.orig        Mon Sep 10 02:56:35 2001
+++ ./audio_solaris.c     Fri Oct  5 12:42:32 2001
@@ -19,7 +19,7 @@
 /* if you want to confirm proper device setup, uncomment the following line */
 /* #define ESDBG_DRIVER */
 
-static char *default_device = "/dev/audio";
+static char *default_device = "/dev/sound/audio";
 
 static char *my_ports = NULL;
 
--- ./esd.c.orig	Wed Mar 21 14:32:31 2001
+++ ./esd.c	Wed Mar 21 14:32:31 2001
@@ -620,7 +620,7 @@
     esd_audio_rate = default_rate;
     ESD_AUDIO_STUFF;
 
-  /* open and initialize the audio device, /dev/dsp */
+  /* open and initialize the audio device, /dev/sound/dsp */
   itmp = esd_audio_open();
   if (itmp == -2) { /* Special return value indicates open of device failed, don't bother
 		       trying */
--- ./esd.h.orig	Wed Mar 21 14:32:32 2001
+++ ./esd.h	Wed Mar 21 14:32:32 2001
@@ -53,9 +53,9 @@
     ESD_PROTO_SAMPLE_STOP,  /* stop a looping sample when done */
     ESD_PROTO_SAMPLE_KILL,  /* stop the looping sample immed. */
 
-    /* free and reclaim /dev/dsp functionality */
-    ESD_PROTO_STANDBY,	    /* release /dev/dsp and ignore all data */
-    ESD_PROTO_RESUME,	    /* reclaim /dev/dsp and play sounds again */
+    /* free and reclaim /dev/sound/dsp functionality */
+    ESD_PROTO_STANDBY,	    /* release /dev/sound/dsp and ignore all data */
+    ESD_PROTO_RESUME,	    /* reclaim /dev/sound/dsp and play sounds again */
 
     /* TODO: move these to a more logical place. NOTE: will break the protocol */
     ESD_PROTO_SAMPLE_GETID, /* get the ID for an already-cached sample */
@@ -141,7 +141,7 @@
 int esd_resume( int esd );
 
 /* open a socket for playing, monitoring, or recording as a stream */
-/* the *_fallback functions try to open /dev/dsp if there's no EsounD */
+/* the *_fallback functions try to open /dev/sound/dsp if there's no EsounD */
 int esd_play_stream( esd_format_t format, int rate, 
 		     const char *host, const char *name );
 int esd_play_stream_fallback( esd_format_t format, int rate, 
--- ./TIPS.orig	Wed Mar 21 14:32:33 2001
+++ ./TIPS	Wed Mar 21 14:32:33 2001
@@ -47,7 +47,7 @@
 
 To make sure the recoding works, try this WITHOUT esd running:
 
-dd bs=8k count=4 </dev/audio > sample.au
+dd bs=8k count=4 </dev/sound/audio > sample.au
 
 
 Cthugha - An Oscilloscope on Acid
@@ -60,7 +60,7 @@
     esdmon > /tmp/cthugha.com
 
 NOTE: xcthugha may complain about:
-Can't open `/dev/dsp' for writing. (16 - Device or resource busy)
+Can't open `/dev/sound/dsp' for writing. (16 - Device or resource busy)
 No problem, keep on truckin'. esd gets the sound device, and 
 cthugha gets the data it needs.
 

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../spiralsynthmodular/gcc41.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

diff -Nur SpiralSynthModular-0.1.1-orig/SpiralSound/Sample.h SpiralSynthModular-0.1.1/SpiralSound/Sample.h
--- SpiralSynthModular-0.1.1-orig/SpiralSound/Sample.h	2002-07-28 23:18:14.000000000 +0000
+++ SpiralSynthModular-0.1.1/SpiralSound/Sample.h	2006-04-01 20:54:24.247417750 +0000
@@ -67,7 +67,7 @@
 	void CropTo(int NewLength);
 	bool IsEmpty() const { return m_IsEmpty; }
 
-	inline float &Sample::operator[](int i) const
+	inline float &operator[](int i) const
 	{		
 		#ifdef DEBUG
 			assert(i>=0 && i<m_Length);
@@ -76,7 +76,7 @@
 	}
 
 	// Linear interpolated
-	inline float Sample::operator[](float i) const
+	inline float operator[](float i) const
 	{		
 		int ii=(int)i;
 		
@@ -90,7 +90,7 @@
 	}
 
 
-	inline void Sample::Set(int i, float v) 
+	inline void Set(int i, float v) 
 	{	
 		m_IsEmpty=false;
 		#ifdef DEBUG
@@ -99,7 +99,7 @@
 		m_Data[i]=v;
 	}	
 	
-	inline Sample &Sample::operator=(const Sample &rhs)
+	inline Sample &operator=(const Sample &rhs)
 	{
 		Allocate(rhs.GetLength());		
 		memcpy(m_Data,rhs.GetBuffer(),GetLengthInBytes());

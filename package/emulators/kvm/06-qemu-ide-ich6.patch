# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../kvm/06-qemu-ide-ich6.patch
# Copyright (C) 2010 - 2011 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---


Index: qemu-kvm-0.12.1.2/hw/ide.h
===================================================================
--- qemu-kvm-0.12.1.2.orig/hw/ide.h
+++ qemu-kvm-0.12.1.2/hw/ide.h
@@ -12,6 +12,7 @@ void pci_cmd646_ide_init(PCIBus *bus, Dr
                          int secondary_ide_enabled);
 PCIDevice *pci_piix3_ide_init(PCIBus *bus, DriveInfo **hd_table, int devfn);
 PCIDevice *pci_piix4_ide_init(PCIBus *bus, DriveInfo **hd_table, int devfn);
+PCIDevice *pci_ich6_ide_init(PCIBus *bus, DriveInfo **hd_table, int devfn);
 void vt82c686b_ide_init(PCIBus *bus, DriveInfo **hd_table, int devfn);
 
 /* ide-macio.c */
Index: qemu-kvm-0.12.1.2/hw/ide/piix.c
===================================================================
--- qemu-kvm-0.12.1.2.orig/hw/ide/piix.c
+++ qemu-kvm-0.12.1.2/hw/ide/piix.c
@@ -155,6 +155,29 @@ static int pci_piix4_ide_initfn(PCIDevic
     return pci_piix_ide_initfn(d);
 }
 
+static int pci_ich6_ide_initfn(PCIDevice *dev)
+{
+    uint8_t *pci_conf;
+    PCIIDEState *d = DO_UPCAST(PCIIDEState, dev, dev);
+
+    pci_config_set_vendor_id(d->dev.config, PCI_VENDOR_ID_INTEL);
+    pci_config_set_device_id(d->dev.config, PCI_DEVICE_ID_INTEL_ICH6);
+
+    pci_conf = d->dev.config;
+
+    pci_conf[0x09] = 0x80; // legacy ATA mode
+    pci_conf[0x0a] = 0x01; // class_sub = PCI_IDE
+    pci_conf[0x0b] = 0x01; // class_base = PCI_mass_storage
+    pci_conf[0x0e] = 0x00; // header_type
+
+    pci_conf[0x40] = 0;
+    pci_conf[0x41] = 0xf0; // primary port enabled
+    pci_conf[0x42] = 0;
+    pci_conf[0x43] = 0x00; // secondary port disabled
+
+    return pci_piix_ide_initfn(d);
+}
+
 /* hd_table must contain 4 block drivers */
 /* NOTE: for the PIIX3, the IRQs and IOports are hardcoded */
 void pci_piix3_ide_init(PCIBus *bus, DriveInfo **hd_table, int devfn)
@@ -175,6 +198,17 @@ void pci_piix4_ide_init(PCIBus *bus, Dri
     pci_ide_create_devs(dev, hd_table);
 }
 
+/* hd_table must contain 4 block drivers */
+/* NOTE: for the ICH6, the IRQs and IOports are hardcoded */
+PCIDevice *pci_ich6_ide_init(PCIBus *bus, DriveInfo **hd_table, int devfn)
+{
+    PCIDevice *dev;
+
+    dev = pci_create_simple(bus, devfn, "ICH6 IDE");
+    pci_ide_create_devs(dev, hd_table);
+    return dev;
+}
+
 static PCIDeviceInfo piix_ide_info[] = {
     {
         .qdev.name    = "piix3-ide",
@@ -187,6 +220,11 @@ static PCIDeviceInfo piix_ide_info[] = {
         .qdev.no_user = 1,
         .init         = pci_piix4_ide_initfn,
     },{
+        .qdev.name    = "ICH6 IDE",
+        .qdev.size    = sizeof(PCIIDEState),
+        .qdev.no_user = 1,
+        .init         = pci_ich6_ide_initfn,
+    },{
         /* end of list */
     }
 };
Index: qemu-kvm-0.12.1.2/hw/pci_ids.h
===================================================================
--- qemu-kvm-0.12.1.2.orig/hw/pci_ids.h
+++ qemu-kvm-0.12.1.2/hw/pci_ids.h
@@ -88,6 +88,7 @@
 #define PCI_VENDOR_ID_INTEL              0x8086
 #define PCI_DEVICE_ID_INTEL_82441        0x1237
 #define PCI_DEVICE_ID_INTEL_82801AA_5    0x2415
+#define PCI_DEVICE_ID_INTEL_ICH6         0x269e
 #define PCI_DEVICE_ID_INTEL_ESB_9        0x25ab
 #define PCI_DEVICE_ID_INTEL_82371SB_0    0x7000
 #define PCI_DEVICE_ID_INTEL_82371SB_1    0x7010

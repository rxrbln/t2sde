# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../vmware/vmware-install.patch
# Copyright (C) 2008 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- vmware-distrib/vmware-install.pl.orig	2007-05-02 06:52:33.000000000 +0200
+++ vmware-distrib/vmware-install.pl	2007-07-13 12:32:20.000000000 +0200
@@ -192,9 +192,10 @@
 
    if (vmware_product() eq 'wgs' || vmware_product() eq 'ws' ||
        vmware_product() eq 'tools-for-linux') {
-      system(shell_string($gHelper{'depmod'}) . ' -a');
-      my $kvers = direct_command(shell_string($gHelper{'uname'}) . ' -r');
-      chomp($kvers);
+
+      #system(shell_string($gHelper{'depmod'}) . ' -a');
+      my $kvers = $ENV{KVER};
+      print "Kernel Version: $kvers\n";
 
       if (not open(MODULESDEP, "/lib/modules/$kvers/modules.dep")) {
          error("Unable to open kernel module dependency file\n.");
@@ -1634,7 +1634,7 @@
   undef %patch;
   install_dir('./etc', $gRegistryDir, \%patch, 0x1);
 
-  $rootdir = '/usr';
+  $rootdir = '/opt/vmware';
 
   $answer = spacechk_answer('In which directory do you want to install '
                             . 'the executable files?', 'dirpath',
@@ -2048,8 +2048,9 @@
   } elsif (vmware_product() eq 'tools-for-solaris') {
     $rootdir = '/usr';
   } else {
-    $rootdir = '/usr';
+    $rootdir = '/opt/vmware';
   }
+  $rootdir = '/opt/vmware';
   $answer = spacechk_answer('In which directory do you want to '
                             . 'install the binary files?', 'dirpath',
                             $rootdir . '/bin', './bin', 'BINDIR');
@@ -2238,7 +2239,7 @@
   undef %patch;
   install_dir('./etc', $gRegistryDir, \%patch, 0x1);
 
-  $rootdir = '/usr';
+  $rootdir = '/opt/vmware';
 
   $answer = spacechk_answer('In which directory do you want to '
                             . 'install the binary files?', 'dirpath',
@@ -2352,7 +2353,7 @@
   undef %patch;
   install_dir('./etc', $gRegistryDir, \%patch, 0x1);
 
-  $rootdir = '/usr';
+  $rootdir = '/opt/vmware';
   $answer = spacechk_answer('In which directory do you want to '
                             . 'install the binary files?', 'dirpath',
                             $rootdir . './bin', './bin', 'BINDIR');
@@ -2598,7 +2599,7 @@
   undef %patch;
   install_dir('./etc', $gRegistryDir, \%patch, 0x1);
 
-  $rootdir = '/usr';
+  $rootdir = '/opt/vmware';
 
   $answer = spacechk_answer('In which directory do you want '
                             . 'to install the binary files?', 'dirpath',
@@ -2696,7 +2697,7 @@
   my %patch;
   install_dir('./system_etc', '/etc', \%patch, 1);
   undef %patch;
-  install_dir('./usr', '/usr', \%patch, 1);
+  install_dir('./usr', '/opt/vmware', \%patch, 1);
 }
 
 sub get_initscriptsdir {
@@ -2956,7 +2957,7 @@
     $gOption{'default'} = $tmp;
   }
 
-  $rootdir = '/usr';
+  $rootdir = '/opt/vmware';
   $answer = spacechk_answer('In which directory do you want '
                             . 'to install the ' . vmware_product_name()
                             . ' binary files?', 'dirpath',
@@ -4142,7 +4143,8 @@
   # Force the path to reduce the risk of using "modified" external helpers
   # If the user has a special system setup, he will will prompted for the
   # proper location anyway
-  $ENV{'PATH'} = '/bin:/usr/bin:/sbin:/usr/sbin';
+  # --- removed for SDE
+  # $ENV{'PATH'} = '/bin:/usr/bin:/sbin:/usr/sbin';
 
   initialize_globals(internal_dirname($0));
   initialize_external_helpers();
@@ -4345,6 +4347,7 @@
                                         . 'want this program to invoke the '
                                         . 'command for you now?'
                                         , 'RUN_CONFIGURATOR', 'yesno', 'yes');
+        $answer = 'no';
       } else {
         if (vmware_product() ne 'vix') {
           print wrap('Before running ' . vmware_product_name() . ' for the '

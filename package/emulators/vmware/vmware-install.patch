# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../vmware/vmware-install.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- ./vmware-install.pl.orig	2006-08-04 20:41:23.000000000 +0200
+++ ./vmware-install.pl	2006-09-21 17:26:07.000000000 +0200
@@ -1970,8 +1970,11 @@
 
   $rootdir = '/usr';
 
-  $answer = get_persistent_answer('In which directory do you want to install the binary files?',
-                                  'BINDIR', 'dirpath', $rootdir . '/bin');
+  # $answer = get_persistent_answer('In which directory do you want to install the binary files?',
+  #     
+  #                                'BINDIR', 'dirpath', $rootdir . '/bin');
+  $answer = $rootdir.'/bin';
+  db_add_answer('BINDIR',$answer);
   undef %patch;
   install_dir('./bin', $answer, \%patch);
 
@@ -1998,8 +2001,9 @@
   # his/her previous answers.
 
   if (vmware_product() eq 'wgs') {
-    $answer = get_answer('In which directory do you want to install '
-                         . 'the daemon files?', 'dirpath', $rootdir . '/sbin');
+	  #$answer = get_answer('In which directory do you want to install '
+	  #               . 'the daemon files?', 'dirpath', $rootdir . '/sbin');
+    $answer = $rootdir . '/sbin';
     db_add_answer('SBINDIR', $answer);
     undef %patch;
     install_dir('./sbin', $answer, \%patch);
@@ -2007,8 +2011,9 @@
     safe_chmod(04555, $answer . '/vmware-authd');
   }
 
-  $answer = get_answer('In which directory do you want to install the library files?',
-                       'dirpath', $rootdir . '/lib/vmware');
+  #$answer = get_answer('In which directory do you want to install the library files?',
+  #                     'dirpath', $rootdir . '/lib/vmware');
+  $answer = $rootdir . '/lib/vmware';
   db_add_answer('LIBDIR', $answer);
   undef %patch;
   install_dir('./lib', $answer, \%patch);
@@ -2022,8 +2027,9 @@
     if (not (-d $mandir)) {
       $mandir = $rootdir . '/man';
     }
-    $answer = get_answer('In which directory do you want to install the manual files?',
-                         'dirpath', $mandir);
+    #$answer = get_answer('In which directory do you want to install the manual files?',
+    #                     'dirpath', $mandir);
+    $answer = $mandir;
     db_add_answer('MANDIR', $answer);
     undef %patch;
     install_dir('./man', $answer, \%patch);
@@ -2033,8 +2039,9 @@
   if (not (-d $docdir)) {
     $docdir = $rootdir . '/doc';
   }
-  $answer = get_answer('In which directory do you want to install the documentation files?',
-                       'dirpath', $docdir . '/vmware');
+  #$answer = get_answer('In which directory do you want to install the documentation files?',
+  #                     'dirpath', $docdir . '/vmware');
+  $answer = $docdir;
   db_add_answer('DOCDIR', $answer);
   undef %patch;
   install_dir('./doc', $answer, \%patch);
@@ -2071,10 +2078,12 @@
       }
     }
   }
-  $answer = get_persistent_answer('What is the directory that contains the init'
-                                  .' directories (rc0.d/ to rc6.d/)?'
-                                  , 'INITDIR', 'initdirpath', $initdir);
-
+  #$answer = get_persistent_answer('What is the directory that contains the init'
+  #                                .' directories (rc0.d/ to rc6.d/)?'
+  #                                , 'INITDIR', 'initdirpath', $initdir);
+  db_add_answer('INITDIR',$initdir);
+  $answer = $initdir;
+  
   # The usual way
   $initscriptsdir = $answer . '/init.d';
   if (check_answer_initscriptsdirpath($initscriptsdir, 'default') eq '') {
@@ -2084,9 +2093,11 @@
       $initscriptsdir = '';
     }
   }
-  $answer = get_persistent_answer('What is the directory that contains the init'
-                                  .' scripts?', 'INITSCRIPTSDIR'
-                                  , 'initscriptsdirpath', $initscriptsdir);
+  #$answer = get_persistent_answer('What is the directory that contains the init'
+  #                                .' scripts?', 'INITSCRIPTSDIR'
+  #                                , 'initscriptsdirpath', $initscriptsdir);
+  $answer = $answer . '/init.d';
+  db_add_answer('INITSCRIPTSDIR',$answer);
   return $answer;
 }
 
@@ -2836,7 +2847,8 @@
   # Force the path to reduce the risk of using "modified" external helpers
   # If the user has a special system setup, he will will prompted for the
   # proper location anyway
-  $ENV{'PATH'} = '/bin:/usr/bin:/sbin:/usr/sbin';
+  # --- removed for SDE
+  # $ENV{'PATH'} = '/bin:/usr/bin:/sbin:/usr/sbin';
 
   initialize_globals();
   initialize_external_helpers();
@@ -2969,9 +2981,11 @@
 
     # Reset these answers in case we have installed new versions of these
     # documents
-    db_remove_answer('EULA_AGREED');
-    db_remove_answer('ISC_COPYRIGHT_SEEN');
-
+    #db_remove_answer('EULA_AGREED');
+    #db_remove_answer('ISC_COPYRIGHT_SEEN');
+    db_add_answer('EULA_AGREED','yes');
+    db_add_answer('ISC_COPYRIGHT_SEEN','yes');
+    
     # We need to write the config file for the remote console
     if (vmware_product() eq 'console') {
       write_vmware_config();
@@ -2979,25 +2993,25 @@
 
     if (!(vmware_product() eq 'api')) {
       if (file_name_exist($gConfFlag)) {
-        $answer = get_persistent_answer('Before running '
-                                        . vmware_product_name()
-                                        . ' for the first time, you need to '
-                                        . 'configure it by invoking the '
-                                        . 'following command: "'
-                                        . db_get_answer('BINDIR')
-                                        . '/' . "$gConfigurator" . '". Do you '
-                                        . 'want this program to invoke the '
-                                        . 'command for you now?'
-                                        , 'RUN_CONFIGURATOR', 'yesno', 'yes');
+	      # $answer = get_persistent_answer('Before running '
+	      #                          . vmware_product_name()
+	      #                          . ' for the first time, you need to '
+	      #                          . 'configure it by invoking the '
+	      #                          . 'following command: "'
+	      #                          . db_get_answer('BINDIR')
+	      #                          . '/' . "$gConfigurator" . '". Do you '
+	      #                          . 'want this program to invoke the '
+	      #                          . 'command for you now?'
+	      #                          , 'RUN_CONFIGURATOR', 'yesno', 'yes');
       } else {
-        print wrap('Before running ' . vmware_product_name() . ' for the first'
-                   . ' time, you need to configure it by invoking the'
-                   . ' following command: "' . db_get_answer('BINDIR')
-                   . '/' . "$gConfigurator" . '"' . "\n\n", 0);
+	      # print wrap('Before running ' . vmware_product_name() . ' for the first'
+	      #     . ' time, you need to configure it by invoking the'
+	      #     . ' following command: "' . db_get_answer('BINDIR')
+	      #     . '/' . "$gConfigurator" . '"' . "\n\n", 0);
         $answer = 'no';
       }
     }
-
+    $answer = 'no';
     db_save();
 
     if (!(vmware_product() eq 'api') && ($answer eq 'yes')) {


The usual gcc-3.4 fixes + some unusal ones ...

  - Rene Rebe <rene@rocklinux.org>

diff -ur kismet-3.0.1/kismet_drone.cc kismet-3.0.1-fixed/kismet_drone.cc
--- kismet-3.0.1/kismet_drone.cc	2003-07-22 01:34:23.000000000 +0200
+++ kismet-3.0.1-fixed/kismet_drone.cc	2004-05-10 13:16:48.194992328 +0200
@@ -72,7 +72,7 @@
     pak.flags = CAPFLAG_NONE;
     pak.datalen = 1;
     pak.data = (uint8_t *) malloc(1);
-    (int8_t) pak.data[0] = CAPCMD_DIE;
+    pak.data[0] = (uint8_t)CAPCMD_DIE;
 
     for (unsigned int x = 0; x < packet_sources.size(); x++) {
         if (packet_sources[x]->alive) {
diff -ur kismet-3.0.1/kismet_server.cc kismet-3.0.1-fixed/kismet_server.cc
--- kismet-3.0.1/kismet_server.cc	2003-07-31 16:26:59.000000000 +0200
+++ kismet-3.0.1-fixed/kismet_server.cc	2004-05-10 13:17:22.243816120 +0200
@@ -259,7 +259,7 @@
     pak.flags = CAPFLAG_NONE;
     pak.datalen = 1;
     pak.data = (uint8_t *) malloc(1);
-    (int8_t) pak.data[0] = CAPCMD_DIE;
+    pak.data[0] = (uint8_t) CAPCMD_DIE;
 
     for (unsigned int x = 0; x < packet_sources.size(); x++) {
         if (packet_sources[x]->alive) {
diff -ur kismet-3.0.1/packet.h kismet-3.0.1-fixed/packet.h
--- kismet-3.0.1/packet.h	2003-07-31 16:26:59.000000000 +0200
+++ kismet-3.0.1-fixed/packet.h	2004-05-10 13:08:31.587776568 +0200
@@ -548,7 +548,7 @@
     // This isn't quite like STL iterators, because I'm too damned lazy to deal with all
     // the nasty STL hoop-jumping.  This does provide a somewhat-stl-ish interface to
     // iterating through the singleton and masked maps
-    friend class iterator {
+    class iterator {
         friend class macmap;
 
     public:
@@ -641,6 +641,7 @@
         int vector_itr;
         macmap<T> *owner;
     };
+    friend class iterator;
 
     iterator begin() {
         iterator ret(this);

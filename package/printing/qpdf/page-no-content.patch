Description: properly handle page with no /Content
Origin: upstream, https://github.com/qpdf/qpdf/commit/caab1b0e1642bc6ee0194c7ab4c4a4de2ab22f2c
Bug-Debian: http://bugs.debian.org/769599
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/qpdf/+bug/1392048

commit caab1b0e1642bc6ee0194c7ab4c4a4de2ab22f2c
Author: Jay Berkenbilt <ejb@ql.org>
Date:   Fri Nov 14 13:43:34 2014 -0500

    Handle pages with no /Contents from getPageContents()
    
    The spec allows /Contents to be omitted for pages that are blank, but
    QPDFObjectHandle::getPageContents() was throwing an exception in this
    case.

Index: qpdf/ChangeLog
===================================================================
--- qpdf.orig/ChangeLog
+++ qpdf/ChangeLog
@@ -1,3 +1,11 @@
+2014-11-14  Jay Berkenbilt  <ejb@ql.org>
+
+	* Bug fix: QPDFObjectHandle::getPageContents() no longer throws an
+	exception when called on a page that has no /Contents key in its
+	dictionary. This is allowed by the spec, and some software
+	packages generate files like this for pages that are blank in the
+	original.
+
 2014-06-07  Jay Berkenbilt  <ejb@ql.org>
 
 	* 5.1.2: release
Index: qpdf/libqpdf/QPDFObjectHandle.cc
===================================================================
--- qpdf.orig/libqpdf/QPDFObjectHandle.cc
+++ qpdf/libqpdf/QPDFObjectHandle.cc
@@ -633,7 +633,7 @@ QPDFObjectHandle::getPageContents()
     {
 	result.push_back(contents);
     }
-    else
+    else if (! contents.isNull())
     {
 	throw std::runtime_error("unknown object type inspecting /Contents "
 				 "key in page dictionary");

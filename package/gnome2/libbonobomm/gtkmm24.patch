# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../libbonobomm/gtkmm24.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---
--- ./configure.orig	2005-04-04 20:54:09.092500576 -0400
+++ ./configure	2005-04-04 20:54:36.655690216 -0400
@@ -7574,23 +7574,23 @@
   else
      PKG_CONFIG_MIN_VERSION=0.9.0
      if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
-        echo "$as_me:$LINENO: checking for gtkmm-2.0 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED" >&5
-echo $ECHO_N "checking for gtkmm-2.0 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED... $ECHO_C" >&6
+        echo "$as_me:$LINENO: checking for gtkmm-2.4 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED" >&5
+echo $ECHO_N "checking for gtkmm-2.4 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED... $ECHO_C" >&6
 
-        if $PKG_CONFIG --exists "gtkmm-2.0 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED" ; then
+        if $PKG_CONFIG --exists "gtkmm-2.4 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED" ; then
             echo "$as_me:$LINENO: result: yes" >&5
 echo "${ECHO_T}yes" >&6
             succeeded=yes
 
             echo "$as_me:$LINENO: checking LIBBONOBOMM_CFLAGS" >&5
 echo $ECHO_N "checking LIBBONOBOMM_CFLAGS... $ECHO_C" >&6
-            LIBBONOBOMM_CFLAGS=`$PKG_CONFIG --cflags "gtkmm-2.0 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED"`
+            LIBBONOBOMM_CFLAGS=`$PKG_CONFIG --cflags "gtkmm-2.4 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED"`
             echo "$as_me:$LINENO: result: $LIBBONOBOMM_CFLAGS" >&5
 echo "${ECHO_T}$LIBBONOBOMM_CFLAGS" >&6
 
             echo "$as_me:$LINENO: checking LIBBONOBOMM_LIBS" >&5
 echo $ECHO_N "checking LIBBONOBOMM_LIBS... $ECHO_C" >&6
-            LIBBONOBOMM_LIBS=`$PKG_CONFIG --libs "gtkmm-2.0 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED"`
+            LIBBONOBOMM_LIBS=`$PKG_CONFIG --libs "gtkmm-2.4 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED"`
             echo "$as_me:$LINENO: result: $LIBBONOBOMM_LIBS" >&5
 echo "${ECHO_T}$LIBBONOBOMM_LIBS" >&6
         else
@@ -7598,7 +7598,7 @@
             LIBBONOBOMM_LIBS=""
             ## If we have a custom action on failure, don't print errors, but
             ## do set a variable so people can do so.
-            LIBBONOBOMM_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gtkmm-2.0 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED"`
+            LIBBONOBOMM_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gtkmm-2.4 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED"`
             echo $LIBBONOBOMM_PKG_ERRORS
         fi
 
@@ -7613,8 +7613,8 @@
   if test $succeeded = yes; then
      :
   else
-     { { echo "$as_me:$LINENO: error: Library requirements (gtkmm-2.0 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&5
-echo "$as_me: error: Library requirements (gtkmm-2.0 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&2;}
+     { { echo "$as_me:$LINENO: error: Library requirements (gtkmm-2.4 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&5
+echo "$as_me: error: Library requirements (gtkmm-2.4 >= $GTKMM_VERSION_NEEDED libbonobo-2.0 >= $LIBBONOBO_VERSION_NEEDED ORBit-2.0-cpp >= $ORBITCPP_VERSION_NEEDED) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&2;}
    { (exit 1); exit 1; }; }
   fi
 
@@ -7632,8 +7632,8 @@
 IDL_CFLAGS_BONOBO="-I/$IDLDIR_LIBBONOBO -I/$IDLDIR_BONOBO_ACTIVATION"
 
 
-GTKMM_PREFIX=`pkg-config --variable=prefix gtkmm-2.0`
-GTKMM_PROCDIR=$GTKMM_PREFIX/lib/gtkmm-2.0/proc
+GTKMM_PREFIX=`pkg-config --variable=prefix gtkmm-2.4`
+GTKMM_PROCDIR=$GTKMM_PREFIX/lib/gtkmm-2.4/proc
 
 GTKMM_PROC=$GTKMM_PROCDIR/gtkmmproc
 

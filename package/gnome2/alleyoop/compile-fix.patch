# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../alleyoop/compile-fix.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---
diff -Nur alleyoop-0.9.0.orig/src/vgrule-editor.c alleyoop-0.9.0/src/vgrule-editor.c
--- alleyoop-0.9.0.orig/src/vgrule-editor.c	2005-05-03 20:33:04.000000000 +0300
+++ alleyoop-0.9.0/src/vgrule-editor.c	2005-10-23 20:40:38.000000000 +0300
@@ -227,7 +227,8 @@
 	label = gtk_label_new (_("Rule name:"));
 	gtk_widget_show (label);
 	gtk_box_pack_start (GTK_BOX (hbox), label, FALSE, FALSE, 0);
-	editor->name = (GtkEntry *) widget = gtk_entry_new ();
+	widget = gtk_entry_new ();
+	editor->name = (GtkEntry *) widget;
 	gtk_widget_show (widget);
 	gtk_box_pack_start (GTK_BOX (hbox), widget, TRUE, TRUE, 0);
 	gtk_widget_show (hbox);
@@ -237,7 +238,8 @@
 	label = gtk_label_new (_("Suppress messages of type:"));
 	gtk_widget_show (label);
 	gtk_box_pack_start (GTK_BOX (hbox), label, FALSE, FALSE, 0);
-	editor->type = (GtkOptionMenu *) widget = rule_type_menu_new (editor);
+	widget = rule_type_menu_new (editor);
+	editor->type = (GtkOptionMenu *) widget;
 	gtk_widget_show (widget);
 	gtk_box_pack_start (GTK_BOX (hbox), widget, TRUE, TRUE, 0);
 	gtk_widget_show (hbox);
@@ -247,10 +249,12 @@
 	label = gtk_label_new (_("Suppress when using:"));
 	gtk_widget_show (label);
 	gtk_box_pack_start (GTK_BOX (hbox), label, FALSE, FALSE, 0);
-	editor->addrcheck = (GtkToggleButton *) widget = gtk_check_button_new_with_label ("Addrcheck");
+	widget = gtk_check_button_new_with_label ("Addrcheck");
+	editor->addrcheck = (GtkToggleButton *) widget;
 	gtk_widget_show (widget);
 	gtk_box_pack_start (GTK_BOX (hbox), widget, FALSE, FALSE, 0);
-	editor->memcheck = (GtkToggleButton *) widget = gtk_check_button_new_with_label ("Memcheck");
+	widget = gtk_check_button_new_with_label ("Memcheck");
+	editor->memcheck = (GtkToggleButton *) widget;
 	gtk_widget_show (widget);
 	gtk_box_pack_start (GTK_BOX (hbox), widget, FALSE, FALSE, 0);
 	gtk_widget_show (hbox);
@@ -261,7 +265,8 @@
 	gtk_misc_set_alignment ((GtkMisc *) label, 1.0, 0.5);
 	gtk_widget_show (label);
 	gtk_box_pack_start (GTK_BOX (hbox), label, FALSE, FALSE, 0);
-	editor->syscall = (GtkEntry *) widget = gtk_entry_new ();
+	widget = gtk_entry_new ();
+	editor->syscall = (GtkEntry *) widget;
 	gtk_widget_show (widget);
 	gtk_widget_set_sensitive (widget, FALSE);
 	gtk_box_pack_start (GTK_BOX (hbox), widget, TRUE, TRUE, 0);
@@ -276,7 +281,8 @@
 	/*editor->callers = g_ptr_array_new ();
 	  g_ptr_array_add (editor->callers, call_stack_frame_new (0, NULL));*/
 	
-	editor->call_stack = (GtkBox *) widget = call_stack_new (editor);
+	widget = call_stack_new (editor);
+	editor->call_stack = (GtkBox *) widget;
 	gtk_widget_show (widget);
 	gtk_box_pack_start (GTK_BOX (vbox), widget, TRUE, TRUE, 0);
 }
diff -Nur alleyoop-0.9.0.orig/src/vgsearchbar.c alleyoop-0.9.0/src/vgsearchbar.c
--- alleyoop-0.9.0.orig/src/vgsearchbar.c	2005-05-03 20:33:04.000000000 +0300
+++ alleyoop-0.9.0/src/vgsearchbar.c	2005-10-23 20:40:38.000000000 +0300
@@ -132,11 +132,13 @@
 	
 	bar->item_id = -1;
 	
-	bar->menu = (GtkOptionMenu *) widget = gtk_option_menu_new ();
+	widget = gtk_option_menu_new ();
+	bar->menu = (GtkOptionMenu *) widget;
 	gtk_widget_show (widget);
 	gtk_box_pack_start ((GtkBox *) bar, widget, FALSE, FALSE, 0);
 	
-	bar->entry = (GtkEntry *) widget = gtk_entry_new ();
+	widget = gtk_entry_new ();
+	bar->entry = (GtkEntry *) widget;
 	gtk_widget_show (widget);
 	gtk_box_pack_start ((GtkBox *) bar, widget, TRUE, TRUE, 0);
 	g_signal_connect (bar->entry, "activate", G_CALLBACK (entry_activate), bar);

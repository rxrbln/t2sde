# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../grub/no-menu-border.patch
# Copyright (C) 2004 - 2008 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Well, this menu border is ugly and so much 1980 DOS style, ...
Simply get rid of it.

  - Rene Rene <rene@exactcode.de>

--- grub-0.97/stage2/stage2.c.vanilla	2005-03-19 18:51:57.000000000 +0100
+++ grub-0.97/stage2/stage2.c	2010-06-25 13:32:32.000000000 +0200
@@ -134,10 +134,13 @@
 	  else
 	    grub_putchar (*entry++);
 	}
-      else
+      else {
 	grub_putchar (' ');
+	if (current_term->setcolorstate)
+          current_term->setcolorstate (COLOR_STATE_NORMAL);
+      }
     }
-  gotoxy (74, y);
+  gotoxy (2, y);
 
   if (current_term->setcolorstate)
     current_term->setcolorstate (COLOR_STATE_STANDARD);
@@ -176,7 +179,7 @@
   else
     grub_putchar (' ');
 
-  gotoxy (74, y + entryno + 1);
+  gotoxy (2, y + entryno + 1);
 }
 
 static void
@@ -413,13 +416,12 @@
       if (current_term->flags & TERM_DUMB)
 	print_entries_raw (num_entries, first_entry, menu_entries);
       else
-	print_border (3, 12);
+	/*print_border (3, 12);*/
+	gotoxy (74, 3 + 12);
 
-#if 0
-      grub_printf ("\n\
+      grub_printf ("\n\n\
       Use the %c and %c keys to select which entry is highlighted.\n",
 		   DISP_UP, DISP_DOWN);
-#endif
       
       if (! auth && password)
 	{
@@ -433,7 +435,7 @@
 	  {
 	    if (!toggle_print_status(3, 18))
 	      {
-		printf ("\n\n\
+		printf ("\n\
       Press enter or %c to boot the selected OS, \'e\' to edit the\n\
       commands before booting, \'r\' to reload, \'c\' for a command-line,\n\
       \'/?nN\' to search or %c to go back if possible.",
@@ -478,10 +480,10 @@
 			   entryno, grub_timeout);
 	  else
 	    {
-	      gotoxy (3, 22);
+	      gotoxy (4, 2);
 	      grub_printf ("The highlighted entry will be booted automatically in %d seconds.    ",
 			   grub_timeout);
-	      gotoxy (74, 4 + entryno);
+	      gotoxy (2, 4 + entryno);
 	  }
 	  
 	  grub_timeout--;
@@ -504,9 +506,8 @@
           /* current entry */
           gotoxy(69, 3);
           grub_printf("[%d]", first_entry + entryno);
-          grub_putchar(DISP_HORIZ);
-          grub_putchar(DISP_HORIZ);
-
+          grub_putchar(' ');
+          grub_putchar(' ');
 
           /* print shortcut buffer */
           gotoxy(5, 3);
@@ -514,21 +515,23 @@
             {
               x = search_direction ? '?' : '/';
               grub_printf("%c%s%c%c%c%c",
-                          x, search_buf, x, DISP_HORIZ,
-                          search_found >= 0 ? DISP_HORIZ : 'X', DISP_HORIZ);
+                          x, search_buf, x, ' ',
+                          search_found >= 0 ? ' ': 'X', ' ');
             }
 	  else if (shortcut_buf[0])
             grub_printf("<%s..>", shortcut_buf);
           else
             for (x = 0; x < 24; x++)
-              grub_putchar(DISP_HORIZ);
+              grub_putchar(' ');
 
+#if 0
 	  gotoxy(52, 16);
 	  l = grub_strlen(search_buf);
 	  for (i = SEARCH_BUF_SIZE + 2 -
 	          ((search_found >= 0 && (l || search_mode)) ? l + 2 : 0);
 	       i; i--)
 	    grub_putchar(DISP_HORIZ);
+#endif
 	  if (search_found >= 0 && (l || search_mode))
 	    {
 	      x = search_direction ? '?' : '/';
@@ -541,7 +544,7 @@
 	  if (current_term->setcolorstate)
 	    current_term->setcolorstate (COLOR_STATE_STANDARD);
 
-          gotoxy(74, 4 + entryno);
+          gotoxy(2, 4 + entryno);
         }
 
 
@@ -565,7 +568,7 @@
 	      if (current_term->flags & TERM_DUMB)
 		grub_putchar ('\r');
 	      else
-		gotoxy (3, 22);
+		gotoxy (4, 2);
 	      printf ("                                                                    ");
 	      grub_timeout = -1;
 	      fallback_entryno = -1;

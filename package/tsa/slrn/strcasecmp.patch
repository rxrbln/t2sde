# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/tsa/slrn/strcasecmp.patch
# ROCK Linux is Copyright (C) 1998 - 2003 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

--- ./src/art_sort.c	Mon Mar 11 15:22:35 2002
+++ ./src/art_sort.c	Wed Mar 13 21:32:41 2002
@@ -1011,14 +1011,22 @@
    
    while (-1 != SLextract_list_element (sort_order, nth, ',', buf, sizeof(buf)))
      {
-	if (! strcasecmp(buf, "Subject")) add_sort_function(header_subject_cmp, isupper(buf[0]));
-	else if (! strcasecmp(buf, "Score")) add_sort_function(header_score_cmp, isupper(buf[0]));
-	else if (! strcasecmp(buf, "Highscore")) add_sort_function(header_highscore_cmp, isupper(buf[0]));
-	else if (! strcasecmp(buf, "Date")) add_sort_function(header_date_cmp, isupper(buf[0]));
-	else if (! strcasecmp(buf, "Author")) add_sort_function(header_author_cmp, isupper(buf[0]));
-	else if (! strcasecmp(buf, "Lines")) add_sort_function(header_lines_cmp, isupper(buf[0]));
-	else if (! strcasecmp(buf, "Number")) add_sort_function(header_num_cmp, isupper(buf[0]));
-	else if (! strcasecmp(buf, "Id")) add_sort_function(header_msgid_cmp, isupper(buf[0]));
+	if (! slrn_case_strcmp((unsigned char*)buf, (unsigned char*)"Subject"))
+	  add_sort_function(header_subject_cmp, isupper(buf[0]));
+	else if (! slrn_case_strcmp((unsigned char*)buf, (unsigned char*)"Score"))
+	  add_sort_function(header_score_cmp, isupper(buf[0]));
+	else if (! slrn_case_strcmp((unsigned char*)buf, (unsigned char*)"Highscore"))
+	  add_sort_function(header_highscore_cmp, isupper(buf[0]));
+	else if (! slrn_case_strcmp((unsigned char*)buf, (unsigned char*)"Date"))
+	  add_sort_function(header_date_cmp, isupper(buf[0]));
+	else if (! slrn_case_strcmp((unsigned char*)buf, (unsigned char*)"Author"))
+	  add_sort_function(header_author_cmp, isupper(buf[0]));
+	else if (! slrn_case_strcmp((unsigned char*)buf, (unsigned char*)"Lines"))
+	  add_sort_function(header_lines_cmp, isupper(buf[0]));
+	else if (! slrn_case_strcmp((unsigned char*)buf, (unsigned char*)"Number"))
+	  add_sort_function(header_num_cmp, isupper(buf[0]));
+	else if (! slrn_case_strcmp((unsigned char*)buf, (unsigned char*)"Id"))
+	  add_sort_function(header_msgid_cmp, isupper(buf[0]));
 	else /* Nonexistant sorting method */
 	  {
 	     slrn_error(_("Can't sort according to `%s'"), buf);

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../soup/gcc34.patch
# Copyright (C) 2004 - 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---
diff -ur soup-0.7.11-orig/src/libwsdl/wsdl-soap-memory.c soup-0.7.11/src/libwsdl/wsdl-soap-memory.c
--- soup-0.7.11-orig/src/libwsdl/wsdl-soap-memory.c	2001-08-27 03:38:53.000000000 +0200
+++ soup-0.7.11/src/libwsdl/wsdl-soap-memory.c	2004-10-06 07:09:32.004502496 +0200
@@ -33,14 +33,12 @@
 
 	while (param->name != NULL) {
 		if (param->typecode == NULL) {
-			g_warning (G_GNUC_FUNCTION
-				   ": Parameter %s has no typecode!",
+			g_warning ("%s: Parameter %s has no typecode!", G_GNUC_PRETTY_FUNCTION,
 				   param->name);
 		} else {
 			if (param->param == NULL) {
-				g_warning (G_GNUC_FUNCTION
-					   ": Parameter %s has no "
-					   "memory location!",
+				g_warning ("%s: Parameter %s has no "
+					   "memory location!", G_GNUC_PRETTY_FUNCTION,
 					   param->name);
 			} else {
 				memset (param->param, 
@@ -71,8 +69,7 @@
 
 	while (param->name != NULL) {
 		if (param->typecode == NULL) {
-			g_warning (G_GNUC_FUNCTION
-				   ": Parameter %s has no typecode!",
+			g_warning ("%s: Parameter %s has no typecode!", G_GNUC_PRETTY_FUNCTION,
 				   param->name);
 		} else {
 			if (param->param != NULL &&
diff -ur soup-0.7.11-orig/src/libwsdl/wsdl-soap-parse.c soup-0.7.11/src/libwsdl/wsdl-soap-parse.c
--- soup-0.7.11-orig/src/libwsdl/wsdl-soap-parse.c	2002-05-03 22:14:27.000000000 +0200
+++ soup-0.7.11/src/libwsdl/wsdl-soap-parse.c	2004-10-06 06:03:33.617268824 +0200
@@ -37,7 +37,7 @@
 
 	switch (wsdl_typecode_kind (typecode)) {
 	case WSDL_TK_GLIB_NULL:
-		g_warning ("Invalid typecode NULL in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode NULL in %s", G_GNUC_PRETTY_FUNCTION);
 		break;
 
 	case WSDL_TK_GLIB_VOID:
@@ -203,7 +203,7 @@
 		/* Handled elsewhere */
 		break;
 	case WSDL_TK_GLIB_MAX:
-		g_warning ("Invalid typecode MAX in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode MAX in %s", G_GNUC_PRETTY_FUNCTION);
 		break;
 	}
 }
diff -ur soup-0.7.11-orig/src/libwsdl/wsdl-typecodes.c soup-0.7.11/src/libwsdl/wsdl-typecodes.c
--- soup-0.7.11-orig/src/libwsdl/wsdl-typecodes.c	2002-04-05 22:46:30.000000000 +0200
+++ soup-0.7.11/src/libwsdl/wsdl-typecodes.c	2004-10-06 06:03:33.598271712 +0200
@@ -977,7 +977,7 @@
 {
 	switch (tc->kind) {
 	case WSDL_TK_GLIB_NULL:
-		g_warning ("Invalid typecode NULL in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode NULL in %s", G_GNUC_PRETTY_FUNCTION);
 		return (0);
 		break;
 
@@ -1082,7 +1082,7 @@
 		break;
 
 	case WSDL_TK_GLIB_MAX:
-		g_warning ("Invalid typecode MAX in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode MAX in %s", G_GNUC_PRETTY_FUNCTION);
 		return (0);
 		break;
 	}
@@ -1106,7 +1106,7 @@
 {
 	switch (tc->kind) {
 	case WSDL_TK_GLIB_NULL:
-		g_warning ("Invalid typecode NULL in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode NULL in %s", G_GNUC_PRETTY_FUNCTION);
 		return (0);
 		break;
 
@@ -1218,7 +1218,7 @@
 		break;
 
 	case WSDL_TK_GLIB_MAX:
-		g_warning ("Invalid typecode MAX in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode MAX in %s", G_GNUC_PRETTY_FUNCTION);
 		return (0);
 		break;
 	}

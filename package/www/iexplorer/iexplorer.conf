# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../iexplorer/iexplorer.conf
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.

autoextract=0
makeopt=
makeinstopt=

datadir=$datadir/$pkg

IES4LINUX=$builddir
BASEDIR=$datadir
BINDIR=$bindir
DOWNLOADDIR=$archdir

tmpdir=$builddir/tmp

function createShortcuts() {
        echo "#!/bin/bash" > "$BINDIR/$1"
        echo cd >> "$BINDIR/$1"
        echo WINEPREFIX=\"$BASEDIR/$1\" wine \"$BASEDIR/$1/$DRIVEC/Program Files/Internet Explorer/IEXPLORE.EXE\" \$@ >> "$BINDIR/$1"
        chmod +x "$BINDIR/$1"
        if [ "$CREATE_ICON" = "yes" ]; then
                if cd ~/Desktop || cd ~/desktop; then
                      "$IES4LINUX/lib/mkicon" \
                                Exec "$BINDIR/$1" \
                                Icon "$BASEDIR/ie_wine.svg" \
                                Name "Internet Explorer $2" \
                                GenericName "Microsoft Windows Aplication" \
                                Comment "MSIE $2 by IEs4Linux" > IE$2.desktop
                fi
        fi
}

register_dll() {
        xvfb-run wine regsvr32 $1
}
add_registry() {
        xvfb-run wine regedit $1
}
set_wine_prefix() {
        export WINEPREFIX="$1"
}

create_initial_folders() {
        rm -rf $tmpdir "$BASEDIR"/base
        mkdir -p $tmpdir
        mkdir -p "$BASEDIR/base/"
}

function discover_folders() {
        # setting DRIVEC
        if [ -d "$BASEDIR/base/fake_windows" ]; then
                DRIVEC=fake_windows
        else
                DRIVEC=drive_c
        fi

        # setting variables
        if [ -d "$BASEDIR/base/$DRIVEC/windows" ]; then
                WINDOWS=windows
        fi
        if [ -d "$BASEDIR/base/$DRIVEC/$WINDOWS/system" ]; then
                SYSTEM=system
        fi
        if [ -d "$BASEDIR/base/$DRIVEC/$WINDOWS/fonts" ]; then
                FONTS=fonts
        fi
        if [ -d "$BASEDIR/base/$DRIVEC/$WINDOWS/inf" ]; then
                INF=inf
        fi

        export DRIVEC WINDOWS SYSTEM FONTS INF
}

do_basic_installation() {
	echo "Creating basic Windows installation"
	set_wine_prefix "$BASEDIR/base/"
	mkdir -p "$BASEDIR/base"

	echo "Creating Wine Prefix"
	xvfb-run wineprefixcreate
	discover_folders

	mkdir -p "$BASEDIR/base/$DRIVEC/Program Files/Internet Explorer"
	chmod u+rwx -R "$BASEDIR/base"
	cd $tmpdir

	# Install riched.dll
	echo "Installing RICHED20"
	cabextract -q -F ver1200.exe $DOWNLOADDIR/249973USA8.exe
	cabextract -q -F riched20.120 $tmpdir/ver1200.exe
	mv riched20.120 $BASEDIR/base/$DRIVEC/$WINDOWS/$SYSTEM/riched20.dll

	# Install DCOM98
	echo "Installing DCOM98"
	cabextract -q -d "$BASEDIR/base/$DRIVEC/$WINDOWS/$SYSTEM/" "$DOWNLOADDIR/DCOM98.EXE"
	mv "$BASEDIR/base/$DRIVEC/$WINDOWS/$SYSTEM/dcom98.inf" "$BASEDIR/base/$DRIVEC/$WINDOWS/$INF/"

	# Install mfc40
	echo "Installing ActiveX MFC40"
	cabextract -q $DOWNLOADDIR/mfc40.cab
	cabextract -q -F "mfc40.dll" mfc40.exe
	mv mfc40.dll $BASEDIR/base/$DRIVEC/$WINDOWS/$SYSTEM/

	# last things
	echo "Finalizing"
	cp "$confdir/ie_wine.svg" "$BASEDIR/ie_wine.svg"
	chmod u+rwx -R "$BASEDIR/base"

	echo "done"
}

function clean_tmp() {
        rm -rf $tmpdir/*
}
function remove_extra_folders() {
        rm -rf "$BASEDIR/base" "$tmpdir"
}

# Installations functions
function new_installation() {
        rm -rf "$BASEDIR/$1"
        cp -r "$BASEDIR/base" "$BASEDIR/$1"
}


hook_add premake 4 'create_initial_folders'
hook_add premake 5 'do_basic_installation'

hook_add postmake 5 'install_ie6'
install_ie6() {
	cd $tmpdir
	new_installation ie6

	echo "Extracting downloaded exe file"
	wine "$DOWNLOADDIR"/ie60.exe
	cd IE*

	echo "Extracting CAB files"
	cabextract -q IE_S*CAB
	cabextract -q -L -d "$BASEDIR"/ie6/$DRIVEC/$WINDOWS/$SYSTEM/ IE_1.CAB IEDOM.CAB
	mv "$BASEDIR"/ie6/$DRIVEC/$WINDOWS/$SYSTEM/sch128c.dll "$BASEDIR"/ie6/$DRIVEC/$WINDOWS/$SYSTEM/schannel.dll
	mv "$BASEDIR"/ie6/$DRIVEC/$WINDOWS/$SYSTEM/iexplore.exe "$BASEDIR/ie6/$DRIVEC/Program Files/Internet Explorer/IEXPLORE.EXE"

	cabextract -q -L -d "$BASEDIR"/ie6/$DRIVEC/$WINDOWS/$SYSTEM/ SCR56EN.CAB
	cabextract -q -L -F "pngfilt.dll" ADVAUTH.CAB
	cabextract -q -L -F "msvcrt.dll" SETUPW95.CAB
	mv pngfilt.dll msvcrt.dll "$BASEDIR/ie6/$DRIVEC/$WINDOWS/$SYSTEM/"

	echo "Installing TTF Fonts"
	cabextract -q -L -F "*TTF" FONT*CAB
	mv *ttf "$BASEDIR/ie6/$DRIVEC/$WINDOWS/$FONTS/"

	echo "Configuring ie6"
	gunzip -c $confdir/winereg.system.reg.gz > "$BASEDIR"/ie6/system.reg
	gunzip -c $confdir/winereg.user.reg > "$BASEDIR"/ie6/user.reg

	createShortcuts ie6 6.0
	clean_tmp

	echo "Done"
}

hook_add postmake 5 'install_flash'
install_flash() {
	echo "Installing Flash Player 8"
	echo "Preparing installation"

	cd $tmpdir

	# Copy Flash files
	cabextract -q -d $tmpdir `match_source_file -p swflash`

	# Create add.reg
	sed -n -e 's/^\[/;\[/g;/^;\[SW.AddReg\]/,/^;\[/p;' swflash.inf > add.reg2
	sed '/^;/ d;/^\s/ d' add.reg2 > add.reg

	strings=` sed -n -e 's/\s//g;s/^\[/;\[/g;/^;\[strings\]/,/^;\[/p;/^;/d;/^\s/d' swflash.inf `
	for string in $strings; do
        	key=` echo $string | awk -F '=' '/^[^;]/ {print $1}' `
		value=` echo $string | awk -F '"' '/^[^;]/ {print $2}' | sed -e 's/\//BARRA/g '`

	        sed -e "s/%${key}%/${value}/g;s/BARRA/\//g" add.reg > add.reg2
	        mv add.reg2 add.reg
	done
        install_flash_player ie6
}

# Function that installs Flash Player on a IE
install_flash_player() {
	cd $tmpdir
        set_wine_prefix "$BASEDIR/$1/"
        mkdir -p "$BASEDIR/$1/$DRIVEC/$WINDOWS/$SYSTEM/Macromed/Flash/"
        cp GetFlash.exe Flash8a.ocx "$BASEDIR/$1/$DRIVEC/$WINDOWS/$SYSTEM/Macromed/Flash/"
        add_registry "$tmpdir/add.reg"
        register_dll "C:\\Windows\\System\\Macromed\\Flash\\Flash8a.ocx"
}


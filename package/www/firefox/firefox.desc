[COPY] --- T2-COPYRIGHT-BEGIN ---
[COPY] t2/package/*/firefox/firefox.desc
[COPY] Copyright (C) 2004 - 2025 The T2 SDE Project
[COPY] Copyright (C) 1998 - 2004 ROCK Linux Project
[COPY] SPDX-License-Identifier: GPL-2.0
[COPY] --- T2-COPYRIGHT-END ---

[I] The award-winning, fast and secure Web browser

[T] The award-winning fast, more secure, and fully customizable Web browser
[T] to your online life.

[U] https://www.firefox.com/

[A] The Mozilla Community <http://www.mozilla.org/about.html>
[M] Rene Rebe <rene@t2-project.org>

[C] extra/office
[F] CROSS NO-LIBTOOL-FIX CUSTOM-LTO LATOMIC.x86 LATOMIC.sparc LATOMIC.sparc64
[R] - alpha hppa hppa64 ia64 riscv

[L] MPL
[S] Stable
[V] 144.0
[P] X -----5---9 202.000

[D] 305d220d3efc6e34af3d5662ef4d2b7beea41c1524c8c87aebf235dd firefox-144.0.source.tar.xz https://ftp.mozilla.org/pub/firefox/releases/144.0/source/

. $base/package/*/*/mozilla-conf.in

export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=system
export HOME=$sysroot/root

if [ $prefix_auto = 1 ]; then
	prefix=$mozilla_prefix
	set_confopt
fi

hook_add inmake 5 "./mach build"
hook_add postmake 5 "./mach install"

firefox_config() {
	cat <<-EOT >> .mozconfig
. \$topsrcdir/browser/config/mozconfig
export MOZ_PHOENIX=1
mk_add_options MOZ_PHOENIX=1
mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/objs

#ac_add_options --enable-mathml
#ac_add_options --enable-crypto
#ac_add_options --enable-module=psm
ac_add_options --enable-default-toolkit=cairo-gtk3
ac_add_options --without-system-png
#ac_add_options --disable-profilesharing
ac_add_options --enable-official-branding
ac_add_options --with-system-zlib
#ac_add_options --with-system-bz2
#ac_add_options --enable-system-sqlite
ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman
#ac_add_options --with-pthreads
#ac_add_options --enable-gio
#ac_add_options --disable-gnomevfs
ac_add_options --disable-necko-wifi
ac_add_options --disable-crashreporter
ac_add_options --disable-updater
ac_add_options --disable-tests
#ac_add_options --disable-installer
#ac_add_options --disable-cargo-incremental
ac_add_options --disable-jemalloc
ac_add_options --enable-jxl
EOT

pkginstalled dbus || echo "ac_add_options --disable-dbus" >> .mozconfig
pkginstalled libjpeg-turbo && echo "ac_add_options --with-system-jpeg" >> .mozconfig
pkginstalled icu4c && echo "ac_add_options --with-system-icu" >> .mozconfig
pkginstalled pulseaudio || echo "ac_add_options --disable-pulseaudio" >> .mozconfig
pkginstalled alsa-lib && echo "ac_add_options --enable-alsa" >> .mozconfig
pkginstalled libevent && echo "ac_add_options --with-system-libevent" >> .mozconfig
pkginstalled wasi-libc &&
	echo "ac_add_options --with-wasi-sysroot=$root/$(pkgprefix wasi-libc)" >> .mozconfig ||
	echo "ac_add_options --without-wasm-sandboxed-libraries" >> .mozconfig

	[ "$SDECFG_DEFAULT_CC" = clang ] &&
		var_append GCC_WRAPPER_APPEND ' ' "-c?:-fuse-ld=lld" &&
		echo "ac_add_options --disable-elf-hack" >> .mozconfig

	[ "$SDECFG_POWERPC64_ENDIANESS" = 'le' ] ||
		var_append patchfiles ' ' $confdir/hotfix-ppc-not-power8.diff

	# jit and sandbox?
	#echo "ac_add_options --disable-sandbox" >> .mozconfig
	case "$arch" in
	x86)
		# jit needs sse on x86
		if ! $CC -E -dM -x c /dev/null | grep -iq _sse; then
			var_append patchfiles ' ' $confdir/no-jit.diff
			echo "ac_add_options --disable-jit" >> .mozconfig
		fi
		;;
	arm)
		[[ $arch_machine = armv[678]* ]] || echo "ac_add_options --disable-jit" >> .mozconfig
		;;
	arm64|riscv64|x86-64)
		: ;;

	*)
		echo "ac_add_options --disable-jit --disable-webrtc" >> .mozconfig ;;
	esac
}

# don't pass CPU optimizations to clang w/ wasi
GCC_WRAPPER_INSERT="${GCC_WRAPPER_INSERT/-march=/--target=wasm32-wasi?:-march=}"
GCC_WRAPPER_INSERT="${GCC_WRAPPER_INSERT/-mcpu=/--target=wasm32-wasi?:-mcpu=}"
GCC_WRAPPER_INSERT="${GCC_WRAPPER_INSERT/-mtune=/--target=wasm32-wasi?:-mtune=}"
GCC_WRAPPER_INSERT="${GCC_WRAPPER_INSERT/-mfpu=/--target=wasm32-wasi?:-mfpu=}"

hook_add prepatch 5 "cargo_clear_cksum third_party/rust/*/.cargo-checksum.json"
hook_add postpatch 5 "rust_update_arch_target third_party/rust/*/no_atomic*.rs"

hook_add prepatch 4 "firefox_config"
hook_add preconf 2 "mozilla_branding"

# disable legacy component registration
mozilla_register() {
	:
}

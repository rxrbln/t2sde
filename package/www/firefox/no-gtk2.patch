# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by scripts/Create-CopyPatch.
# 
# T2 SDE: package/*/firefox/no-gtk2.patch
# Copyright (C) 2020 - 2021 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Removes the GTK2 build requirement. A little sloppy in places,
will be cleaned up over the next couple of weeks. Based on a
patch posted to Bugzilla here:

https://bugzilla.mozilla.org/show_bug.cgi?id=1663588

--- firefox-84.0/widget/gtk/mozgtk/gtk3/moz.build.vanilla	2020-12-15 14:55:32.528811898 +0100
+++ firefox-84.0/widget/gtk/mozgtk/gtk3/moz.build	2020-12-15 14:56:45.968811028 +0100
@@ -8,8 +8,6 @@
     "../mozgtk.c",
 ]
 
-DEFINES["GTK2_SYMBOLS"] = True
-
 SharedLibrary("mozgtk")
 
 SONAME = "mozgtk"
--- firefox-84.0/widget/gtk/mozgtk/stub/moz.build.vanilla	2020-12-15 14:55:32.528811898 +0100
+++ firefox-84.0/widget/gtk/mozgtk/stub/moz.build	2020-12-15 14:56:45.968811028 +0100
@@ -8,7 +8,7 @@
     "../mozgtk.c",
 ]
 
-for var in ("COMMON_SYMBOLS", "GTK2_SYMBOLS", "GTK3_SYMBOLS"):
+for var in ("COMMON_SYMBOLS", "GTK3_SYMBOLS"):
     DEFINES[var] = True
 
 SharedLibrary("mozgtk_stub")
--- firefox-84.0/widget/gtk/mozgtk/gtk2/moz.build.vanilla	2020-12-15 14:33:11.620827783 +0100
+++ firefox-84.0/widget/gtk/mozgtk/gtk2/moz.build	2020-12-15 14:56:45.968811028 +0100
@@ -1,40 +0,0 @@
-# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
-# vim: set filetype=python:
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-SOURCES += [
-    "../mozgtk.c",
-]
-
-DEFINES["GTK3_SYMBOLS"] = True
-
-SharedLibrary("mozgtk2")
-
-SHARED_LIBRARY_NAME = "mozgtk"
-
-FINAL_TARGET = "dist/bin/gtk2"
-
-# If LDFLAGS contains -Wl,--as-needed or if it's the default for the toolchain,
-# we need to add -Wl,--no-as-needed before the gtk libraries, otherwise the
-# linker will drop those dependencies because no symbols are used from them.
-# But those dependencies need to be kept for things to work properly.
-# Ideally, we'd only add -Wl,--no-as-needed if necessary, but it's just simpler
-# to add it unconditionally. This library is also simple enough that forcing
-# -Wl,--as-needed after the gtk libraries is not going to make a significant
-# difference.
-if CONFIG["GCC_USE_GNU_LD"]:
-    no_as_needed = ["-Wl,--no-as-needed"]
-    as_needed = ["-Wl,--as-needed"]
-else:
-    no_as_needed = []
-    as_needed = []
-
-OS_LIBS += [f for f in CONFIG["MOZ_GTK2_LIBS"] if f.startswith("-L")]
-OS_LIBS += no_as_needed
-OS_LIBS += [
-    "gtk-x11-2.0",
-    "gdk-x11-2.0",
-]
-OS_LIBS += as_needed
--- firefox-84.0/widget/gtk/mozgtk/moz.build.vanilla	2020-12-15 14:55:32.528811898 +0100
+++ firefox-84.0/widget/gtk/mozgtk/moz.build	2020-12-15 14:56:45.968811028 +0100
@@ -4,4 +4,4 @@
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
-DIRS += ["stub", "gtk2", "gtk3"]
+DIRS += ["stub", "gtk3"]
--- firefox-84.0/widget/gtk/mozgtk/mozgtk.c.vanilla	2020-12-12 00:43:02.000000000 +0100
+++ firefox-84.0/widget/gtk/mozgtk/mozgtk.c	2020-12-15 14:55:32.528811898 +0100
@@ -647,21 +647,6 @@
 STUB(gtk_color_chooser_set_use_alpha)
 #endif
 
-#ifdef GTK2_SYMBOLS
-STUB(gdk_drawable_get_screen)
-STUB(gdk_rgb_get_colormap)
-STUB(gdk_rgb_get_visual)
-STUB(gdk_window_lookup)
-STUB(gdk_window_set_back_pixmap)
-STUB(gdk_x11_colormap_foreign_new)
-STUB(gdk_x11_colormap_get_xcolormap)
-STUB(gdk_x11_drawable_get_xdisplay)
-STUB(gdk_x11_drawable_get_xid)
-STUB(gdk_x11_window_get_drawable_impl)
-STUB(gdkx_visual_get)
-STUB(gtk_object_get_type)
-#endif
-
 #ifndef GTK3_SYMBOLS
 // Only define the following workaround when using GTK3, which we detect
 // by checking if GTK3 stubs are not provided.
--- firefox-84.0/widget/gtk/nsWindow.h.vanilla	2020-12-12 01:35:34.000000000 +0100
+++ firefox-84.0/widget/gtk/nsWindow.h	2020-12-15 14:55:32.528811898 +0100
@@ -8,14 +8,14 @@
 #ifndef __nsWindow_h__
 #define __nsWindow_h__
 
-#include <gdk/gdk.h>
+//#include <gdk/gdk.h>
 #include <gtk/gtk.h>
 #ifdef MOZ_X11
 #  include <gdk/gdkx.h>
 #  include "X11UndefineNone.h"
 #endif /* MOZ_X11 */
 #ifdef MOZ_WAYLAND
-#  include <gdk/gdkwayland.h>
+//#  include <gdk/gdkwayland.h>
 #  include "base/thread.h"
 #  include "WaylandVsyncSource.h"
 #endif
--- firefox-84.0/gfx/gl/GLContextProviderGLX.cpp.vanilla	2020-12-12 01:35:34.000000000 +0100
+++ firefox-84.0/gfx/gl/GLContextProviderGLX.cpp	2020-12-15 14:55:31.272811913 +0100
@@ -3,11 +3,11 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
-#ifdef MOZ_WIDGET_GTK
+#if 0 
 #  include <gdk/gdk.h>
 #  include <gdk/gdkx.h>
 #  define GET_NATIVE_WINDOW(aWidget) \
-    GDK_WINDOW_XID((GdkWindow*)aWidget->GetNativeData(NS_NATIVE_WINDOW))
+   GDK_WINDOW_XID((GdkWindow*)aWidget->GetNativeData(NS_NATIVE_WINDOW))
 #endif
 
 #include <X11/Xlib.h>
@@ -42,7 +42,7 @@
 
 #include "gfxCrashReporterUtils.h"
 
-#ifdef MOZ_WIDGET_GTK
+#if MOZ_WIDGET_GTK
 #  include "gfxPlatformGtk.h"
 #endif
 
--- firefox-84.0/gfx/2d/DrawTargetSkia.cpp.vanilla	2020-12-15 14:33:11.600827783 +0100
+++ firefox-84.0/gfx/2d/DrawTargetSkia.cpp	2020-12-12 00:41:49.000000000 +0100
@@ -68,28 +68,15 @@
     mColors.resize(mCount);
     mPositions.resize(mCount);
     if (aStops[0].offset != 0) {
-// reddit.com yellow graddient
-#if MOZ_BIG_ENDIAN()
-      mColors[0] = mozilla::detail::Swapper<SkColor>::swap(ColorToSkColor(aStops[0].color, 1.0));
-#else
       mColors[0] = ColorToSkColor(aStops[0].color, 1.0);
-#endif
       mPositions[0] = 0;
     }
     for (uint32_t i = 0; i < aNumStops; i++) {
-#if MOZ_BIG_ENDIAN()
-      mColors[i + shift] = mozilla::detail::Swapper<SkColor>::swap(ColorToSkColor(aStops[i].color, 1.0));
-#else
       mColors[i + shift] = ColorToSkColor(aStops[i].color, 1.0);
-#endif
       mPositions[i + shift] = SkFloatToScalar(aStops[i].offset);
     }
     if (aStops[aNumStops - 1].offset != 1) {
-#if MOZ_BIG_ENDIAN()
-      mColors[mCount - 1] = mozilla::detail::Swapper<SkColor>::swap(ColorToSkColor(aStops[aNumStops - 1].color, 1.0));
-#else
       mColors[mCount - 1] = ColorToSkColor(aStops[aNumStops - 1].color, 1.0);
-#endif
       mPositions[mCount - 1] = SK_Scalar1;
     }
   }
@@ -164,7 +151,7 @@
   for (int row = 0; row < height; ++row) {
     for (int column = 0; column < width; column += 4) {
       if (aData[column + kARGBAlphaOffset] != 0xFF) {
-        gfxWarning() << "RGBX pixel at (" << column << "," << row
+        gfxCriticalError() << "RGBX pixel at (" << column << "," << row
                            << ") in " << width << "x" << height
                            << " surface is not opaque: " << int(aData[column])
                            << "," << int(aData[column + 1]) << ","
@@ -214,7 +201,7 @@
     if (aData[offset + kARGBAlphaOffset] != 0xFF) {
       int row = offset / aStride;
       int column = (offset % aStride) / pixelSize;
-      gfxWarning() << "RGBX corner pixel at (" << column << "," << row
+      gfxCriticalError() << "RGBX corner pixel at (" << column << "," << row
                          << ") in " << aSize.width << "x" << aSize.height
                          << " surface, bounded by "
                          << "(" << bounds.X() << "," << bounds.Y() << ","
--- firefox-84.0/gfx/thebes/gfxGdkNativeRenderer.cpp.vanilla	2020-12-12 00:41:50.000000000 +0100
+++ firefox-84.0/gfx/thebes/gfxGdkNativeRenderer.cpp	2020-12-15 14:55:31.272811913 +0100
@@ -7,7 +7,7 @@
 #include "gfxContext.h"
 #include "gfxPlatformGtk.h"
 
-#ifdef MOZ_X11
+#if 0
 #  include <gdk/gdkx.h>
 #  include "cairo-xlib.h"
 #  include "gfxXlibSurface.h"
--- firefox-84.0/gfx/thebes/gfxGdkNativeRenderer.h.vanilla	2020-12-12 00:41:49.000000000 +0100
+++ firefox-84.0/gfx/thebes/gfxGdkNativeRenderer.h	2020-12-15 14:55:31.272811913 +0100
@@ -6,9 +6,9 @@
 #ifndef GFXGDKNATIVERENDER_H_
 #define GFXGDKNATIVERENDER_H_
 
-#include <gdk/gdk.h>
+//#include <gdk/gdk.h>
 #include "nsSize.h"
-#ifdef MOZ_X11
+#if MOZ_X11
 #  include "gfxXlibNativeRenderer.h"
 #endif
 
--- firefox-84.0/dom/moz.build.vanilla	2020-12-15 14:55:31.268811913 +0100
+++ firefox-84.0/dom/moz.build	2020-12-15 14:56:45.972811028 +0100
@@ -119,7 +119,7 @@
     "imptests",
 ]
 
-if CONFIG["MOZ_WIDGET_TOOLKIT"] in ("gtk", "cocoa", "windows"):
+if CONFIG["MOZ_WIDGET_TOOLKIT"] in ("cocoa", "windows"):
     TEST_DIRS += ["plugins/test"]
 
 SPHINX_TREES["/dom"] = "docs"
--- firefox-84.0/browser/installer/package-manifest.in.vanilla	2020-12-12 00:41:42.000000000 +0100
+++ firefox-84.0/browser/installer/package-manifest.in	2020-12-15 14:55:31.268811913 +0100
@@ -107,7 +107,6 @@
 #endif
 #ifdef MOZ_GTK
 @BINPATH@/@DLL_PREFIX@mozgtk@DLL_SUFFIX@
-@BINPATH@/gtk2/@DLL_PREFIX@mozgtk@DLL_SUFFIX@
 #ifdef MOZ_WAYLAND
 @BINPATH@/@DLL_PREFIX@mozwayland@DLL_SUFFIX@
 #endif
--- firefox-84.0/old-configure.vanilla	2020-12-12 01:35:41.000000000 +0100
+++ firefox-84.0/old-configure	2020-12-15 14:55:31.280811913 +0100
@@ -7921,6 +7921,9 @@
 EOF
 
   fi
+
+if false; then
+
   if test "$MOZ_ENABLE_GTK"; then
     cat >> confdefs.pytmp <<EOF
     (''' GLIB_VERSION_MIN_REQUIRED ''', r''' $GLIB_VERSION_MIN_REQUIRED ''')
@@ -7996,8 +7999,7 @@
 fi # COMPILE_ENVIRONMENT
 
 
-
-
+fi
 
 
 # Components and Features
--- firefox-85.0/toolkit/xre/nsEmbedFunctions.cpp.vanilla	2021-01-25 22:08:04.007439014 +0100
+++ firefox-85.0/toolkit/xre/nsEmbedFunctions.cpp	2021-01-25 22:08:44.799441923 +0100
@@ -526,7 +526,7 @@
   gArgv = aArgv;
   gArgc = aArgc;
 
-#ifdef MOZ_X11
+#if 0
   XInitThreads();
 #endif
 #ifdef MOZ_WIDGET_GTK

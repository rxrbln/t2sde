# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../libeventdb/compile.patch
# Copyright (C) 2008 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- libeventdb-0.90.orig/sqlite.c
+++ libeventdb-0.90/sqlite.c
@@ -403,7 +403,7 @@
 
       int uid = atoi (argv[0]);
 
-      ev = EVENT_SOURCE (g_hash_table_lookup (edb->events, (gpointer) uid));
+      ev = EVENT_SOURCE (g_hash_table_lookup (edb->events, GINT_TO_POINTER(uid)));
       if (ev)
 	/* Already loaded, just add a reference and return it.  */
 	g_object_ref (ev);
@@ -563,7 +563,7 @@
 	    ev->sequence = atoi (argv[1]);
 	  else if (!strcmp (argv[0], "category"))
 	    ev->categories = g_slist_prepend (ev->categories,
-					      (gpointer)atoi (argv[1]));
+					      GINT_TO_POINTER(atoi (argv[1])));
 	}
       return 0;
     }
--- libeventdb-0.90.orig/event.c
+++ libeventdb-0.90/event.c
@@ -1257,7 +1257,7 @@
       return;
     }
 
-  ev->categories = g_slist_prepend (ev->categories, (gpointer) category);
+  ev->categories = g_slist_prepend (ev->categories, GINT_TO_POINTER(category));
 
   STAMP (ev, error);
 }
--- libeventdb-0.90.orig/event-db.c
+++ libeventdb-0.90/event-db.c
@@ -580,7 +580,7 @@
 {
   EventSource *ev;
 
-  ev = EVENT_SOURCE (g_hash_table_lookup (edb->events, (gpointer) uid));
+  ev = EVENT_SOURCE (g_hash_table_lookup (edb->events, GINT_TO_POINTER(uid)));
   if (ev)
     /* Already loaded, just add a reference and return it.  */
     {
@@ -646,7 +646,8 @@
 
   int callback (EventSource *ev)
     {
-      LIVE (ev);
+      g_assert(! EVENT (ev)->dead);
+      /* LIVE (ev); */
 
       if (only_untimed && ! ev->untimed)
 	goto out;

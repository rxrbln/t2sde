# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/*/apache/config.hlp
# Copyright (C) 1998 - 2004 ROCK Linux Project
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

MENU_PKG_APACHE
  Here you will find config options for the apache packages.

ROCKCFG_PKG_APACHE_MOD_SO
  Enable DSO capability provided by mod_so.

  The Apache HTTP Server is a modular program where the administrator 
  can choose the functionality to include in the server by selecting a 
  set of modules. The modules can be statically compiled into the httpd 
  binary when the server is built. 
  Alternatively, modules can be compiled as Dynamic Shared Objects (DSOs) 
  that exist separately from the main httpd binary file. DSO modules may 
  be compiled at the time the server is built, or they may be compiled 
  and added at a later time using the Apache Extension Tool (apxs).

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/dso.html 

ROCKCFG_PKG_APACHE_MOD_AUTH_ANON
  Enable anonymous user access provided by mod_auth_anon. 

  This module does access control in a manner similar to anonymous-ftp 
  sites; i.e. have a 'magic' user id 'anonymous' and the email address 
  as a password. These email addresses can be logged.
 
  Combined with other (database) access control methods, this allows for 
  effective user tracking and customization according to a user profile 
  while still keeping the site open for 'unregistered' users. One advantage 
  of using Auth-based user tracking is that, unlike magic-cookies and funny 
  URL pre/postfixes, it is completely browser independent and it allows 
  users to share URLs.

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_auth_anon.html 

ROCKCFG_PKG_APACHE_MOD_AUTH_DBM
  mod_auth_dbm provides for HTTP Basic Authentication, where the usernames 
  and passwords are stored in DBM type database files. 
  Use this option to enable the module.

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_auth_dbm.html

ROCKCFG_PKG_APACHE_MOD_AUTH_DIGEST
  Enable RFC2617 Digest authentication provided by mod_auth_digest. 
  This module uses plain text files to store the credentials.

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_auth_digest.html

ROCKCFG_PKG_APACHE_MOD_AUTH_LDAP 
  Allows an LDAP directory to be used to store the database for HTTP Basic 
  authentication.

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_auth_ldap.html 

ROCKCFG_PKG_APACHE_MOD_SSL
  Enable support for SSL/TLS provided by mod_ssl.

  The Apache HTTP Server module mod_ssl provides an interface to the OpenSSL 
  library, which provides Strong Encryption using the Secure Sockets Layer 
  and Transport Layer Security protocols.

  More Documentantion about this topic can be found here:
  
  http://httpd.apache.org/docs-2.0/ssl/

ROCKCFG_PKG_APACHE_MOD_DAV
  Enable the WebDAV protocol handling provided by mod_dav. 
  
  mod_dav provides class 1 and class 2 WebDAV ('Web-based Distributed Authoring 
  and Versioning') functionality for Apache. This extension to the HTTP protocol 
  allows creating, moving, copying, and deleting resources and collections on a 
  remote web server.

  Support for filesystem resources is provided by the seperate module mod_dav_fs.
  mod_dav_fs is also automatically enabled if you choose this option.

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_dav.html

ROCKCFG_PKG_APACHE_MOD_CACHE
  Enable dynamic file caching provided by mod_cache. 
 
  mod_cache implements an RFC 2616 compliant HTTP content cache that can be used 
  to cache either local or proxied content.
 
  This experimental module may be interesting for servers with high load or caching 
  proxy servers. At least one storage management module (e.g. mod_disk_cache or
  mod_mem_cache) is also necessary.

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_cache.html
 
ROCKCFG_PKG_APACHE_MOD_DISK_CACHE
  Enable disk caching provided by mod_disk_cache.

  mod_disk_cache implements a disk based storage manager. 
  It is primarily of use in conjunction with mod_proxy.   

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_disk_cache.html

ROCKCFG_PKG_APACHE_MOD_PROXY
  Enable the proxy/gateway functionality provided by mod_proxy. 

  The proxying capabilities for CONNECT, FTP and HTTP are provided by the seperate 
  modules mod_proxy_connect, mod_proxy_ftp and mod_proxy_http. 
  These three modules are also automatically enabled with this option.

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_proxy.html

ROCKCFG_PKG_APACHE_MOD_REWRITE
  Enable rule based URL manipulation provided by mod_rewrite.

  This module uses a rule-based rewriting engine (based on a regular-expression parser) 
  to rewrite requested URLs on the fly. It supports an unlimited number of rules and an 
  unlimited number of attached rule conditions for each rule to provide a really flexible 
  and powerful URL manipulation mechanism. The URL manipulations can depend on various 
  tests, for instance server variables, environment variables, HTTP headers, time stamps 
  and even external database lookups in various formats can be used to achieve a really 
  granular URL matching.

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_rewrite.html

ROCKCFG_PKG_APACHE_MOD_DEFLATE
  Enable deflate transfer encoding provided by mod_deflate.

  The mod_deflate module provides the DEFLATE output filter that allows output from 
  your server to be compressed before being sent to the client over the network.

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_deflate.html

ROCKCFG_PKG_APACHE_MOD_INFO
  Enable the server information provided by mod_info.

  mod_info provides a comprehensive overview of the server configuration

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_info.html

ROCKCFG_PKG_APACHE_MOD_SPELLING
  Enable the functionality to correct common URL misspellings, which is provided 
  by mod_speling.

  Requests to documents sometimes cannot be served by the core apache server because 
  the request was misspelled or miscapitalized. This module addresses this problem by 
  trying to find a matching document, even after all other modules gave up. 

  More Documentantion about this topic can be found here:

  http://httpd.apache.org/docs-2.0/mod/mod_speling.html


[COPY] --- T2-COPYRIGHT-BEGIN ---
[COPY] t2/package/*/nginx/nginx.desc
[COPY] Copyright (C) 2006 - 2025 The T2 SDE Project
[COPY] SPDX-License-Identifier: GPL-2.0
[COPY] --- T2-COPYRIGHT-END ---

[I] A high perfomance http and reverse proxy server

[T] Nginx (engine x) is a http server developed since spring 2002, beeing
[T] used on several sufficiently loaded sites including on the majority of
[T] the servers of rambler.ru.
[T]
[T] Basic functionality:
[T] * serving static queries, index it is file, the automatic creation
[T] of list it is file
[T] * accelerated proxing without caching, simple load balancing and failure
[T] tolerance
[T] * the accelerated support of the remote FastCGI servers, simple load
[T] balance and failure tolerance
[T] * modularity, filters, including compression (gzip), byte-ranges (dokachka),
[T] chunked the answers, SSI- filter; several subqueries on one page,
[T] processed in SSI- filter through proxy or FastccGI, are carried out in
[T] parallel.
[T] * support SSL

[U] https://nginx.org/en/

[A] Igor Sysoev <igor@sysoev.ru>
[M] Rene Rebe <rene@t2-project.org>

[F] CROSS NO-LTO
[C] extra/network

[L] GPL
[S] Stable
[V] 1.29.1

[D] 0465b5d6d8ee694d3af78bb64ad5e28938bc7a4cdfe6cac98635e67c nginx-1.29.1.tar.gz https://nginx.org/download/
[D] 607ce5fee55806acf6dd8b6b9ad4044fc8d361e820409dcbe07903a8 nginx-auth-jwt-0.6.0.tar.gz https://github.com/kjdev/nginx-auth-jwt/archive/0.6.0/
[D] 09b5f77829ca6161e136394fb62ea02bc0963da8f6f213a47ab336aa ngx-fancyindex-0.5.2.tar.xz https://github.com/aperezdc/ngx-fancyindex/releases/download/v0.5.2/
[D] 7783e81b848c4bff22b895747fccd09e685395edbcb58eedc6518eac ngx_devel_kit-0.3.3.tar.gz https://github.com/vision5/ngx_devel_kit/archive/v0.3.3/
[D] 53188e3cdaed7e69879913b1a15eb58c47338d2f20a75839e40e697f traffic-accounting-nginx-module-2.0.tar.gz https://github.com/Lax/traffic-accounting-nginx-module/archive/v2.0/
[D] 5ae434763857774baf09597036bc708bc07257fe893febe2c8f23609 array-var-nginx-module-0.06.tar.gz https://github.com/openresty/array-var-nginx-module/archive/v0.06/
[D] 87c499063f8f7e9a5d8370d7f761922e037ca64b63f99149cecc95f3 ngx_cache_purge-2.5.3.tar.gz https://github.com/nginx-modules/ngx_cache_purge/archive/2.5.3/
[D] c96e1ef31dcc4440c26d94cc744a2ac954a16491831d6d43bd0bef45 nginx_cookie_flag_module-1.1.0.tar.gz https://github.com/AirisX/nginx_cookie_flag_module/archive/v1.1.0/
[D] 528380dc8dfa1f9b7bafbe7854f0c23498faeed48fcb1edcd9707092 nginx-dav-ext-module-3.0.0.tar.gz https://github.com/arut/nginx-dav-ext-module/archive/v3.0.0/
[D] 71bc5b0f27f7a34855576697a40c27505a915d29383c341707de4b96 echo-nginx-module-0.63.tar.gz https://github.com/openresty/echo-nginx-module/archive/v0.63/
[D] f45dbdd94ff6445e0b4c04eee14fef3f18855cae07e6dece6258ed26 nginx-rtmp-module-1.2.2.tar.gz https://github.com/arut/nginx-rtmp-module/archive/refs/tags/v1.2.2/

prepare_nginx_modules() {
	local module=
	local moddir=$builddir/nginx-modules

	mkdir -pv $builddir/nginx-modules
	for x in $(match_source_file -p | grep -v $pkg-$ver); do
		module=${x##*/} module=${module%%.tar.*}

		echo "[INFO] extracting nginx module $moddir"
		tar -C $moddir $taropt $x

		var_append confopt ' ' --add-dynamic-module=$moddir/$module
	done
}
hook_add prepatch 5 prepare_nginx_modules

# make our build system find config options
# context here: grep sub_scripts scripts/functions.in
hook_add preconf 5 "ln -svf $builddir/$pkg-$ver/auto/{options,configure}"

nginx_fix_cross_integers() {
	# TODO make a condition for 32 bits too

	cat <<-EOF >> objs/ngx_auto_config.h
	#ifndef NGX_PTR_SIZE
	#define NGX_PTR_SIZE  8
	#endif

	#ifndef NGX_MAX_SIZE_T_VALUE
	#define NGX_MAX_SIZE_T_VALUE  9223372036854775807LL
	#endif

	#ifndef NGX_SIZE_T_LEN
	#define NGX_SIZE_T_LEN  (sizeof("-9223372036854775808") - 1)
	#endif

	#ifndef NGX_MAX_OFF_T_VALUE
	#define NGX_MAX_OFF_T_VALUE  9223372036854775807LL
	#endif

	#ifndef NGX_OFF_T_LEN
	#define NGX_OFF_T_LEN  (sizeof("-9223372036854775808") - 1)
	#endif

	#ifndef NGX_TIME_T_SIZE
	#define NGX_TIME_T_SIZE  8
	#endif

	#ifndef NGX_TIME_T_LEN
	#define NGX_TIME_T_LEN  (sizeof("-9223372036854775808") - 1)
	#endif

	#ifndef NGX_MAX_TIME_T_VALUE
	#define NGX_MAX_TIME_T_VALUE  9223372036854775807LL
	#endif
	EOF
}
hook_add premake 5 "nginx_fix_cross_integers"

var_append confopt ' ' "
	--user=$pkg \
	--group=$pkg \
	--prefix=$localstatedir/lib/$pkg \
	--sbin-path=$sbindir/$pkg \
	--conf-path=$sysconfdir/$pkg/$pkg.conf \
	--pid-path=$localstatedir/run/$pkg/$pkg.pid \
	--lock-path=$localstatedir/run/$pkg/$pkg.lock \
	--error-log-path=stderr \

	--with-threads \
	--with-pcre-jit \

	--without-mail \
	--with-pcre2 \

	--http-client-body-temp-path=$localstatedir/lib/$pkg/tmp/client_body \
	--http-fastcgi-temp-path=$localstatedir/lib/$pkg/tmp/fastcgi \
	--http-log-path=$localstatedir/log/nginx/access.log \
	--http-proxy-temp-path=$localstatedir/lib/$pkg/tmp/proxy \
	--http-scgi-temp-path=$localstatedir/lib/$pkg/tmp/scgi \
	--http-uwsgi-temp-path=$localstatedir/lib/$pkg/tmp/uwsgi \

	--with-file-aio \
	--with-http_addition_module \
	--with-http_auth_request_module \
	--with-http_dav_module \
	--with-http_degradation_module \
	--with-http_flv_module \
	--with-http_gunzip_module \
	--with-http_gzip_static_module \
	--with-http_mp4_module \
	--with-http_random_index_module \
	--with-http_realip_module \
	--with-http_secure_link_module \
	--with-http_slice_module \
	--with-http_ssl_module \
	--with-http_stub_status_module \
	--with-http_sub_module \
	--with-http_v2_module \
	--with-http_xslt_module=dynamic \

	--with-stream \
	--with-stream=dynamic \
	--with-stream_realip_module \
	--with-stream_ssl_module \
	--with-stream_ssl_preread_module
"

if pkginstalled libgd; then
	var_append confopt ' ' --with-http_image_filter_module=dynamic
else
	hook_add preconf 5 "rm -f $builddir/$pkg-$ver/src/http/modules/ngx_http_image_filter_module.c"
fi

nginx_load_modules() {
	mkdir -pv $root$sysconfdir/$pkg/modules
	for x in $root$localstatedir/lib/$pkg/modules/*; do
		local module=${x##*/}
		echo "load_module \"modules/${x##*/}\";" > $root$sysconfdir/$pkg/modules/${module%%.so}.conf
	done
}
hook_add postinstall 5 nginx_load_modules

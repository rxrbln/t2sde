--- ./Makefile.vanilla	2007-02-16 12:15:33.021433178 +0100
+++ ./Makefile	2007-02-16 12:16:11.859646441 +0100
@@ -33,8 +33,8 @@
 
 CC	= gcc
 KERNELVERSION=$(shell echo $(KVERS) | cut -d. -f1,2)
-EXTRA_CFLAGS += ${TOPINC} -Wall -Werror ${EXTRACFLAGS} ${UNIONFS_DEBUG_CFLAG} ${UNIONFS_OPT_CFLAG} ${UNIONFS_VERSION_CFLAG}
-UCFLAGS = -I. ${UNIONFS_DEBUG_CFLAG} ${UNIONFS_OPT_CFLAG} -Wall -Werror ${EXTRAUCFLAGS}  ${UNIONFS_VERSION_CFLAG}
+EXTRA_CFLAGS += ${TOPINC} -Wall ${EXTRACFLAGS} ${UNIONFS_DEBUG_CFLAG} ${UNIONFS_OPT_CFLAG} ${UNIONFS_VERSION_CFLAG}
+UCFLAGS = -I. ${UNIONFS_DEBUG_CFLAG} ${UNIONFS_OPT_CFLAG} -Wall ${EXTRAUCFLAGS}  ${UNIONFS_VERSION_CFLAG}
 
 obj-m := unionfs.o
 unionfs-objs := subr.o dentry.o file.o inode.o main.o super.o \
--- ./super.c.vanilla	2007-02-16 12:14:36.650220765 +0100
+++ ./super.c	2007-02-16 12:14:41.458494773 +0100
@@ -326,7 +326,7 @@
 	print_entry_location();
 
 	c = (struct unionfs_inode_container *)
-	    kmem_cache_alloc(unionfs_inode_cachep, SLAB_KERNEL);
+	    kmem_cache_alloc(unionfs_inode_cachep, GFP_KERNEL);
 	if (!c) {
 		print_exit_pointer(NULL);
 		return NULL;
--- ./lookup.c.vanilla	2007-02-16 12:30:29.124499181 +0100
+++ ./lookup.c	2007-02-16 12:30:40.249133138 +0100
@@ -419,7 +419,7 @@
 	spin_lock(&dentry->d_lock);
 	if (!dtopd_nocheck(dentry)) {
 		dtopd_lhs(dentry) = (struct unionfs_dentry_info *)
-		    kmem_cache_alloc(unionfs_dentry_cachep, SLAB_ATOMIC);
+		    kmem_cache_alloc(unionfs_dentry_cachep, GFP_ATOMIC);
 		if (!dtopd_nocheck(dentry))
 			goto out;
 		init_MUTEX_LOCKED(&dtopd_nocheck(dentry)->udi_sem);
--- ./rdstate.c.vanilla	2007-02-16 12:30:04.555099051 +0100
+++ ./rdstate.c	2007-02-16 12:30:15.207706108 +0100
@@ -251,7 +251,7 @@
 
 	newnode =
 	    (struct filldir_node *)kmem_cache_alloc(unionfs_filldir_cachep,
-						    SLAB_KERNEL);
+						    GFP_KERNEL);
 	if (!newnode)
 		goto out;
 
--- ./sioq.c.vanilla	2007-02-16 12:34:33.298413860 +0100
+++ ./sioq.c	2007-02-16 13:59:09.731703306 +0100
@@ -43,10 +43,10 @@
 
 void run_sioq(void (*func)(void *arg), struct sioq_args *args)
 {
-	DECLARE_WORK(wk, func, &args->comp);
+	DECLARE_DELAYED_WORK(wk, func);
 
 	init_completion(&args->comp);
-	while (!queue_work(sioq, &wk)) {
+	while (!queue_delayed_work(sioq, &wk, &args->comp)) {
 		// TODO: do accounting if needed
 		schedule();
 	}

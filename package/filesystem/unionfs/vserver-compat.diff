# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../unionfs/vserver-compat.diff
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

This patch is needed to compile unionfs against a vserver patched kernel.
(Functionality is untested, however)
	-- jsaw

diff -urN unionfs-1.3/commonfops.c unionfs-1.3-t2/commonfops.c
--- unionfs-1.3/commonfops.c	2006-06-26 21:46:44.000000000 +0200
+++ unionfs-1.3-t2/commonfops.c	2006-08-23 10:34:49.000000000 +0200
@@ -148,7 +148,7 @@
 	/* bring it to the same state as an unlinked file */
 	hidden_dentry = dtohd_index(dentry, dbstart(dentry));
 	hidden_dir_dentry = lock_parent(hidden_dentry);
-	err = vfs_unlink(hidden_dir_dentry->d_inode, hidden_dentry);
+	err = vfs_unlink(hidden_dir_dentry->d_inode, hidden_dentry,NULL);
 	unlock_dir(hidden_dir_dentry);
 
       out:
diff -urN unionfs-1.3/copyup.c unionfs-1.3-t2/copyup.c
--- unionfs-1.3/copyup.c	2006-06-26 21:46:44.000000000 +0200
+++ unionfs-1.3-t2/copyup.c	2006-08-23 10:34:40.000000000 +0200
@@ -234,10 +234,10 @@
 	current->fsgid = new_hidden_parent_dentry->d_inode->i_gid;
 	if (S_ISDIR(old_hidden_dentry->d_inode->i_mode)) {
 		err = vfs_mkdir(new_hidden_parent_dentry->d_inode,
-				new_hidden_dentry, S_IRWXU);
+				new_hidden_dentry, S_IRWXU,NULL);
 	} else if (S_ISLNK(old_hidden_dentry->d_inode->i_mode)) {
 		err = vfs_symlink(new_hidden_parent_dentry->d_inode,
-				  new_hidden_dentry, symbuf, S_IRWXU);
+				  new_hidden_dentry, symbuf, S_IRWXU,NULL);
 	} else if (S_ISBLK(old_hidden_dentry->d_inode->i_mode)
 		   || S_ISCHR(old_hidden_dentry->d_inode->i_mode)
 		   || S_ISFIFO(old_hidden_dentry->d_inode->i_mode)
@@ -245,7 +245,7 @@
 		err = vfs_mknod(new_hidden_parent_dentry->d_inode,
 				new_hidden_dentry,
 				old_hidden_dentry->d_inode->i_mode,
-				old_hidden_dentry->d_inode->i_rdev);
+				old_hidden_dentry->d_inode->i_rdev,NULL);
 	} else if (S_ISREG(old_hidden_dentry->d_inode->i_mode)) {
 		err = vfs_create(new_hidden_parent_dentry->d_inode,
 				 new_hidden_dentry, S_IRWXU, NULL);
@@ -372,7 +372,7 @@
 			 * or something else happened so let's unlink; we don't
 			 * really care about the return value of vfs_unlink */
 			vfs_unlink(new_hidden_parent_dentry->d_inode,
-				   new_hidden_dentry);
+				   new_hidden_dentry,NULL);
 
 			goto out_dir;
 		}
@@ -678,7 +678,7 @@
 			current->fsuid = hidden_parent_dentry->d_inode->i_uid;
 			current->fsgid = hidden_parent_dentry->d_inode->i_gid;
 			err = vfs_mkdir(hidden_parent_dentry->d_inode,
-					hidden_dentry, S_IRWXUGO);
+					hidden_dentry, S_IRWXUGO,NULL);
 			current->fsuid = saved_uid;
 			current->fsgid = saved_gid;
 			if (!err)
diff -urN unionfs-1.3/dirhelper.c unionfs-1.3-t2/dirhelper.c
--- unionfs-1.3/dirhelper.c	2006-06-26 21:46:44.000000000 +0200
+++ unionfs-1.3-t2/dirhelper.c	2006-08-23 10:34:03.000000000 +0200
@@ -87,7 +87,7 @@
 				break;
 			}
 			if (hidden_dentry->d_inode)
-				err = vfs_unlink(hidden_dir, hidden_dentry);
+				err = vfs_unlink(hidden_dir, hidden_dentry,NULL);
 			DPUT(hidden_dentry);
 			if (err)
 				break;
diff -urN unionfs-1.3/inode.c unionfs-1.3-t2/inode.c
--- unionfs-1.3/inode.c	2006-06-26 21:46:44.000000000 +0200
+++ unionfs-1.3-t2/inode.c	2006-08-23 10:29:40.000000000 +0200
@@ -257,7 +257,7 @@
 				       dbstart(new_dentry)))) {
 			err =
 			    vfs_unlink(hidden_dir_dentry->d_inode,
-				       whiteout_dentry);
+				       whiteout_dentry,NULL);
 		}
 		fist_copy_attr_times(dir, hidden_dir_dentry->d_inode);
 		dir->i_nlink = get_nlinks(dir);
@@ -285,7 +285,7 @@
 	if (!(err = is_robranch(old_dentry)))
 		err =
 		    vfs_link(hidden_old_dentry, hidden_dir_dentry->d_inode,
-			     hidden_new_dentry);
+			     hidden_new_dentry,NULL);
 	unlock_dir(hidden_dir_dentry);
 
       docopyup:
@@ -309,7 +309,7 @@
 				err =
 				    vfs_link(hidden_old_dentry,
 					     hidden_dir_dentry->d_inode,
-					     hidden_new_dentry);
+					     hidden_new_dentry,NULL);
 				unlock_dir(hidden_dir_dentry);
 				goto check_link;
 			}
@@ -388,7 +388,7 @@
 		if (!(err = is_robranch_super(dentry->d_sb, bstart))) {
 			err =
 			    vfs_unlink(hidden_dir_dentry->d_inode,
-				       whiteout_dentry);
+				       whiteout_dentry,NULL);
 		}
 		DPUT(whiteout_dentry);
 
@@ -434,7 +434,7 @@
 			mode = S_IALLUGO;
 			err =
 			    vfs_symlink(hidden_dir_dentry->d_inode,
-					hidden_dentry, symname, mode);
+					hidden_dentry, symname, mode,NULL);
 		}
 		unlock_dir(hidden_dir_dentry);
 
@@ -513,7 +513,7 @@
 		if (!(err = is_robranch_super(dentry->d_sb, bstart))) {
 			err =
 			    vfs_unlink(hidden_parent_dentry->d_inode,
-				       whiteout_dentry);
+				       whiteout_dentry,NULL);
 		}
 		DPUT(whiteout_dentry);
 
@@ -552,7 +552,7 @@
 		if (!(err = is_robranch_super(dentry->d_sb, bindex))) {
 			err =
 			    vfs_mkdir(hidden_parent_dentry->d_inode,
-				      hidden_dentry, mode);
+				      hidden_dentry, mode,NULL);
 		}
 		unlock_dir(hidden_parent_dentry);
 
@@ -648,7 +648,7 @@
 		//found a.wh.foo entry, remove it then do vfs_mkdir
 		if (!(err = is_robranch_super(dentry->d_sb, bstart)))
 			err = vfs_unlink(hidden_parent_dentry->d_inode,
-					 whiteout_dentry);
+					 whiteout_dentry,NULL);
 		DPUT(whiteout_dentry);
 
 		unlock_dir(hidden_parent_dentry);
@@ -682,7 +682,7 @@
 		}
 		if (!(err = is_robranch_super(dentry->d_sb, bindex))) {
 			err = vfs_mknod(hidden_parent_dentry->d_inode,
-					hidden_dentry, mode, dev);
+					hidden_dentry, mode, dev,NULL);
 		}
 		/* XXX this could potentially return a negative hidden_dentry! */
 		if (err || !hidden_dentry->d_inode) {
diff -urN unionfs-1.3/rename.c unionfs-1.3-t2/rename.c
--- unionfs-1.3/rename.c	2006-06-26 21:46:44.000000000 +0200
+++ unionfs-1.3-t2/rename.c	2006-08-23 10:33:27.000000000 +0200
@@ -85,7 +85,7 @@
 		if (!(err = is_robranch_super(old_dentry->d_sb, bindex))) {
 			err =
 			    vfs_unlink(hidden_wh_dir_dentry->d_inode,
-				       hidden_wh_dentry);
+				       hidden_wh_dentry,NULL);
 		}
 		DPUT(hidden_wh_dentry);
 		unlock_dir(hidden_wh_dir_dentry);
@@ -210,7 +210,7 @@
 		if (!(err = is_robranch_super(old_dir->i_sb, bindex))) {
 			err =
 			    vfs_unlink(unlink_dir_dentry->d_inode,
-				       unlink_dentry);
+				       unlink_dentry,NULL);
 		}
 
 		fist_copy_attr_times(new_dentry->d_parent->d_inode,
@@ -451,7 +451,7 @@
 		if (!(err = is_robranch_super(old_dir->i_sb, bindex)))
 			err =
 			    vfs_unlink(unlink_dir_dentry->d_inode,
-				       unlink_dentry);
+				       unlink_dentry,NULL);
 
 		fist_copy_attr_times(new_dentry->d_parent->d_inode,
 				     unlink_dir_dentry->d_inode);
@@ -599,7 +599,7 @@
 		unlink_dir_dentry = lock_parent(unlink_dentry);
 		if (!(err = is_robranch_super(old_dir->i_sb, info->new_bstart)))
 			err = vfs_unlink(unlink_dir_dentry->d_inode,
-					 unlink_dentry);
+					 unlink_dentry,NULL);
 
 		fist_copy_attr_times(new_dentry->d_parent->d_inode,
 				     unlink_dir_dentry->d_inode);
diff -urN unionfs-1.3/unlink.c unionfs-1.3-t2/unlink.c
--- unionfs-1.3/unlink.c	2006-06-26 21:46:44.000000000 +0200
+++ unionfs-1.3-t2/unlink.c	2006-08-23 10:33:03.000000000 +0200
@@ -49,7 +49,7 @@
 		DGET(hidden_dentry);
 		if (!(err = is_robranch_super(dentry->d_sb, bindex)))
 			err = vfs_unlink(hidden_dir_dentry->d_inode,
-					 hidden_dentry);
+					 hidden_dentry,NULL);
 		DPUT(hidden_dentry);
 		fist_copy_attr_times(dir, hidden_dir_dentry->d_inode);
 		unlock_dir(hidden_dir_dentry);
@@ -117,7 +117,7 @@
 	/* avoid destroying the hidden inode if the file is in use */
 	DGET(hidden_dentry);
 	if (!(err = is_robranch_super(dentry->d_sb, bindex)))
-		err = vfs_unlink(hidden_dir_dentry->d_inode, hidden_dentry);
+		err = vfs_unlink(hidden_dir_dentry->d_inode, hidden_dentry,NULL);
 	DPUT(hidden_dentry);
 	fist_copy_attr_times(dir, hidden_dir_dentry->d_inode);
 	unlock_dir(hidden_dir_dentry);
@@ -196,7 +196,7 @@
 	/* avoid destroying the hidden inode if the file is in use */
 	DGET(hidden_dentry);
 	if (!(err = is_robranch(dentry))) {
-		err = vfs_rmdir(hidden_dir_dentry->d_inode, hidden_dentry);
+		err = vfs_rmdir(hidden_dir_dentry->d_inode, hidden_dentry,NULL);
 	}
 	DPUT(hidden_dentry);
 
@@ -242,7 +242,7 @@
 				 is_robranch_super(dentry->d_sb, bindex))) {
 				err =
 				    vfs_rmdir(hidden_dir_dentry->d_inode,
-					      hidden_dentry);
+					      hidden_dentry,NULL);
 			}
 		} else {
 			err = -EISDIR;

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../e2fsprogs/et-dietlibc.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# Copyright (C) 1998 - 2004 ROCK Linux Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---


This patch "workarounds" table base computation problems using the dietlibc awk.
This modification is imperfect and dietlibc/awk should be fully reviewed, since
the error table base is different when this is used. This affects the distributions
ABI, but as dietlibc already is a HUGE ABI change, this is not issue, yet.
(However this only happens on soem platforms like SPARC, x86 and PowerPC also mis-
comput the base, but in another way ...)

  - Rene Rebe <rene@exactcode.de>

diff -ur e2fsprogs-1.34-orig/lib/et/et_c.awk e2fsprogs-1.34/lib/et/et_c.awk
--- e2fsprogs-1.34-orig/lib/et/et_c.awk	2003-05-06 05:07:31.000000000 +0200
+++ e2fsprogs-1.34/lib/et/et_c.awk	2004-06-10 09:18:40.820000000 +0200
@@ -89,7 +89,7 @@
 	tab_base_high = (tab_base_high * 256) + \
 			int(tab_base_low / mod_base)
 	tab_base_low = tab_base_low % mod_base
-	if (tab_base_low < 0) {
+	if (tab_base_low <= 0) {
 		# Work around stupid bug in the ARM libm
 		tab_base_low = tab_base_low + mod_base
 	}
diff -ur e2fsprogs-1.34-orig/lib/et/et_h.awk e2fsprogs-1.34/lib/et/et_h.awk
--- e2fsprogs-1.34-orig/lib/et/et_h.awk	2003-05-06 05:07:31.000000000 +0200
+++ e2fsprogs-1.34/lib/et/et_h.awk	2004-06-10 09:15:58.010000000 +0200
@@ -89,7 +89,7 @@
 	tab_base_high = (tab_base_high * 256) + \
 			int(tab_base_low / mod_base)
 	tab_base_low = tab_base_low % mod_base
-	if (tab_base_low < 0) {
+	if (tab_base_low <= 0) {
 		# Work around stupid bug in the ARM libm
 		tab_base_low = tab_base_low + mod_base
 	}
 

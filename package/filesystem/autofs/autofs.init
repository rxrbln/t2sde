#!/bin/sh
#
# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../autofs/autofs.init
# Copyright (C) 2004 - 2006 The T2 SDE Project
# Copyright (C) 1998 - 2003 ROCK Linux Project
# 
# More information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- T2-COPYRIGHT-NOTE-END ---
#
# Desc: Kernel Automounter Daemon
# Runlevel: 74 rcX
#

PATH=/sbin:/usr/sbin:/bin:/usr/bin
export PATH

# We can add local options here
# e.g. localoptions='rsize=8192,wsize=8192'
#
localoptions=''

function getmounts()
{
  if [ -f /etc/auto.master ]
  then
    cat /etc/auto.master | sed -e '/^#/d' -e '/^$/d'| (
        while read dir map options
        do
            if [ ! -z "$dir" -a ! -z "$map" \
                        -a "$(echo "$map" | cut -c1)" != "-" ]
            then
                map=$(echo "/etc/$map" | sed -e 's:^/etc//:/:')
                options=$(echo "$options" | sed -e 's/\(^\|[ \t]\)-/\1/g')
                if [ -x $map ]; then
                    echo "automount $dir program $map $options $localoptions"
                elif [ -f $map ]; then
                    echo "automount $dir file $map $options $localoptions"
                else
                    echo "automount $dir $(basename $map) $options $localoptions"
                fi
            fi
        done
    )
  fi
}

function status()
{
        echo "Configured Mount Points:"
        echo "------------------------"
        getmounts
        echo ""
        echo "Active Mount Points:"
        echo "--------------------"
        ps ax|grep "[0-9]:[0-9][0-9] automount " | (
                while read pid tt stat time command; do echo $command; done
        )
}

main_begin

    block_begin(start, `Starting automounter.')
	check(`getmounts | sh -e')
    block_end

    block_begin(stop, `Stopping automounter.')
	check(`killall automount')
	if sleep 1 ; [ "$(pidof /usr/sbin/automount)" ] ; then
		check(`killall -9 automount')
	fi
	if sleep 1 ; [ "$(pidof /usr/sbin/automount)" ] ; then
		echo "Not able to stop processes: $(pidof /usr/sbin/automount)"
IN		error=1
	fi
    block_end

    block_begin(status)
        status
    block_end

main_end

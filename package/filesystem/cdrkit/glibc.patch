# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../cdrkit/glibc.patch
# Copyright (C) 2009 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

diff -puNr cdrkit-1.1.9.orig/include/schily.h cdrkit-1.1.9/include/schily.h
--- cdrkit-1.1.9.orig/include/schily.h	2006-11-25 01:20:20.000000000 +0100
+++ cdrkit-1.1.9/include/schily.h	2009-03-11 20:31:53.000000000 +0100
@@ -116,7 +116,7 @@ extern	int	fexecl(const char *, FILE *, 
 extern	int	fexecle(const char *, FILE *, FILE *, FILE *, const char *, ...);
 		/* 6th arg not const, fexecv forces av[ac] = NULL */
 extern	int	fexecv(const char *, FILE *, FILE *, FILE *, int, char **);
-extern	int	fexecve(const char *, FILE *, FILE *, FILE *, char * const *, 
+extern	int	f_execve(const char *, FILE *, FILE *, FILE *, char * const *, 
 							  char * const *);
 extern	int	fspawnv(FILE *, FILE *, FILE *, int, char * const *);
 extern	int	fspawnl(FILE *, FILE *, FILE *, const char *, const char *, ...);
@@ -190,7 +190,7 @@ extern	int	schily_error(const char *, ..
 extern	char	*fillbytes(void *, int, char);
 extern	char	*findbytes(const void *, int, char);
 extern	int	findline(const char *, char, const char *, int, char **, int);
-extern	int	getline(char *, int);
+extern	int	get_line(char *, int);
 extern	int	getstr(char *, int);
 extern	int	breakline(char *, char, char **, int);
 extern	int	getallargs(int *, char * const**, const char *, ...);
diff -puNr cdrkit-1.1.9.orig/librols/fexec.c cdrkit-1.1.9/librols/fexec.c
--- cdrkit-1.1.9.orig/librols/fexec.c	2008-02-25 12:14:07.000000000 +0100
+++ cdrkit-1.1.9/librols/fexec.c	2009-03-11 20:31:53.000000000 +0100
@@ -170,7 +170,7 @@ fexecle(name, in, out, err, va_alist)
 	} while (p != NULL);
 	va_end(args);
 
-	ret = fexecve(name, in, out, err, av, env);
+	ret = f_execve(name, in, out, err, av, env);
 	if (av != xav)
 		free(av);
 	return (ret);
@@ -184,11 +184,11 @@ fexecv(name, in, out, err, ac, av)
 	char *av[];
 {
 	av[ac] = NULL;			/*  force list to be null terminated */
-	return (fexecve(name, in, out, err, av, environ));
+	return (f_execve(name, in, out, err, av, environ));
 }
 
 EXPORT int
-fexecve(name, in, out, err, av, env)
+f_execve(name, in, out, err, av, env)
 	const char *name;
 	FILE *in, *out, *err;
 	char * const av[], * const env[];
diff -puNr cdrkit-1.1.9.orig/librols/stdio/fgetline.c cdrkit-1.1.9/librols/stdio/fgetline.c
--- cdrkit-1.1.9.orig/librols/stdio/fgetline.c	2006-09-05 10:39:04.000000000 +0200
+++ cdrkit-1.1.9/librols/stdio/fgetline.c	2009-03-11 20:31:53.000000000 +0100
@@ -76,7 +76,7 @@ fgetline(f, buf, len)
 }
 
 EXPORT int
-getline(buf, len)
+get_line(buf, len)
 	char	*buf;
 	int	len;
 {
diff -puNr cdrkit-1.1.9.orig/libusal/scsitransp.c cdrkit-1.1.9/libusal/scsitransp.c
--- cdrkit-1.1.9.orig/libusal/scsitransp.c	2008-02-25 12:14:07.000000000 +0100
+++ cdrkit-1.1.9/libusal/scsitransp.c	2009-03-11 20:31:53.000000000 +0100
@@ -301,7 +301,7 @@ usal_yes(char *msg)
 
 	printf("%s", msg);
 	flush();
-	if (getline(okbuf, sizeof (okbuf)) == EOF)
+	if (get_line(okbuf, sizeof (okbuf)) == EOF)
 		exit(EX_BAD);
 	if (streql(okbuf, "y") || streql(okbuf, "yes") ||
 	    streql(okbuf, "Y") || streql(okbuf, "YES"))
diff -puNr cdrkit-1.1.9.orig/readom/io.c cdrkit-1.1.9/readom/io.c
--- cdrkit-1.1.9.orig/readom/io.c	2006-12-08 14:38:43.000000000 +0100
+++ cdrkit-1.1.9/readom/io.c	2009-03-11 20:31:53.000000000 +0100
@@ -130,7 +130,7 @@ BOOL getvalue(char *s, long *lp, long mi
 		(*prt)(s, *lp, mini, maxi, dp);
 		flush();
 		line[0] = '\0';
-		if (getline(line, 80) == EOF)
+		if (get_line(line, 80) == EOF)
 			exit(EX_BAD);
 
 		linep = skipwhite(line);
@@ -178,7 +178,7 @@ again:
 	vprintf(form, args);
 	va_end(args);
 	flush();
-	if (getline(okbuf, sizeof(okbuf)) == EOF)
+	if (get_line(okbuf, sizeof(okbuf)) == EOF)
 		exit(EX_BAD);
 	if (okbuf[0] == '?') {
 		printf("Enter 'y', 'Y', 'yes' or 'YES' if you agree with the previous asked question.\n");
diff -puNr cdrkit-1.1.9.orig/readom/readom.c cdrkit-1.1.9/readom/readom.c
--- cdrkit-1.1.9.orig/readom/readom.c	2007-04-03 00:43:29.000000000 +0200
+++ cdrkit-1.1.9/readom/readom.c	2009-03-11 20:31:53.000000000 +0100
@@ -1605,7 +1605,7 @@ read_generic(SCSI *usalp, parm_t *parmp,
 		fprintf(stderr, "Copy from SCSI (%d,%d,%d) disk to file\n",
 					usal_scsibus(usalp), usal_target(usalp), usal_lun(usalp));
 		fprintf(stderr, "Enter filename [%s]: ", defname); flush();
-		(void) getline(filename, sizeof (filename));
+		(void) get_line(filename, sizeof (filename));
 	}
 
 	if (askrange) {
@@ -1772,7 +1772,7 @@ write_disk(SCSI *usalp, parm_t *parmp)
 		fprintf(stderr, "Copy from file to SCSI (%d,%d,%d) disk\n",
 					usal_scsibus(usalp), usal_target(usalp), usal_lun(usalp));
 		fprintf(stderr, "Enter filename [%s]: ", defname); flush();
-		(void) getline(filename, sizeof (filename));
+		(void) get_line(filename, sizeof (filename));
 		fprintf(stderr, "Notice: reading from file always starts at file offset 0.\n");
 
 		getlong("Enter starting sector for copy:", &addr, 0L, end-1);
diff -puNr cdrkit-1.1.9.orig/wodim/cue.c cdrkit-1.1.9/wodim/cue.c
--- cdrkit-1.1.9.orig/wodim/cue.c	2006-12-08 14:38:43.000000000 +0100
+++ cdrkit-1.1.9/wodim/cue.c	2009-03-11 20:32:18.000000000 +0100
@@ -253,7 +253,7 @@ static	char	*skipwhite(const char *s);
 static	char	*peekword(void);
 static	char	*lineend(void);
 static	char	*markword(char *delim);
-static	char	getdelim(void);
+static	char	get_delim(void);
 static	char	*getnextitem(char *delim);
 static	char	*neednextitem(char *delim);
 static	char	*nextword(void);
@@ -746,7 +746,7 @@ parse_track(track_t trackp[], state_t *s
 	if (kp == NULL)
 		cueabort("Unknown filetype '%s'", word);
 
-	if (getdelim() == '/') {
+	if (get_delim() == '/') {
 		word = needitem();
 		if (*astol(++word, &secsize) != '\0')
 			cueabort("Not a number '%s'", word);
@@ -1128,7 +1128,7 @@ linelen--;
 }
 
 static char 
-getdelim()
+get_delim()
 {
 	return (wordendc);
 }


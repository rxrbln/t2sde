# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../cloop/linux26.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---
--- cloop-2.01/Makefile.orig   2004-10-16 16:33:17.765491344 +0200
+++ cloop-2.01/Makefile        2004-10-16 16:33:41.524879368 +0200
@@ -11,7 +11,9 @@
 CKERNOPS:=-D__KERNEL__ -DMODULE -fno-builtin -nostdlib -DKBUILD_MODNAME="cloop" -DKBUILD_BASENAME="cloop"
 
 ifdef CONFIG_MODVERSIONS
+ifeq ($(PATCHLEVEL),4)
 MODVERSIONS:= -DMODVERSIONS -include $(KERNEL_DIR)/include/linux/modversions.h
+endif
 CKERNOPS += $(MODVERSIONS)
 endif
 
--- cloop-2.01/compressed_loop.c.orig	2004-07-28 00:44:11.000000000 +0200
+++ cloop-2.01/compressed_loop.c	2004-10-17 15:00:10.313358216 +0200
@@ -202,7 +202,12 @@
                           unsigned long offset, unsigned long size)
 {
  char *kaddr;
- struct clo_read_data *p = (struct clo_read_data*)desc->buf;
+ struct clo_read_data *p =
+#if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,0)
+  (struct clo_read_data*)desc->arg.data;
+#else
+  (struct clo_read_data*)desc->buf;
+#endif
  unsigned long count = desc->count;
  if (size > count) size = count;
  kaddr = kmap(page);
@@ -228,7 +233,12 @@
    read_descriptor_t desc;
    desc.written = 0;
    desc.count   = size;
-   desc.buf     = (char*)&cd;
+#if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,0)
+   desc.arg.data =
+#else
+   desc.buf =
+#endif
+      (char*)&cd;
    desc.error   = 0;
 #ifdef REDHAT_KERNEL /* Greenshoe Linux */
    do_generic_file_read(f, &pos, &desc, clo_read_actor, 0);

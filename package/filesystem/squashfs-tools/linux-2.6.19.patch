# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../squashfs-tools/linux-2.6.19.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- squashfs3.1-r2/linux-2.6.18/squashfs3.1-patch.orig	2006-11-30 10:40:22.000000000 +0100
+++ squashfs3.1-r2/linux-2.6.18/squashfs3.1-patch	2006-11-30 10:43:46.000000000 +0100
@@ -87,7 +87,7 @@
 diff --new-file -urp linux-2.6.18/fs/squashfs/inode.c linux-2.6.18-squashfs3.1/fs/squashfs/inode.c
 --- linux-2.6.18/fs/squashfs/inode.c	1970-01-01 01:00:00.000000000 +0100
 +++ linux-2.6.18-squashfs3.1/fs/squashfs/inode.c	2006-08-21 00:15:29.000000000 +0100
-@@ -0,0 +1,2156 @@
+@@ -0,0 +1,2159 @@
 +/*
 + * Squashfs - a compressed read only filesystem for Linux
 + *
@@ -131,6 +131,7 @@
 +#include <linux/vmalloc.h>
 +#include <asm/uaccess.h>
 +#include <asm/semaphore.h>
++#include <linux/version.h>
 +
 +#include "squashfs.h"
 +
@@ -694,7 +695,9 @@
 +			i->i_fop = &generic_ro_fops;
 +			i->i_mode |= S_IFREG;
 +			i->i_blocks = ((i->i_size - 1) >> 9) + 1;
++#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,19)
 +			i->i_blksize = PAGE_CACHE_SIZE;
++#endif
 +			SQUASHFS_I(i)->u.s1.fragment_start_block = frag_blk;
 +			SQUASHFS_I(i)->u.s1.fragment_size = frag_size;
 +			SQUASHFS_I(i)->u.s1.fragment_offset = inodep->offset;
@@ -747,7 +750,9 @@
 +			i->i_fop = &generic_ro_fops;
 +			i->i_mode |= S_IFREG;
 +			i->i_blocks = ((i->i_size - 1) >> 9) + 1;
++#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,19)
 +			i->i_blksize = PAGE_CACHE_SIZE;
++#endif
 +			SQUASHFS_I(i)->u.s1.fragment_start_block = frag_blk;
 +			SQUASHFS_I(i)->u.s1.fragment_size = frag_size;
 +			SQUASHFS_I(i)->u.s1.fragment_offset = inodep->offset;
@@ -2233,9 +2238,7 @@
 +
 +static void destroy_inodecache(void)
 +{
-+	if (kmem_cache_destroy(squashfs_inode_cachep))
-+		printk(KERN_INFO "squashfs_inode_cache: not all structures "
-+			"were freed\n");
++	kmem_cache_destroy(squashfs_inode_cachep);
 +}
 +
 +
@@ -2258,7 +2261,7 @@
 diff --new-file -urp linux-2.6.18/fs/squashfs/squashfs2_0.c linux-2.6.18-squashfs3.1/fs/squashfs/squashfs2_0.c
 --- linux-2.6.18/fs/squashfs/squashfs2_0.c	1970-01-01 01:00:00.000000000 +0100
 +++ linux-2.6.18-squashfs3.1/fs/squashfs/squashfs2_0.c	2006-08-21 00:14:55.000000000 +0100
-@@ -0,0 +1,779 @@
+@@ -0,0 +1,782 @@
 +/*
 + * Squashfs - a compressed read only filesystem for Linux
 + *
@@ -2303,6 +2306,7 @@
 +#include <linux/vmalloc.h>
 +#include <asm/uaccess.h>
 +#include <asm/semaphore.h>
++#include <linux/version.h>
 +
 +#include "squashfs.h"
 +static int squashfs_readdir_2(struct file *file, void *dirent, filldir_t filldir);
@@ -2490,7 +2494,9 @@
 +			i->i_atime.tv_sec = inodep->mtime;
 +			i->i_ctime.tv_sec = inodep->mtime;
 +			i->i_blocks = ((i->i_size - 1) >> 9) + 1;
++#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,19)
 +			i->i_blksize = PAGE_CACHE_SIZE;
++#endif
 +			SQUASHFS_I(i)->u.s1.fragment_start_block = frag_blk;
 +			SQUASHFS_I(i)->u.s1.fragment_size = frag_size;
 +			SQUASHFS_I(i)->u.s1.fragment_offset = inodep->offset;

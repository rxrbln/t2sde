# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../reiserfsprogs/big-endian.patch
# Copyright (C) 2007 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Tested to work basically with mkfs.reiserfs and tunefs.reiserfs.
fsck.reiserfs shows some spurious noise, probably related to problems
with the ugly magic key encoding. Needs in-depth review later on.

  - Rene Rebe <rene@exactcode.de>

--- ./include/misc/swab.h
+++ ./include/misc/swab.h
@@ -7,36 +7,30 @@
 #define MISC_SWAB_H
 
 #define __swab16(x) \
-({ \
-        __u16 __x = (x); \
-        ((__u16)( \
-                (((__u16)(__x) & (__u16)0x00ffU) << 8) | \
-                (((__u16)(__x) & (__u16)0xff00U) >> 8) )); \
-})
+(       ((__u16)( \
+                (((__u16)(x) & (__u16)0x00ffU) << 8) | \
+                (((__u16)(x) & (__u16)0xff00U) >> 8) )) \
+)
 
 #define __swab32(x) \
-({ \
-        __u32 __x = (x); \
-        ((__u32)( \
-                (((__u32)(__x) & (__u32)0x000000ffUL) << 24) | \
-                (((__u32)(__x) & (__u32)0x0000ff00UL) <<  8) | \
-                (((__u32)(__x) & (__u32)0x00ff0000UL) >>  8) | \
-                (((__u32)(__x) & (__u32)0xff000000UL) >> 24) )); \
-})
+(       ((__u32)( \
+                (((__u32)(x) & (__u32)0x000000ffUL) << 24) | \
+                (((__u32)(x) & (__u32)0x0000ff00UL) <<  8) | \
+                (((__u32)(x) & (__u32)0x00ff0000UL) >>  8) | \
+                (((__u32)(x) & (__u32)0xff000000UL) >> 24) )) \
+)
 
 #define __swab64(x) \
-({ \
-        __u64 __x = (x); \
-        ((__u64)( \
-                (__u64)(((__u64)(__x) & (__u64)0x00000000000000ffULL) << 56) | \
-                (__u64)(((__u64)(__x) & (__u64)0x000000000000ff00ULL) << 40) | \
-                (__u64)(((__u64)(__x) & (__u64)0x0000000000ff0000ULL) << 24) | \
-                (__u64)(((__u64)(__x) & (__u64)0x00000000ff000000ULL) <<  8) | \
-                (__u64)(((__u64)(__x) & (__u64)0x000000ff00000000ULL) >>  8) | \
-                (__u64)(((__u64)(__x) & (__u64)0x0000ff0000000000ULL) >> 24) | \
-                (__u64)(((__u64)(__x) & (__u64)0x00ff000000000000ULL) >> 40) | \
-                (__u64)(((__u64)(__x) & (__u64)0xff00000000000000ULL) >> 56) )); \
-})
+(       ((__u64)( \
+                (__u64)(((__u64)(x) & (__u64)0x00000000000000ffULL) << 56) | \
+                (__u64)(((__u64)(x) & (__u64)0x000000000000ff00ULL) << 40) | \
+                (__u64)(((__u64)(x) & (__u64)0x0000000000ff0000ULL) << 24) | \
+                (__u64)(((__u64)(x) & (__u64)0x00000000ff000000ULL) <<  8) | \
+                (__u64)(((__u64)(x) & (__u64)0x000000ff00000000ULL) >>  8) | \
+                (__u64)(((__u64)(x) & (__u64)0x0000ff0000000000ULL) >> 24) | \
+                (__u64)(((__u64)(x) & (__u64)0x00ff000000000000ULL) >> 40) | \
+                (__u64)(((__u64)(x) & (__u64)0xff00000000000000ULL) >> 56) )) \
+)
 
 
 #ifndef WORDS_BIGENDIAN

--- reiserfsprogs-3.6.20/include/misc/types.h.vanilla	2007-11-06 09:36:58.000000000 +0100
+++ reiserfsprogs-3.6.20/include/misc/types.h	2007-11-06 09:37:09.000000000 +0100
@@ -7,11 +7,14 @@
 #define MISC_TYPES_H
 
 #include <string.h>
+#include <linux/types.h>
 
+#if 0
 typedef unsigned char           __u8;
 typedef unsigned short int      __u16;
 typedef unsigned int            __u32;
 typedef unsigned long long int  __u64;
+#endif
 
 #define INVAL_PTR	(void *)-1
 #define MAX_INT		2147483647
--- reiserfsprogs-3.6.20/libreiserfs/key.c.vanilla	2007-11-05 17:11:02.000000000 +0100
+++ reiserfsprogs-3.6.20/libreiserfs/key.c	2007-11-05 22:26:23.000000000 +0100
@@ -8,6 +8,7 @@
 #endif
 
 #include "reiserfs/libreiserfs.h"
+#include "reiserfs/types.h"
 #include "misc/unaligned.h"
 
 const reiserfs_key_t root_dir_key = 
@@ -45,7 +46,8 @@
 # define set_key_type_v2(key,val)   (void)(key->u.k2_offset_v2.k_type = (val))
 #elif __BYTE_ORDER == __BIG_ENDIAN
 typedef union {
-    struct offset_v2 offset_v2;
+    //struct offset_v2 offset_v2;
+    struct reiserfs_koff_v2 offset_v2;
     __u64 linear;
 } __attribute__ ((__packed__)) offset_v2_esafe_overlay;
 

# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by scripts/Create-CopyPatch.
# 
# T2 SDE: package/*/rustc/rustc.conf
# Copyright (C) 2018 - 2021 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- T2-COPYRIGHT-NOTE-END ---

. $base/package/*/*/rust-conf.in

if ! atstage toolchain && [ $prefix_auto = 1 ]; then
	prefix=$rust_prefix
	set_confopt
fi

# AArch64 AMDGPU ARM BPF Hexagon Lanai Mips MSP430 NVPTX PowerPC RISCV Sparc SystemZ WebAssembly X86 XCore
# keep in sync w/ llvm!;-)
targets="WebAssembly"
case $arch in
	arm) var_insert targets ';' 'ARM' ;;
	arm64) var_insert targets ';' 'AArch64' ;;
	mips*) var_insert targets ';' 'Mips' ;;
	sparc*) var_insert targets ';' 'Sparc' ;;
	powerpc*) var_insert targets ';' 'PowerPC' ;;
	riscv*) var_insert targets ';' 'RISCV' ;;
	x86*) var_insert targets ';' 'X86' ;;
	*) var_insert targets ';' 'X86';
esac

rustc_config_toml() {
	cat > x.toml <<-EOT
	cc = "${archprefix}cc"
	cxx = "${archprefix}c++"
	ar = "${archprefix}ar"
	ranlib = "${archprefix}ranlib"
	linker = "${archprefix}cc"
EOT
	atstage cross &&
	[ "${arch_build/nocross/unknown}" != "${arch_build/nocross/unknown}" ] &&
	cat >> x.toml <<-EOT
	llvm-config = "$sysroot/TOOLCHAIN/tools.cross/bin/llvm-config"
EOT

	sed -i 's/#targets = .*/targets = \"$targets\"/' config.toml
	sed -i "/^\[target.${arch_target%%-*}/r x.toml" config.toml
}
hook_add premake 5 "rustc_config_toml"

confopt=
cleanconfopt=0
var_append confopt " " "--prefix=$root/$prefix --libdir=$root$libdir"

var_append confopt " " "--release-channel=stable"
var_append confopt " " "--disable-codegen-tests" # needs llvm's FileCheck
var_append confopt " " "--disable-docs"
#var_append confopt " " "--enable-local-rust"

if atstage native; then
    var_append confopt " " "--llvm-config=$root/usr/bin/llvm-config"
else
    var_append confopt " " "--llvm-config=$sysroot/TOOLCHAIN/tools.cross/bin/llvm-config"
    var_append confopt ' ' "--build=${arch_build/nocross/unknown}"

    if atstage toolchain; then
	var_append confopt ' ' "--host=${arch_build/nocross/unknown}"
	var_append confopt ' ' "--target=${arch_target/-t2-/-unknown-},${arch_build/-nocross-/-unknown-}"
    else
	var_append confopt ' ' "--host=${arch_target/-t2-/-unknown-}"
	var_append confopt ' ' "--target=${arch_target/-t2-/-unknown-}"
    fi
fi

makeopt=
makeinstopt=
#var_append makeopt " " "EXCLUDE_CARGO=1"
#makeinstopt=install

hook_add inmake 5 "./x.py build"
hook_add postmake 5 "./x.py install"

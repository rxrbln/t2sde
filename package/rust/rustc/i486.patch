# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../rustc/i486.patch
# Copyright (C) 2020 - 2021 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

Let's add i386 and i486 for embedded, bootloader or other early kernel code.

 - Signed-off-by: Ren√© Rebe <rene@exactcode.de>

--- rustc-1.48.0-src/compiler/rustc_target/src/spec/mod.rs.vanilla	2020-12-25 18:38:24.276037477 +0100
+++ rustc-1.48.0-src/compiler/rustc_target/src/spec/mod.rs	2020-12-25 18:39:59.920035379 +0100
@@ -494,6 +494,8 @@
     ("x86_64-unknown-linux-gnux32", x86_64_unknown_linux_gnux32),
     ("i686-unknown-linux-gnu", i686_unknown_linux_gnu),
     ("i586-unknown-linux-gnu", i586_unknown_linux_gnu),
+    ("i486-unknown-linux-gnu", i486_unknown_linux_gnu),
+    ("i386-unknown-linux-gnu", i386_unknown_linux_gnu),
     ("mips-unknown-linux-gnu", mips_unknown_linux_gnu),
     ("mips64-unknown-linux-gnuabi64", mips64_unknown_linux_gnuabi64),
     ("mips64el-unknown-linux-gnuabi64", mips64el_unknown_linux_gnuabi64),
--- rustc-1.49.0-src/compiler/rustc_target/src/spec/i386_unknown_linux_gnu.rs.vanilla	2020-12-25 18:40:42.916034436 +0100
+++ rustc-1.49.0-src/compiler/rustc_target/src/spec/i386_unknown_linux_gnu.rs	2020-12-25 18:41:12.220033793 +0100
@@ -0,0 +1,8 @@
+use crate::spec::TargetResult;
+
+pub fn target() -> TargetResult {
+    let mut base = super::i686_unknown_linux_gnu::target()?;
+    base.options.cpu = "i386".to_string();
+    base.llvm_target = "i386-unknown-linux-gnu".to_string();
+    Ok(base)
+}
--- rustc-1.49.0-src/compiler/rustc_target/src/spec/i486_unknown_linux_gnu.rs.vanilla	2020-12-25 18:40:42.916034436 +0100
+++ rustc-1.49.0-src/compiler/rustc_target/src/spec/i486_unknown_linux_gnu.rs	2020-12-25 18:41:12.220033793 +0100
@@ -0,0 +1,8 @@
+use crate::spec::TargetResult;
+
+pub fn target() -> TargetResult {
+    let mut base = super::i686_unknown_linux_gnu::target()?;
+    base.options.cpu = "i486".to_string();
+    base.llvm_target = "i486-unknown-linux-gnu".to_string();
+    Ok(base)
+}
--- rustc-1.48.0-src/src/tools/build-manifest/src/main.rs.vanilla	2020-12-25 22:51:50.639703846 +0100
+++ rustc-1.48.0-src/src/tools/build-manifest/src/main.rs	2020-12-25 22:52:22.467703148 +0100
@@ -90,6 +90,8 @@
     "asmjs-unknown-emscripten",
     "i386-apple-ios",
     "i586-pc-windows-msvc",
+    "i386-unknown-linux-gnu",
+    "i486-unknown-linux-gnu",
     "i586-unknown-linux-gnu",
     "i586-unknown-linux-musl",
     "i686-apple-darwin",

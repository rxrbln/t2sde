# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../vdr-text2skin/i18n.patch
# Copyright (C) 2007 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- text2skin/Makefile.orig	2007-10-08 18:49:06.000000000 +0200
+++ text2skin/Makefile	2007-10-08 21:48:37.000000000 +0200
@@ -7,7 +7,7 @@
 
 # comment this out if you don't want to use FreeType font rendering
 
-HAVE_FREETYPE=1
+#HAVE_FREETYPE=1
 
 
 # DO NOT EDIT BELOW THIS LINE UNLESS YOU KNOW WHAT YOU'RE DOING
--- text2skin/text2skin.c	2007-10-08 21:12:38.000000000 +0200
+++ text2skin/text2skin.c.orig	2000-01-01 00:00:00.000000000 +0100
@@ -25,7 +25,7 @@
 
 bool cText2SkinPlugin::Start(void) {
 	RegisterI18n(Phrases);
-	Text2SkinStatus.SetLanguage(Setup.OSDLanguage);
+	Text2SkinStatus.SetLanguage(I18nLanguageIndex(Setup.OSDLanguage));
 	cText2SkinLoader::Start();
 	return true;
 }
--- text2skin/i18n.c.orig	2000-01-01 00:00:00.000000000 +0100
+++ text2skin/i18n.c	2007-10-08 21:42:40.000000000 +0200
@@ -166,7 +166,7 @@
 
 cText2SkinI18n::~cText2SkinI18n() {
 	for (int i = 0; mPhrases[i][0]; ++i) {
-		for (int j = 0; j < I18nNumLanguages; ++j)
+		for (int j = 0; j < I18nNumLanguagesWithLocale(); ++j)
 			free((void*)mPhrases[i][j]);
 	}
 	free(mPhrases);
@@ -182,7 +182,7 @@
 			memset(&p, 0, sizeof(tI18nPhrase));
 			Text += 17;
 
-			for (i = 0; i < I18nNumLanguages; ++i) {
+			for (i = 0; i < I18nNumLanguagesWithLocale(); ++i) {
 				char *langs = strdup(I18nLanguageCode(i));
 				char *ptr = langs, *ep;
 				std::string text;
@@ -200,7 +200,7 @@
 			}
 
 			int idx = mNumPhrases++;
-			for (i = 0; i < I18nNumLanguages; ++i)
+			for (i = 0; i < I18nNumLanguagesWithLocale(); ++i)
 				if (!p[i]) p[i] = "";
 			mPhrases = (tI18nPhrase*)realloc(mPhrases, (mNumPhrases + 1) * sizeof(tI18nPhrase));
 			memcpy(mPhrases[idx], p, sizeof(tI18nPhrase));
@@ -214,7 +214,7 @@
 
 bool cText2SkinI18n::Load(const std::string &Filename) {
 	if (cText2SkinFile::Load(Filename)) {
-		I18nRegister(mPhrases, mIdentity.c_str());
+		I18nRegister(mIdentity.c_str());
 		return true;
 	}
 	return false;
--- text2skin/status.c.orig	2000-01-01 00:00:00.000000000 +0100
+++ text2skin/status.c	2007-10-08 21:43:56.000000000 +0200
@@ -109,8 +109,8 @@
 
 void cText2SkinStatus::OsdClear(void) 
 {
-	if (Setup.OSDLanguage != mLastLanguage) {
-		mLastLanguage = Setup.OSDLanguage;
+	if (I18nLanguageIndex(Setup.OSDLanguage) != mLastLanguage) {
+		mLastLanguage = I18nLanguageIndex(Setup.OSDLanguage);
 		cxString::Reparse();
 	}
 }

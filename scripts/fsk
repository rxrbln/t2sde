 
-check4update()
-{
-	local addlist=''
-
-	echo "Parsing dependencies for $1"
-
-
-	# make sure it is a valid package (and not a group)
-
-	if [ "`echo $alllist | grep +$package+`" = "" ] ; then
-		[ $debug = 1 ] && \
-		  echo "  $package: not in target configuration (e.g. meta flag) - skipped."
-		continue
-	fi
-
-	if [ "`echo $deplist | grep +$package+`" ] ; then
-		[ $debug = 1 ] && \
-		  echo "  $package: allready processed - skipped."
-		continue
-	fi
-
-	confdir=""
-        for x in package/* ; do
-            if [ -d "$x/$package" ] ; then
-                if [ "$confdir" ] ; then confdir=X
-                else confdir="$x/$package" ; fi
-            fi
-        done
-
-        if [ -z "$confdir" ] ; then
-                [ $debug = 1 ] && \
-		  echo "  $package: No such package."
-        elif [ "$confdir" = X ] ; then
-                [ $debug = 1 ] && \
-		  echo "  $package: Package in multiple trees."
-        elif [ ! -f /var/adm/packages/$package ] ; then
-                [ $debug = 1 ] && \
-		  echo "  $package: Not installed."
-		addlist="$addlist $package"
-        else
-                o_ver=$(grep '^Package Name and Version' \
-                                /var/adm/packages/$package | cut -f6 -d' ')
-                n_ver=$(grep '^\[V\] ' $confdir/$package.desc | cut -f2 -d' ')
-                if [ "$o_ver" != "$n_ver" -a "$n_ver" != "0000" ] ; then
-                        [ $debug = 1 ] && \
-			  echo "  $package: New version ($o_ver -> $n_ver)."
-			addlist="$addlist $package"
-                else
-                  if [ $ignore_chksum = 0 ] ; then
-                        o_ck=$(grep '^ROCK Linux Package Source Checksum' \
-                                /var/adm/packages/$package | cut -f6 -d' ')
-                        n_ck=$(md5sum package/*/$package/* 2> /dev/null | \
-                                grep -v '\.cache$' | md5sum | cut -f1 -d' ')
-                        if [ "$o_ck" != "$n_ck" ] ; then
-                                [ $debug = 1 ] && \
-				  echo "  $package: New source checksum ($n_ck)."
-				addlist="$addlist $package"
-			else
-				if [ -f /var/adm/cache/$package ] ; then
-				  if ! grep -q BUILDTIME /var/adm/cache/$package ; then
-				    [ $debug = 1 ] && \
-				      echo "  $package: Former build was broken."
-				    addlist="$addlist $package"
-				  fi
-				else
-				  [ $debug = 1 ] && \
-				    echo "  $package: Equal source checksum ($n_ck), skipped."
-				fi
-                        fi
-                  fi
-                fi
-        fi
-
-	done
-
-	for package in $addlist ; do
-		deplist="$deplist +$package+"
-	done
-
-	if [ $recursive = 1 ] ; then 
-		for package in $addlist ; do
-			fill_deplist $package
-		done
-	fi
-}
-

alllist=`./scripts/Create-PkgList $arch | grep ^X | cut -d ' ' -f 5 | \
  sed -e 's/$/+/' -e 's/^/+/'`

 

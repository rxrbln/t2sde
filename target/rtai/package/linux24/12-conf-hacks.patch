# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../linux24/12-conf-hacks.patch
# Copyright (C) 2004 - 2005 The T2 SDE Project
# Copyright (C) 1998 - 2003 ROCK Linux Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

--- ./scripts/Configure.orig	2003-01-13 23:24:50.000000000 +0100
+++ ./scripts/Configure	2003-01-13 23:24:54.000000000 +0100
@@ -49,6 +49,8 @@
 # 24 January 1999, Michael Elizabeth Chastain, <mec@shout.net>
 # - Improve the exit message (Jeff Ronne).
 
+# 20-06-1999: Added ALL_MODS_HACK and NEVER_ASK_HACK - Clifford
+# 01-05-2001: Improved ALL_MODS_HACK - Rene 
 #
 # Make sure we're really running bash.
 #
@@ -184,6 +186,7 @@
 	      ;;
 	esac
 	while :; do
+	  [ -z "$old" -a ".$NEVER_ASK_HACK" = .1 ] && old="$def"
 	  readln "$1 ($2) [$defprompt] " "$def" "$old"
 	  case "$ans" in
 	    [yY] | [yY]es ) define_bool "$2" "y"
@@ -216,6 +219,10 @@
 		;;
 	  esac
 	  while :; do
+	    if [ ".$ALL_MODS_HACK" = .1 -a ".$def" != .y ] ; then
+	      old=m ; def=m
+	    fi
+	    [ -z "$old" -a ".$NEVER_ASK_HACK" = .1 ] && old="$def"
 	    readln "$1 ($2) [$defprompt] " "$def" "$old"
 	    case "$ans" in
 	      [yY] | [yY]es ) define_tristate "$2" "y"
@@ -271,6 +278,10 @@
 		      ;;
 		esac
 		while :; do
+		  if [ ".$ALL_MODS_HACK" = .1 ] ; then
+		    old=m ; def=m
+		  fi
+		  [ -z "$old" -a ".$NEVER_ASK_HACK" = .1 ] && old="$def"
 		  readln "$ques ($var) [$defprompt] " "$def" "$old"
 		  case "$ans" in
 		      [nN] | [nN]o )  define_tristate "$var" "n"
@@ -359,6 +370,8 @@
 	  max=10000000     # !!
 	fi
 	while :; do
+	  [ -z "$def" -a ".$NEVER_ASK_HACK" = .1 ] && def="0"
+	  [ -z "$old" -a ".$NEVER_ASK_HACK" = .1 ] && old="$def"
 	  readln "$1 ($2) [$def] " "$def" "$old"
 	  if expr \( \( $ans + 0 \) \>= $min \) \& \( $ans \<= $max \) >/dev/null 2>&1 ; then
             define_int "$2" "$ans"
@@ -390,6 +403,8 @@
 	def=${old:-$3}
 	def=${def#*[x,X]}
 	while :; do
+	  [ -z "$def" -a ".$NEVER_ASK_HACK" = .1 ] && def="0"
+	  [ -z "$old" -a ".$NEVER_ASK_HACK" = .1 ] && old="$def"
 	  readln "$1 ($2) [$def] " "$def" "$old"
 	  ans=${ans#*[x,X]}
 	  if expr "$ans" : '[0-9a-fA-F][0-9a-fA-F]*$' > /dev/null; then
@@ -420,6 +435,8 @@
 function string () {
 	old=$(eval echo "\${$2}")
 	def=${old:-$3}
+	[ -z "$def" -a ".$NEVER_ASK_HACK" = .1 ] && def="-"
+	[ -z "$old" -a ".$NEVER_ASK_HACK" = .1 ] && old="$def"
 	while :; do
           if [ "$old" = "?" ]; then
              readln "$1 ($2) [$def] " "$def" ""
@@ -474,6 +491,7 @@
 	val=""
 	while [ -z "$val" ]; do
 		ambg=n
+		[ -z "$old" -a ".$NEVER_ASK_HACK" = .1 ] && old="$def"
 		readln "$question ($names) [$def] " "$def" "$old"
 		ans=$(echo $ans | tr a-z A-Z)
 		set -- $choices
@@ -534,11 +552,19 @@
 echo "#define AUTOCONF_INCLUDED" >> $CONFIG_H
 
 DEFAULT=""
-if [ "$1" = "-d" ] ; then
+ALL_MODS_HACK="0"
+NEVER_ASK_HACK="0"
+
+if [ "$1" = "-d" -o "$1" = "-D" -o "$1" = "-m" -o "$1" = "-M" ] ; then
+	[ "$1" = "-D" -o "$1" = "-M" ] && NEVER_ASK_HACK="1"
+	[ "$1" = "-m" -o "$1" = "-M" ] && ALL_MODS_HACK="1"
 	DEFAULT="-d"
 	shift
 fi
 
+[ $NEVER_ASK_HACK = 1 ] && echo "Debug: NEVER_ASK_HACK active."
+[ $ALL_MODS_HACK = 1 ] && echo "Debug: ALL_MODS_HACK active."
+
 CONFIG_IN=./config.in
 if [ "$1" != "" ] ; then
 	CONFIG_IN=$1
--- ./Makefile.orig	2003-01-13 23:24:57.000000000 +0100
+++ ./Makefile	2003-01-13 23:25:56.000000000 +0100
@@ -301,6 +301,9 @@
 oldconfig: symlinks
 	$(CONFIG_SHELL) scripts/Configure -d arch/$(ARCH)/config.in
 
+no2modconfig: symlinks
+	$(CONFIG_SHELL) scripts/Configure -m arch/$(ARCH)/config.in
+
 xconfig: symlinks
 	$(MAKE) -C scripts kconfig.tk
 	wish -f scripts/kconfig.tk

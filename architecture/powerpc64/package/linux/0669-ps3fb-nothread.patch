--- linux-5.6/drivers/video/fbdev/ps3fb.c.vanilla	2020-04-05 20:51:28.888578124 +0200
+++ linux-5.6/drivers/video/fbdev/ps3fb.c	2020-04-05 21:22:27.948579025 +0200
@@ -39,7 +39,6 @@
 #include <linux/interrupt.h>
 #include <linux/console.h>
 #include <linux/ioctl.h>
-#include <linux/kthread.h>
 #include <linux/freezer.h>
 #include <linux/uaccess.h>
 #include <linux/fb.h>
@@ -166,8 +165,6 @@
 	atomic_t ext_flip;	/* on/off flip with vsync */
 	atomic_t f_count;	/* fb_open count */
 	int is_blanked;
-	int is_kicked;
-	struct task_struct *task;
 };
 static struct ps3fb_priv ps3fb;
 static int ps3fb_gpu_major;
@@ -1277,25 +1274,6 @@
 	return retval;
 }
 
-static int ps3fbd(void *arg)
-{
-	struct fb_info *info = arg;
-
-	set_freezable();
-	while (!kthread_should_stop()) {
-		try_to_freeze();
-		set_current_state(TASK_INTERRUPTIBLE);
-		if (ps3fb.is_kicked) {
-			ps3fb.is_kicked = 0;
-			console_lock();
-			ps3fb_sync(info, 0);	/* single buffer */
-			console_unlock();
-		}
-		schedule();
-	}
-	return 0;
-}
-
 static void ps3fb_print_graph_exception_info(struct device *dev,
 					     struct gpu_graph_exception_info *info)
 {
@@ -1346,11 +1324,6 @@
 	if (v1 & (1 << GPU_INTR_STATUS_VSYNC_1)) {
 		/* VSYNC */
 		ps3fb.vblank_count = head->vblank_count;
-		if (ps3fb.task && !ps3fb.is_blanked &&
-		    !atomic_read(&ps3fb.ext_flip)) {
-			ps3fb.is_kicked = 1;
-			wake_up_process(ps3fb.task);
-		}
 		wake_up_interruptible(&ps3fb.wait_vsync);
 	}
 
@@ -1472,7 +1445,6 @@
 	struct gpu_driver_info *dinfo;
 	void *fb_start;
 	int status;
-	struct task_struct *task;
 	unsigned long max_ps3fb_size;
 
 	if (ps3fb_videomemory.size < GPU_CMD_BUF_SIZE) {
@@ -1661,10 +1633,10 @@
 	 * frame buffer at offset GPU_FB_START and save some precious XDR
 	 * memory
 	 */
-	fb_start = ioremap_wc(ps3fb.vram_lpar, ps3fb_videomemory.size); //ps3fb_videomemory.address + GPU_FB_START;
+	fb_start = ioremap_wc(ps3fb.vram_lpar, 16*1024*1024); //ps3fb_videomemory.address + GPU_FB_START;
 	info->screen_base = (char __force __iomem *)fb_start;
 	info->fix.smem_start = ps3fb.vram_lpar; //__pa(fb_start);
-	info->fix.smem_len = ps3fb_videomemory.size - GPU_FB_START;
+	info->fix.smem_len = 16*1024*1024; // ps3fb_videomemory.size - GPU_FB_START;
 
 	info->pseudo_palette = par->pseudo_palette;
 	info->flags = FBINFO_DEFAULT | // FBINFO_READS_FAST |
@@ -1694,14 +1666,6 @@
 		 dev_driver_string(info->dev), dev_name(info->dev),
 		 info->fix.smem_len >> 10);
 
-	task = kthread_run(ps3fbd, info, DEVICE_NAME);
-	if (IS_ERR(task)) {
-		retval = PTR_ERR(task);
-		goto err_unregister_framebuffer;
-	}
-
-	ps3fb.task = task;
-
 	/* FIFO access */
 	status = register_chrdev(ps3fb_gpu_major, DEVICE_NAME, &ps3fb_gpu_fops);
 	if (status < 0) {
@@ -1758,11 +1722,6 @@
 	atomic_inc(&ps3fb.ext_flip);	/* flip off */
 	ps3fb.dinfo->irq.mask = 0;
 
-	if (ps3fb.task) {
-		struct task_struct *task = ps3fb.task;
-		ps3fb.task = NULL;
-		kthread_stop(task);
-	}
 	if (ps3fb.irq_no) {
 		free_irq(ps3fb.irq_no, &dev->core);
 		ps3_irq_plug_destroy(ps3fb.irq_no);
--- ./drivers/video/fbdev/ps3fb.c.vanilla	2020-04-05 22:36:41.628581185 +0200
+++ ./drivers/video/fbdev/ps3fb.c	2020-04-05 22:46:06.408581459 +0200
@@ -755,8 +755,8 @@
 {
 	int status;
 
+#if 0
 	src_offset += GPU_FB_START;
-
 	mutex_lock(&ps3_gpu_mutex);
 	status = ps3fb_fb_blit(&ps3fb.fifo,
 			       dst_offset,
@@ -769,6 +769,8 @@
 	if (status)
 		dev_err(dev, "%s: ps3fb_fb_blit failed: %d\n", __func__,
 			status);
+#endif
+
 #ifdef HEAD_A
 	status = lv1_gpu_display_flip(ps3fb.context_handle, 0, frame_offset);
 	if (status)
@@ -957,21 +959,11 @@
 		par->mode_id = par->new_mode_id;
 	}
 
-	/* Clear XDR frame buffer memory */
+	/* Clear DDR frame buffer memory */
 	memset((void __force *)info->screen_base, 0, info->fix.smem_len);
 
-	/* Clear DDR frame buffer memory */
-	lines = vmode->yres * par->num_frames;
-	if (par->full_offset)
-		lines++;
-	maxlines = info->fix.smem_len / ddr_line_length;
-	for (dst = 0; lines; dst += maxlines * ddr_line_length) {
-		unsigned int l = min(lines, maxlines);
-		ps3fb_sync_image(info->device, 0, dst, 0, vmode->xres, l,
+	ps3fb_sync_image(info->device, 0, dst, 0, vmode->xres, 0,
 				 ddr_line_length, ddr_line_length);
-		lines -= l;
-	}
-
 
 	/* test cursor init here */
 	int status = lv1_gpu_context_attribute(ps3fb.context_handle, 0x10b, 0/*head*/, 1, 0, 0); /* init */
